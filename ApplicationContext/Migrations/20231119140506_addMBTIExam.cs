using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace ApplicationContext.Migrations
{
    /// <inheritdoc />
    public partial class addMBTIExam : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Attempts",
                keyColumn: "Id",
                keyValue: new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                columns: new[] { "CreatedDate", "ExamDate" },
                values: new object[] { new DateTime(2023, 11, 19, 14, 5, 5, 860, DateTimeKind.Utc).AddTicks(7511), new DateTime(2023, 11, 20, 14, 5, 5, 860, DateTimeKind.Utc).AddTicks(7516) });

            migrationBuilder.InsertData(
                table: "MBTI_Exams",
                columns: new[] { "Id", "CreatedBy", "Note", "NumberOfQuestion" },
                values: new object[] { 1, null, "MBTI Exam", 12 });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("09d2d924-8c18-4e49-bbc4-f67c0204d7af"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 160, 150, 2, 198, 129, 220, 163, 183, 219, 167, 237, 247, 105, 67, 5, 71, 68, 58, 113, 152, 171, 212, 215, 42, 46, 199, 6, 140, 209, 169, 123, 233, 171, 79, 18, 78, 51, 217, 131, 94, 196, 4, 132, 253, 193, 31, 44, 96, 32, 126, 221, 187, 135, 103, 72, 99, 136, 132, 5, 117, 23, 235, 156, 250 }, new byte[] { 79, 207, 254, 130, 97, 24, 44, 68, 217, 89, 10, 234, 89, 52, 106, 223, 137, 68, 201, 140, 135, 42, 106, 137, 242, 160, 17, 197, 246, 165, 148, 106, 169, 198, 229, 80, 77, 55, 138, 243, 109, 131, 249, 120, 12, 0, 196, 46, 173, 41, 201, 95, 132, 44, 55, 103, 5, 53, 176, 232, 44, 72, 248, 92, 165, 150, 137, 117, 154, 207, 8, 101, 153, 6, 246, 150, 200, 235, 162, 194, 125, 171, 130, 102, 233, 207, 89, 166, 210, 158, 157, 135, 37, 71, 11, 239, 190, 86, 185, 115, 181, 22, 203, 217, 137, 246, 110, 86, 203, 15, 236, 127, 79, 44, 190, 15, 240, 193, 89, 159, 235, 179, 92, 83, 136, 164, 118, 14 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1a022b66-8b1c-461a-be8a-ec2a7b0741e9"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 151, 93, 241, 106, 146, 87, 213, 176, 42, 88, 215, 216, 68, 208, 231, 178, 32, 15, 150, 119, 131, 146, 140, 31, 69, 118, 111, 85, 228, 120, 170, 131, 156, 125, 84, 248, 218, 184, 60, 4, 195, 114, 134, 221, 156, 234, 69, 82, 207, 210, 57, 56, 5, 18, 73, 38, 145, 197, 80, 33, 175, 215, 67, 49 }, new byte[] { 49, 253, 177, 98, 25, 217, 199, 87, 181, 153, 27, 237, 59, 146, 117, 100, 23, 103, 76, 180, 114, 72, 234, 160, 174, 128, 223, 127, 164, 197, 143, 210, 51, 191, 236, 185, 64, 152, 12, 197, 80, 173, 249, 131, 68, 129, 224, 101, 253, 27, 48, 113, 20, 196, 124, 222, 14, 220, 111, 13, 138, 5, 175, 251, 212, 156, 113, 76, 26, 146, 129, 123, 201, 95, 253, 242, 138, 31, 52, 160, 68, 74, 211, 241, 65, 236, 241, 18, 253, 10, 168, 184, 50, 37, 73, 65, 225, 137, 225, 62, 187, 124, 140, 19, 193, 159, 7, 59, 21, 166, 25, 107, 147, 164, 223, 124, 47, 169, 242, 91, 79, 206, 206, 100, 26, 188, 160, 79 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1eff27be-f2ea-4df7-93a5-33c7ba5e2d98"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 8, 126, 72, 229, 91, 180, 62, 79, 245, 121, 145, 133, 219, 127, 144, 31, 58, 231, 152, 83, 188, 38, 205, 120, 140, 3, 116, 158, 211, 42, 25, 157, 243, 142, 181, 135, 189, 102, 27, 244, 31, 39, 214, 232, 40, 113, 224, 185, 144, 194, 129, 185, 119, 117, 100, 244, 47, 10, 168, 245, 1, 161, 193, 205 }, new byte[] { 27, 90, 230, 17, 120, 20, 164, 0, 78, 240, 224, 176, 38, 3, 143, 73, 62, 212, 91, 42, 122, 196, 98, 31, 8, 245, 46, 206, 32, 177, 167, 89, 193, 239, 138, 245, 136, 151, 193, 125, 153, 107, 71, 34, 109, 21, 217, 109, 59, 59, 218, 150, 99, 204, 173, 187, 22, 138, 242, 116, 114, 213, 108, 37, 2, 167, 58, 78, 118, 157, 96, 176, 172, 76, 106, 3, 175, 17, 73, 176, 238, 38, 200, 151, 88, 80, 112, 1, 28, 136, 128, 187, 126, 190, 119, 165, 180, 188, 35, 63, 98, 237, 207, 57, 123, 171, 222, 67, 148, 205, 139, 233, 211, 44, 227, 138, 147, 46, 112, 191, 201, 3, 193, 31, 77, 106, 6, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("24d15338-310e-4d3d-9e39-86444fc0ddec"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 237, 174, 93, 51, 54, 86, 216, 98, 232, 69, 198, 126, 192, 99, 151, 156, 149, 17, 184, 79, 76, 135, 36, 143, 211, 157, 21, 242, 229, 131, 67, 32, 101, 35, 68, 188, 40, 252, 232, 229, 188, 126, 137, 29, 26, 113, 98, 255, 113, 205, 221, 127, 136, 190, 216, 97, 212, 137, 11, 137, 27, 31, 236, 222 }, new byte[] { 214, 24, 108, 226, 154, 104, 56, 62, 101, 221, 158, 124, 94, 238, 195, 73, 103, 132, 85, 51, 208, 87, 15, 195, 204, 68, 165, 30, 90, 146, 132, 179, 75, 16, 114, 250, 106, 134, 56, 56, 18, 154, 242, 105, 20, 13, 179, 78, 49, 168, 44, 158, 18, 95, 187, 204, 246, 229, 111, 108, 35, 151, 244, 208, 184, 146, 34, 74, 58, 241, 18, 171, 253, 162, 57, 96, 0, 52, 87, 214, 41, 5, 240, 173, 165, 98, 166, 35, 119, 231, 57, 118, 131, 72, 215, 75, 228, 138, 217, 198, 122, 49, 203, 196, 15, 139, 252, 176, 119, 249, 22, 47, 81, 41, 51, 230, 51, 207, 243, 85, 101, 234, 161, 48, 159, 180, 187, 211 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("312f4251-1f9f-4f80-b2ad-968fc339b134"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 104, 129, 96, 130, 132, 50, 227, 87, 57, 121, 168, 107, 44, 180, 230, 49, 183, 215, 143, 104, 72, 75, 147, 109, 5, 113, 160, 217, 224, 0, 52, 134, 171, 202, 157, 60, 198, 231, 205, 105, 27, 170, 152, 74, 180, 29, 181, 26, 196, 245, 212, 179, 186, 54, 185, 151, 3, 2, 129, 52, 183, 73, 29, 42 }, new byte[] { 202, 208, 38, 170, 92, 105, 188, 245, 109, 153, 224, 112, 50, 251, 217, 57, 225, 42, 69, 83, 127, 146, 53, 255, 217, 172, 186, 194, 26, 173, 142, 215, 238, 235, 187, 253, 149, 171, 56, 88, 85, 64, 76, 67, 251, 74, 12, 241, 120, 141, 221, 165, 183, 205, 156, 80, 221, 86, 253, 160, 200, 157, 30, 69, 155, 46, 145, 166, 90, 156, 36, 243, 23, 110, 254, 207, 142, 247, 249, 174, 197, 141, 62, 84, 177, 238, 118, 84, 84, 75, 133, 78, 161, 213, 36, 245, 131, 187, 33, 37, 137, 251, 253, 57, 86, 88, 163, 200, 143, 88, 20, 14, 218, 17, 136, 246, 217, 214, 156, 199, 110, 85, 158, 198, 182, 122, 225, 85 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("324ed66e-e8de-4710-a139-18c50b442945"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 86, 228, 194, 223, 159, 93, 174, 166, 199, 210, 108, 171, 205, 177, 212, 206, 9, 124, 142, 36, 210, 168, 131, 22, 25, 25, 120, 87, 89, 124, 47, 72, 73, 186, 80, 169, 153, 176, 125, 111, 151, 61, 206, 185, 243, 18, 145, 90, 137, 178, 224, 142, 15, 201, 178, 127, 198, 131, 81, 196, 216, 107, 174, 79 }, new byte[] { 241, 78, 2, 54, 61, 127, 223, 236, 190, 12, 65, 37, 104, 234, 222, 47, 8, 205, 181, 233, 93, 70, 62, 115, 123, 33, 82, 165, 239, 168, 35, 34, 24, 212, 126, 170, 220, 126, 106, 17, 172, 78, 59, 111, 218, 145, 87, 50, 80, 142, 226, 181, 119, 116, 46, 76, 2, 219, 84, 123, 211, 101, 121, 113, 81, 124, 35, 206, 107, 13, 220, 200, 164, 120, 76, 121, 136, 220, 21, 206, 254, 29, 93, 220, 250, 143, 60, 25, 149, 211, 207, 151, 120, 73, 215, 66, 80, 75, 235, 20, 48, 135, 228, 63, 103, 80, 200, 189, 234, 233, 133, 29, 69, 220, 99, 78, 7, 33, 4, 238, 192, 38, 227, 158, 176, 29, 25, 69 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("4c5d8bb2-b66c-49e7-982b-685ed23d1be8"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 253, 81, 51, 41, 146, 8, 138, 194, 100, 42, 210, 189, 156, 176, 253, 203, 149, 203, 92, 164, 25, 73, 24, 3, 214, 181, 119, 114, 38, 89, 64, 49, 129, 132, 235, 16, 177, 18, 163, 29, 120, 235, 18, 32, 147, 28, 114, 189, 252, 6, 178, 33, 186, 161, 168, 254, 115, 157, 174, 103, 35, 136, 61 }, new byte[] { 185, 81, 29, 249, 124, 50, 236, 143, 78, 146, 218, 81, 218, 32, 145, 190, 154, 179, 126, 255, 36, 207, 152, 5, 239, 255, 42, 27, 47, 42, 102, 167, 231, 222, 143, 58, 88, 199, 33, 252, 217, 137, 1, 160, 140, 149, 230, 121, 149, 67, 79, 180, 191, 31, 28, 139, 225, 86, 151, 23, 197, 204, 101, 34, 70, 112, 194, 1, 17, 169, 157, 116, 123, 42, 27, 151, 85, 242, 155, 176, 238, 146, 154, 25, 98, 132, 42, 247, 112, 107, 32, 54, 218, 138, 3, 205, 194, 118, 72, 129, 25, 6, 197, 234, 31, 176, 124, 169, 199, 195, 51, 211, 49, 86, 75, 27, 203, 39, 8, 176, 191, 107, 51, 111, 42, 10, 96, 12 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5b670b4c-a8dc-4cca-8d2b-0bb45d69a702"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 117, 151, 224, 132, 227, 60, 221, 45, 43, 154, 177, 89, 16, 52, 134, 238, 142, 212, 193, 218, 221, 9, 186, 100, 197, 59, 183, 217, 201, 186, 6, 170, 150, 133, 193, 161, 215, 105, 89, 176, 247, 76, 52, 89, 207, 62, 28, 161, 215, 165, 131, 230, 189, 159, 152, 180, 67, 165, 153, 96, 50, 139, 38, 214 }, new byte[] { 11, 35, 240, 206, 144, 65, 101, 16, 94, 98, 150, 179, 85, 123, 60, 70, 123, 81, 147, 145, 91, 240, 243, 73, 114, 125, 122, 3, 244, 112, 116, 86, 76, 121, 215, 84, 33, 232, 237, 208, 206, 1, 58, 111, 208, 138, 29, 126, 253, 203, 23, 250, 110, 22, 250, 182, 60, 184, 207, 140, 56, 212, 4, 202, 31, 46, 30, 199, 57, 71, 168, 99, 77, 102, 115, 136, 106, 16, 48, 153, 80, 203, 54, 68, 2, 159, 71, 129, 44, 165, 143, 191, 233, 188, 186, 65, 165, 129, 62, 25, 31, 91, 211, 208, 27, 12, 24, 123, 126, 57, 129, 58, 50, 10, 226, 219, 191, 125, 159, 160, 14, 120, 119, 146, 240, 192, 87, 248 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5ddbd197-9ac9-42fb-bdfe-dee7dbe35efd"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 73, 112, 199, 181, 169, 246, 147, 219, 114, 246, 221, 177, 203, 79, 39, 192, 190, 199, 36, 245, 112, 76, 80, 58, 231, 43, 198, 147, 180, 166, 115, 172, 163, 84, 200, 154, 217, 90, 107, 74, 210, 73, 146, 207, 141, 146, 194, 37, 95, 245, 7, 203, 38, 242, 80, 186, 224, 131, 250, 171, 187, 149, 57, 109 }, new byte[] { 226, 179, 224, 68, 153, 163, 165, 199, 41, 199, 223, 7, 54, 48, 94, 102, 171, 169, 182, 18, 83, 65, 140, 255, 3, 105, 83, 49, 2, 9, 248, 122, 103, 65, 239, 106, 76, 26, 8, 129, 102, 13, 5, 168, 95, 70, 29, 155, 169, 139, 142, 16, 156, 1, 235, 233, 30, 10, 178, 21, 171, 10, 4, 44, 6, 12, 177, 61, 218, 161, 36, 166, 158, 175, 170, 65, 121, 143, 76, 219, 21, 35, 138, 74, 85, 189, 223, 104, 161, 84, 93, 240, 85, 117, 138, 154, 80, 240, 175, 170, 88, 104, 73, 4, 230, 157, 150, 135, 151, 187, 83, 247, 169, 193, 142, 208, 11, 31, 148, 31, 211, 119, 19, 83, 20, 83, 184, 41 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("666bc14a-4078-4619-85f1-bc63033c556f"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 78, 13, 42, 194, 251, 113, 186, 200, 53, 22, 252, 253, 140, 251, 170, 121, 200, 38, 127, 66, 92, 197, 191, 14, 29, 86, 37, 14, 155, 32, 250, 248, 195, 8, 241, 93, 108, 175, 250, 184, 161, 139, 137, 13, 215, 7, 15, 240, 109, 197, 65, 121, 131, 195, 115, 170, 159, 0, 4, 53, 188, 1, 69, 188 }, new byte[] { 66, 230, 95, 36, 81, 180, 49, 133, 133, 34, 111, 214, 11, 135, 182, 210, 144, 94, 20, 175, 238, 48, 193, 219, 15, 23, 83, 178, 220, 144, 32, 106, 173, 170, 93, 69, 81, 85, 164, 173, 169, 51, 65, 235, 25, 134, 25, 147, 31, 19, 12, 122, 38, 107, 177, 39, 3, 211, 234, 137, 22, 111, 66, 252, 21, 115, 100, 183, 188, 125, 243, 36, 141, 37, 37, 205, 32, 184, 85, 181, 79, 37, 47, 62, 57, 96, 135, 41, 97, 31, 158, 105, 148, 83, 117, 6, 28, 61, 251, 225, 55, 122, 236, 19, 179, 214, 33, 105, 141, 184, 91, 132, 189, 252, 197, 154, 179, 42, 202, 87, 183, 200, 239, 38, 4, 147, 17, 120 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("6d6ad990-1ff2-445b-8496-d766048e25cf"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 33, 191, 103, 224, 82, 9, 21, 187, 113, 114, 98, 139, 195, 255, 66, 226, 221, 149, 220, 0, 162, 210, 220, 140, 255, 66, 119, 198, 91, 220, 177, 72, 151, 1, 64, 138, 168, 114, 26, 168, 172, 107, 243, 97, 145, 158, 251, 125, 240, 137, 0, 17, 142, 178, 54, 248, 171, 181, 76, 125, 156, 149, 185, 141 }, new byte[] { 181, 228, 155, 216, 2, 229, 28, 145, 233, 76, 200, 32, 7, 154, 229, 34, 35, 89, 170, 39, 81, 204, 44, 199, 31, 196, 183, 202, 233, 217, 187, 66, 62, 247, 80, 194, 165, 203, 127, 169, 13, 123, 91, 122, 96, 90, 83, 50, 168, 144, 149, 211, 115, 77, 252, 165, 195, 10, 119, 172, 129, 87, 0, 196, 31, 253, 179, 182, 158, 65, 196, 160, 146, 193, 227, 107, 18, 76, 243, 215, 111, 104, 152, 190, 203, 174, 79, 107, 38, 242, 238, 146, 139, 52, 185, 223, 65, 78, 215, 172, 104, 212, 109, 217, 199, 229, 13, 109, 17, 118, 159, 213, 176, 169, 205, 179, 226, 55, 41, 40, 190, 148, 135, 42, 135, 238, 83, 137 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("84a7c64a-feed-4fb2-8b1e-24e10aa382b2"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 26, 11, 154, 202, 18, 171, 3, 37, 134, 9, 62, 194, 207, 168, 52, 108, 143, 241, 57, 78, 101, 118, 228, 98, 27, 107, 38, 252, 230, 168, 156, 149, 149, 28, 151, 222, 246, 183, 209, 255, 123, 62, 130, 84, 53, 145, 245, 217, 3, 67, 78, 175, 198, 44, 101, 164, 117, 208, 82, 135, 134, 23, 178, 15 }, new byte[] { 17, 61, 173, 197, 41, 146, 8, 65, 2, 194, 119, 120, 116, 136, 81, 190, 34, 21, 27, 126, 29, 210, 131, 51, 165, 211, 187, 38, 67, 165, 43, 39, 194, 28, 107, 57, 101, 142, 225, 4, 97, 71, 28, 176, 60, 145, 173, 84, 129, 186, 44, 141, 38, 56, 43, 80, 188, 17, 19, 250, 12, 187, 159, 96, 222, 59, 40, 215, 40, 26, 230, 202, 64, 147, 48, 242, 82, 237, 176, 55, 34, 67, 227, 0, 176, 23, 89, 49, 24, 231, 249, 56, 93, 224, 203, 242, 197, 10, 228, 40, 90, 127, 83, 182, 149, 154, 210, 113, 84, 40, 171, 224, 227, 202, 252, 71, 171, 91, 63, 186, 219, 138, 162, 160, 60, 243, 159, 169 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("8f744e72-da12-4038-a54e-7512a0ada884"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 0, 105, 89, 105, 112, 87, 11, 64, 233, 224, 23, 184, 52, 46, 93, 54, 69, 127, 239, 78, 116, 32, 231, 235, 85, 133, 142, 64, 103, 230, 234, 234, 97, 200, 89, 121, 149, 202, 234, 101, 252, 236, 184, 215, 17, 44, 101, 46, 47, 130, 77, 35, 65, 65, 75, 104, 49, 44, 213, 230, 4, 214, 219, 3 }, new byte[] { 218, 165, 227, 108, 44, 149, 195, 98, 197, 201, 11, 230, 2, 206, 236, 106, 42, 90, 242, 114, 21, 35, 138, 148, 201, 1, 93, 126, 133, 159, 123, 202, 32, 49, 210, 18, 118, 242, 46, 5, 37, 140, 133, 199, 242, 76, 114, 7, 18, 126, 196, 98, 95, 123, 111, 63, 108, 226, 251, 185, 204, 141, 242, 203, 235, 182, 83, 108, 72, 120, 210, 139, 43, 196, 107, 50, 77, 159, 238, 109, 207, 158, 49, 162, 181, 156, 190, 27, 109, 245, 176, 66, 104, 235, 54, 73, 143, 89, 27, 216, 215, 134, 148, 146, 20, 184, 69, 115, 214, 142, 6, 74, 16, 62, 244, 20, 129, 218, 82, 249, 190, 32, 136, 127, 94, 82, 176, 215 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("96e0097f-ce73-4950-8ee2-89b313581154"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 35, 103, 206, 95, 16, 124, 5, 143, 210, 232, 253, 1, 120, 128, 110, 192, 7, 58, 150, 145, 213, 109, 177, 213, 7, 186, 76, 69, 26, 20, 104, 47, 226, 46, 227, 13, 1, 201, 183, 68, 220, 172, 193, 228, 252, 17, 150, 129, 244, 190, 252, 225, 182, 105, 168, 27, 98, 65, 16, 60, 31, 60, 147, 116 }, new byte[] { 44, 9, 175, 169, 73, 254, 175, 80, 221, 249, 215, 143, 253, 29, 223, 254, 163, 79, 169, 178, 65, 125, 1, 5, 104, 209, 89, 128, 135, 119, 117, 246, 164, 97, 237, 53, 160, 105, 87, 163, 45, 136, 211, 174, 185, 193, 88, 129, 101, 99, 118, 249, 147, 42, 246, 53, 213, 6, 93, 113, 34, 137, 161, 218, 219, 98, 2, 53, 198, 114, 120, 80, 59, 141, 67, 38, 206, 118, 119, 117, 21, 221, 122, 126, 149, 29, 4, 239, 16, 7, 14, 7, 82, 181, 250, 141, 44, 103, 26, 109, 124, 24, 103, 82, 121, 63, 102, 223, 180, 228, 2, 93, 126, 181, 15, 232, 40, 119, 126, 159, 98, 240, 190, 218, 11, 11, 255, 191 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("99c5faa8-d3fe-45b3-a871-86117ef93111"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 131, 194, 228, 205, 168, 184, 45, 234, 242, 194, 133, 111, 101, 192, 202, 74, 249, 251, 49, 65, 119, 246, 88, 26, 162, 63, 112, 35, 90, 161, 254, 49, 118, 115, 105, 19, 189, 156, 134, 194, 242, 207, 150, 14, 210, 181, 24, 189, 114, 79, 216, 198, 79, 154, 166, 138, 85, 222, 43, 4, 61, 245, 222, 77 }, new byte[] { 118, 111, 105, 78, 18, 39, 111, 231, 82, 93, 174, 148, 98, 209, 143, 102, 21, 232, 132, 151, 172, 96, 239, 65, 245, 179, 221, 213, 127, 242, 189, 209, 160, 133, 34, 4, 126, 11, 89, 42, 13, 29, 150, 61, 177, 62, 104, 81, 250, 113, 42, 133, 80, 228, 70, 20, 115, 242, 139, 237, 99, 74, 17, 230, 189, 236, 60, 81, 60, 86, 37, 93, 185, 92, 69, 173, 66, 230, 102, 222, 211, 1, 254, 71, 190, 107, 167, 75, 39, 23, 236, 21, 184, 161, 207, 32, 73, 198, 183, 152, 139, 229, 120, 115, 151, 251, 146, 138, 63, 252, 102, 222, 231, 120, 255, 19, 239, 9, 60, 9, 155, 74, 115, 238, 12, 54, 50, 63 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 216, 196, 145, 239, 181, 47, 177, 255, 26, 103, 105, 78, 255, 37, 50, 35, 146, 15, 167, 169, 12, 202, 64, 201, 70, 115, 128, 164, 235, 84, 25, 136, 219, 17, 23, 193, 209, 1, 31, 85, 228, 161, 23, 147, 173, 230, 167, 106, 60, 105, 195, 179, 108, 231, 89, 150, 123, 222, 58, 165, 16, 42, 30, 80 }, new byte[] { 149, 70, 137, 48, 59, 122, 92, 133, 96, 193, 98, 24, 42, 40, 128, 235, 151, 82, 171, 87, 210, 210, 108, 252, 164, 142, 217, 241, 168, 236, 173, 169, 56, 6, 111, 255, 234, 236, 189, 203, 14, 88, 11, 63, 252, 138, 86, 217, 107, 11, 170, 4, 109, 48, 156, 73, 12, 55, 11, 195, 127, 84, 197, 206, 213, 202, 151, 180, 129, 5, 179, 67, 208, 21, 3, 155, 84, 13, 52, 177, 53, 138, 19, 186, 85, 139, 47, 75, 133, 164, 156, 185, 177, 139, 45, 21, 207, 9, 214, 208, 186, 243, 64, 85, 83, 65, 72, 210, 110, 179, 168, 90, 202, 13, 143, 80, 80, 203, 200, 120, 52, 167, 83, 196, 195, 93, 49, 14 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c30d316f-9c93-42c9-8e72-0b3efa896192"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 200, 70, 8, 85, 139, 122, 90, 91, 231, 184, 131, 195, 64, 88, 183, 23, 135, 121, 181, 121, 114, 122, 160, 176, 97, 13, 248, 59, 11, 163, 73, 23, 134, 73, 191, 11, 185, 159, 175, 108, 180, 175, 169, 126, 132, 36, 189, 127, 153, 84, 44, 179, 185, 137, 112, 130, 6, 141, 178, 203, 136, 237, 169, 24 }, new byte[] { 165, 63, 13, 9, 136, 56, 195, 164, 75, 154, 9, 71, 148, 250, 79, 193, 10, 107, 220, 97, 133, 122, 144, 73, 155, 182, 32, 126, 2, 118, 86, 20, 71, 59, 28, 35, 134, 169, 245, 102, 47, 41, 240, 53, 170, 225, 31, 227, 234, 37, 88, 179, 56, 195, 90, 180, 114, 88, 81, 62, 162, 0, 162, 106, 51, 57, 108, 59, 79, 82, 209, 104, 48, 36, 138, 170, 0, 65, 5, 104, 168, 175, 168, 112, 174, 165, 215, 16, 51, 154, 130, 232, 10, 52, 112, 64, 117, 8, 113, 190, 110, 233, 126, 214, 25, 234, 50, 36, 65, 110, 253, 17, 0, 17, 109, 138, 74, 63, 151, 207, 107, 54, 57, 161, 80, 33, 139, 235 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c5eacfa9-ec87-4150-bedc-ca141458b5a3"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 2, 99, 27, 31, 108, 8, 232, 15, 67, 69, 14, 9, 213, 204, 140, 24, 158, 187, 155, 224, 122, 226, 119, 162, 117, 210, 175, 6, 34, 68, 84, 0, 135, 221, 101, 21, 200, 154, 70, 135, 37, 176, 106, 195, 10, 34, 102, 0, 5, 179, 129, 55, 97, 211, 123, 15, 165, 255, 228, 251, 246, 46, 25, 60 }, new byte[] { 244, 76, 130, 27, 43, 7, 104, 14, 109, 116, 142, 81, 189, 58, 111, 52, 20, 36, 49, 52, 23, 193, 99, 172, 29, 224, 149, 228, 170, 25, 42, 145, 203, 212, 152, 156, 220, 239, 245, 72, 130, 205, 187, 162, 70, 16, 236, 40, 128, 50, 207, 244, 143, 48, 18, 32, 22, 213, 168, 136, 109, 206, 201, 167, 228, 163, 49, 2, 225, 140, 89, 144, 9, 27, 187, 248, 58, 173, 227, 33, 71, 113, 109, 98, 53, 204, 235, 231, 129, 150, 170, 244, 230, 132, 74, 63, 1, 36, 11, 47, 86, 206, 125, 82, 177, 231, 174, 72, 20, 10, 56, 243, 213, 220, 239, 222, 162, 81, 98, 106, 134, 204, 238, 47, 61, 77, 124, 157 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("cb235a17-fd24-48cf-ba34-ac5ac698a832"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 213, 187, 239, 229, 86, 91, 237, 120, 122, 179, 157, 72, 206, 91, 140, 123, 128, 102, 117, 152, 144, 228, 244, 9, 212, 158, 231, 100, 7, 93, 18, 217, 135, 74, 251, 177, 209, 56, 249, 195, 158, 39, 11, 22, 252, 143, 43, 160, 84, 214, 154, 226, 203, 42, 45, 117, 194, 6, 195, 205, 8, 173, 109, 253 }, new byte[] { 8, 152, 88, 154, 23, 79, 148, 202, 139, 114, 184, 168, 47, 242, 122, 128, 207, 111, 72, 196, 200, 129, 239, 104, 233, 147, 196, 199, 191, 173, 239, 18, 216, 100, 128, 61, 41, 34, 241, 34, 122, 118, 176, 183, 239, 40, 36, 222, 235, 121, 240, 48, 47, 189, 247, 186, 49, 66, 126, 91, 226, 30, 150, 206, 91, 243, 115, 101, 173, 144, 53, 19, 51, 90, 171, 252, 215, 134, 155, 170, 156, 140, 244, 121, 100, 181, 79, 144, 134, 226, 53, 91, 91, 246, 156, 172, 126, 172, 142, 234, 173, 238, 208, 77, 165, 222, 52, 29, 226, 158, 91, 210, 37, 50, 246, 242, 3, 77, 189, 173, 209, 176, 90, 120, 218, 100, 32, 97 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("d406be20-d364-43c5-84bf-4d3e3be43ae0"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 179, 205, 62, 177, 100, 254, 164, 102, 181, 238, 144, 3, 175, 134, 236, 157, 167, 13, 50, 169, 129, 225, 96, 175, 13, 22, 226, 248, 124, 226, 52, 105, 0, 70, 224, 161, 143, 209, 97, 195, 4, 11, 235, 198, 102, 53, 142, 234, 125, 109, 186, 115, 35, 181, 161, 139, 225, 176, 181, 46, 84, 26, 20, 173 }, new byte[] { 163, 250, 0, 225, 254, 112, 60, 159, 100, 232, 111, 39, 218, 240, 208, 26, 87, 192, 89, 25, 200, 175, 137, 4, 47, 33, 247, 121, 66, 204, 120, 174, 120, 18, 65, 66, 41, 48, 209, 246, 100, 244, 218, 114, 98, 91, 31, 62, 167, 192, 40, 151, 167, 38, 64, 34, 96, 141, 14, 228, 116, 171, 155, 235, 152, 227, 133, 204, 208, 107, 252, 243, 163, 199, 250, 46, 122, 206, 218, 47, 233, 143, 89, 139, 232, 116, 184, 33, 99, 233, 163, 80, 28, 107, 195, 186, 96, 230, 202, 238, 18, 220, 147, 188, 213, 149, 231, 192, 198, 191, 213, 41, 195, 210, 199, 253, 127, 144, 126, 130, 253, 80, 9, 31, 225, 13, 67, 214 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("e798134f-8d1b-41aa-98c1-c8914240366d"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 133, 215, 240, 162, 6, 237, 162, 179, 119, 110, 150, 59, 210, 255, 33, 189, 79, 89, 185, 168, 72, 56, 191, 158, 121, 121, 177, 31, 59, 210, 5, 88, 112, 20, 118, 75, 117, 47, 203, 233, 51, 6, 12, 96, 97, 154, 55, 49, 14, 25, 161, 234, 147, 171, 62, 180, 92, 205, 24, 31, 32, 57, 248, 29 }, new byte[] { 60, 71, 226, 185, 243, 210, 151, 212, 64, 216, 229, 33, 199, 11, 72, 210, 24, 74, 138, 10, 158, 184, 161, 57, 188, 231, 224, 49, 95, 225, 127, 183, 112, 90, 91, 46, 124, 97, 190, 76, 202, 244, 53, 136, 60, 146, 106, 59, 144, 26, 77, 164, 41, 157, 94, 9, 152, 139, 140, 40, 88, 38, 188, 12, 242, 108, 250, 194, 24, 137, 33, 168, 176, 218, 201, 168, 229, 146, 68, 254, 112, 154, 29, 192, 252, 42, 210, 2, 201, 184, 29, 200, 189, 56, 113, 135, 223, 13, 143, 23, 132, 222, 165, 240, 69, 227, 165, 134, 21, 181, 201, 23, 17, 151, 240, 100, 255, 108, 109, 129, 171, 224, 14, 179, 56, 18, 202, 45 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f0b84747-fbed-43e1-9cd1-ecf2e1bd3cc0"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 214, 116, 5, 244, 21, 107, 251, 202, 193, 117, 216, 16, 81, 156, 79, 221, 86, 63, 151, 217, 59, 185, 34, 210, 2, 165, 211, 56, 173, 96, 72, 14, 76, 249, 90, 199, 178, 117, 46, 85, 208, 209, 33, 153, 54, 99, 200, 78, 147, 52, 163, 81, 65, 201, 100, 240, 186, 242, 223, 61, 81, 160, 117, 93 }, new byte[] { 91, 144, 229, 186, 23, 226, 136, 56, 69, 145, 131, 83, 81, 164, 75, 140, 246, 248, 87, 192, 83, 64, 99, 85, 48, 48, 149, 183, 72, 108, 220, 180, 195, 9, 115, 224, 49, 125, 133, 74, 102, 83, 177, 133, 165, 224, 36, 15, 190, 61, 41, 188, 155, 255, 202, 159, 31, 103, 35, 115, 46, 169, 130, 199, 217, 83, 8, 63, 9, 94, 134, 130, 28, 153, 82, 208, 118, 163, 65, 58, 40, 113, 148, 82, 13, 108, 144, 226, 180, 119, 208, 69, 222, 44, 187, 155, 208, 195, 176, 211, 134, 124, 176, 65, 193, 251, 123, 168, 207, 145, 108, 148, 51, 139, 12, 187, 248, 119, 170, 157, 78, 203, 20, 49, 97, 1, 126, 245 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f2dbff0f-0ccb-4cc3-91e3-d068431af710"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 59, 55, 10, 246, 141, 246, 135, 64, 224, 188, 142, 146, 250, 134, 240, 234, 194, 88, 136, 246, 29, 236, 57, 84, 164, 47, 152, 65, 159, 215, 8, 244, 69, 42, 79, 57, 90, 167, 181, 233, 162, 211, 162, 139, 220, 20, 2, 28, 121, 30, 201, 196, 229, 144, 118, 198, 245, 174, 13, 68, 220, 97, 112, 193 }, new byte[] { 39, 190, 78, 244, 251, 13, 25, 151, 190, 31, 89, 130, 46, 135, 76, 240, 105, 37, 18, 117, 234, 42, 79, 178, 84, 248, 250, 195, 141, 29, 2, 209, 103, 96, 195, 235, 251, 6, 36, 51, 103, 183, 88, 35, 116, 218, 193, 219, 63, 133, 250, 64, 172, 185, 153, 70, 247, 42, 124, 128, 123, 231, 250, 81, 57, 140, 37, 17, 160, 237, 168, 164, 120, 158, 230, 126, 63, 241, 177, 216, 173, 186, 95, 30, 29, 221, 16, 47, 83, 206, 229, 235, 183, 175, 190, 254, 180, 112, 247, 23, 222, 8, 16, 178, 202, 38, 16, 249, 60, 191, 163, 211, 135, 92, 54, 167, 136, 2, 224, 186, 111, 169, 34, 186, 2, 228, 218, 21 } });

            migrationBuilder.InsertData(
                table: "MBTI_ExamQuestions",
                columns: new[] { "Id", "ExamId", "QuestionId" },
                values: new object[,]
                {
                    { 1, 1, 1 },
                    { 2, 1, 2 },
                    { 3, 1, 3 },
                    { 4, 1, 4 },
                    { 5, 1, 5 },
                    { 6, 1, 6 },
                    { 7, 1, 7 },
                    { 8, 1, 8 },
                    { 9, 1, 9 },
                    { 10, 1, 10 },
                    { 11, 1, 11 },
                    { 12, 1, 12 }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 4);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 5);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 6);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 7);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 8);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 9);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 10);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 11);

            migrationBuilder.DeleteData(
                table: "MBTI_ExamQuestions",
                keyColumn: "Id",
                keyValue: 12);

            migrationBuilder.DeleteData(
                table: "MBTI_Exams",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.UpdateData(
                table: "Attempts",
                keyColumn: "Id",
                keyValue: new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                columns: new[] { "CreatedDate", "ExamDate" },
                values: new object[] { new DateTime(2023, 11, 19, 13, 41, 46, 549, DateTimeKind.Utc).AddTicks(9353), new DateTime(2023, 11, 20, 13, 41, 46, 549, DateTimeKind.Utc).AddTicks(9358) });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("09d2d924-8c18-4e49-bbc4-f67c0204d7af"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 70, 252, 197, 103, 60, 204, 105, 153, 49, 186, 101, 78, 138, 254, 213, 25, 188, 180, 133, 164, 74, 84, 92, 24, 178, 195, 28, 154, 139, 72, 142, 62, 34, 39, 2, 229, 74, 188, 101, 250, 130, 181, 185, 213, 30, 156, 7, 12, 229, 18, 209, 224, 48, 23, 248, 34, 150, 193, 171, 219, 202, 18, 3, 153 }, new byte[] { 7, 54, 227, 128, 122, 118, 244, 221, 0, 196, 31, 130, 83, 37, 167, 64, 45, 69, 93, 3, 245, 103, 94, 61, 47, 134, 177, 121, 188, 202, 233, 239, 161, 69, 157, 153, 234, 202, 204, 120, 49, 21, 105, 169, 96, 9, 90, 184, 14, 77, 116, 248, 80, 51, 136, 45, 218, 188, 119, 55, 190, 30, 169, 14, 148, 135, 17, 115, 167, 89, 236, 148, 229, 24, 154, 154, 138, 16, 42, 67, 35, 37, 41, 71, 193, 43, 238, 80, 74, 113, 99, 96, 210, 171, 123, 13, 83, 54, 234, 209, 140, 239, 23, 175, 222, 30, 163, 249, 206, 246, 245, 210, 133, 208, 253, 53, 17, 90, 206, 131, 94, 210, 205, 137, 137, 47, 31, 79 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1a022b66-8b1c-461a-be8a-ec2a7b0741e9"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 104, 117, 53, 43, 204, 207, 169, 8, 110, 165, 181, 8, 77, 13, 139, 159, 65, 142, 88, 13, 219, 207, 225, 93, 56, 142, 121, 133, 73, 195, 65, 148, 5, 70, 27, 195, 197, 74, 209, 159, 204, 185, 100, 230, 28, 151, 252, 70, 139, 113, 16, 149, 161, 252, 180, 46, 187, 71, 176, 85, 186, 77, 98, 170 }, new byte[] { 253, 84, 229, 144, 132, 87, 146, 29, 67, 255, 149, 106, 12, 64, 145, 106, 110, 48, 121, 168, 92, 199, 80, 172, 136, 78, 124, 141, 110, 188, 128, 156, 249, 1, 114, 38, 244, 160, 41, 57, 61, 234, 8, 74, 225, 6, 145, 181, 143, 57, 19, 88, 74, 125, 193, 24, 142, 99, 59, 101, 126, 111, 131, 22, 97, 202, 23, 173, 208, 198, 191, 120, 130, 155, 139, 31, 136, 224, 71, 79, 22, 215, 34, 28, 37, 185, 221, 89, 70, 250, 68, 128, 191, 19, 194, 227, 30, 207, 92, 7, 23, 49, 236, 232, 134, 142, 39, 46, 54, 173, 17, 211, 107, 206, 88, 86, 125, 230, 209, 20, 51, 192, 185, 126, 24, 79, 168, 232 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1eff27be-f2ea-4df7-93a5-33c7ba5e2d98"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 133, 247, 84, 88, 8, 78, 123, 14, 122, 238, 35, 102, 0, 108, 139, 195, 45, 88, 176, 74, 183, 123, 181, 14, 145, 236, 81, 196, 165, 209, 128, 237, 122, 111, 116, 40, 197, 62, 245, 4, 166, 13, 46, 62, 204, 187, 231, 62, 103, 63, 189, 134, 249, 187, 184, 79, 132, 151, 161, 2, 146, 78, 19, 172 }, new byte[] { 17, 166, 213, 12, 97, 57, 26, 165, 46, 122, 240, 199, 233, 158, 105, 63, 64, 8, 27, 107, 214, 210, 147, 230, 3, 78, 215, 100, 125, 85, 211, 33, 248, 159, 107, 64, 115, 43, 63, 45, 154, 28, 104, 11, 24, 4, 41, 65, 174, 204, 94, 216, 46, 94, 149, 102, 85, 46, 166, 148, 224, 223, 144, 91, 189, 191, 21, 159, 69, 30, 195, 113, 113, 204, 143, 29, 143, 114, 221, 83, 155, 16, 192, 112, 189, 81, 226, 88, 5, 137, 77, 10, 142, 38, 243, 121, 210, 41, 183, 162, 129, 29, 58, 106, 22, 4, 177, 191, 230, 47, 127, 221, 27, 106, 168, 211, 17, 220, 220, 199, 52, 32, 109, 181, 189, 196, 247, 49 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("24d15338-310e-4d3d-9e39-86444fc0ddec"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 63, 210, 34, 156, 203, 75, 248, 214, 4, 229, 9, 6, 53, 117, 118, 155, 196, 241, 251, 192, 100, 85, 85, 96, 117, 53, 72, 21, 56, 81, 234, 98, 57, 255, 124, 230, 49, 43, 12, 161, 84, 26, 111, 210, 132, 82, 102, 19, 235, 106, 242, 237, 73, 65, 37, 100, 93, 232, 122, 96, 117, 164, 202, 147 }, new byte[] { 224, 103, 126, 201, 161, 144, 18, 46, 96, 202, 166, 218, 4, 235, 194, 79, 186, 234, 180, 97, 250, 49, 104, 194, 73, 40, 207, 43, 208, 158, 63, 248, 40, 41, 108, 253, 247, 8, 95, 43, 29, 43, 149, 232, 185, 32, 3, 190, 249, 195, 173, 185, 5, 154, 202, 82, 146, 56, 223, 198, 128, 69, 138, 97, 245, 225, 65, 179, 81, 74, 40, 210, 72, 2, 89, 201, 169, 12, 90, 93, 17, 152, 247, 21, 207, 185, 57, 60, 215, 157, 221, 247, 90, 66, 67, 90, 193, 48, 157, 96, 26, 221, 102, 185, 236, 252, 14, 165, 150, 8, 224, 227, 124, 22, 142, 225, 52, 48, 91, 162, 111, 35, 59, 227, 202, 113, 229, 145 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("312f4251-1f9f-4f80-b2ad-968fc339b134"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 12, 213, 61, 240, 250, 1, 143, 124, 24, 24, 188, 71, 46, 205, 113, 147, 134, 240, 143, 136, 227, 17, 108, 111, 50, 203, 167, 54, 21, 33, 188, 50, 142, 22, 107, 249, 99, 87, 22, 115, 252, 129, 224, 221, 234, 47, 227, 97, 101, 179, 172, 97, 157, 42, 96, 121, 196, 79, 54, 155, 155, 187, 13, 37 }, new byte[] { 37, 214, 8, 243, 36, 254, 195, 66, 94, 99, 180, 218, 130, 171, 107, 106, 61, 146, 216, 201, 151, 186, 81, 238, 132, 48, 45, 204, 231, 119, 178, 186, 11, 225, 88, 24, 210, 231, 20, 214, 53, 237, 64, 86, 143, 139, 48, 36, 46, 30, 85, 172, 9, 147, 92, 6, 224, 134, 173, 6, 78, 47, 151, 158, 104, 163, 38, 63, 22, 153, 50, 60, 180, 124, 149, 31, 137, 65, 205, 180, 60, 154, 101, 210, 92, 119, 32, 128, 162, 183, 171, 26, 250, 64, 111, 167, 59, 111, 216, 201, 58, 206, 158, 137, 108, 181, 59, 74, 118, 195, 18, 236, 153, 180, 62, 83, 89, 220, 217, 44, 73, 32, 248, 245, 0, 131, 170, 91 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("324ed66e-e8de-4710-a139-18c50b442945"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 123, 85, 159, 22, 126, 85, 223, 97, 114, 215, 191, 142, 5, 48, 85, 122, 161, 19, 41, 214, 37, 207, 121, 34, 30, 65, 195, 25, 93, 169, 235, 35, 90, 170, 6, 124, 134, 181, 17, 128, 42, 106, 225, 148, 220, 148, 93, 241, 168, 7, 180, 84, 1, 39, 65, 141, 169, 70, 175, 111, 9, 18, 67, 164 }, new byte[] { 3, 67, 221, 133, 151, 254, 96, 135, 79, 251, 22, 137, 130, 77, 214, 21, 0, 254, 101, 117, 206, 235, 5, 251, 170, 31, 59, 218, 99, 69, 111, 117, 126, 30, 3, 90, 186, 82, 76, 71, 12, 31, 196, 165, 155, 188, 51, 235, 210, 237, 202, 34, 180, 251, 155, 50, 189, 22, 147, 9, 166, 156, 33, 208, 88, 116, 54, 150, 173, 247, 242, 215, 109, 223, 242, 80, 125, 59, 127, 169, 117, 138, 139, 232, 27, 32, 178, 152, 17, 131, 28, 47, 119, 107, 43, 54, 16, 86, 30, 190, 211, 122, 59, 251, 208, 84, 15, 116, 114, 73, 200, 193, 0, 211, 73, 152, 249, 45, 141, 59, 141, 31, 210, 96, 62, 174, 60, 99 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("4c5d8bb2-b66c-49e7-982b-685ed23d1be8"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 163, 97, 216, 250, 160, 36, 3, 231, 136, 135, 30, 85, 104, 11, 242, 167, 143, 150, 209, 22, 152, 52, 14, 229, 154, 46, 22, 217, 105, 199, 123, 171, 18, 193, 237, 207, 151, 152, 153, 171, 69, 110, 190, 206, 131, 138, 123, 150, 190, 173, 9, 99, 139, 92, 130, 253, 185, 144, 131, 242, 123, 38, 173, 194 }, new byte[] { 5, 176, 234, 100, 3, 207, 115, 81, 80, 65, 240, 21, 106, 2, 115, 167, 246, 216, 36, 71, 162, 96, 198, 209, 120, 253, 173, 69, 52, 102, 101, 234, 176, 223, 245, 4, 39, 236, 159, 8, 51, 125, 22, 23, 153, 248, 181, 124, 227, 37, 216, 109, 62, 76, 96, 43, 83, 96, 33, 108, 222, 15, 81, 22, 145, 228, 151, 240, 119, 51, 248, 126, 58, 195, 90, 155, 130, 46, 107, 170, 1, 115, 198, 203, 186, 185, 141, 198, 187, 152, 63, 188, 11, 142, 218, 109, 121, 250, 125, 144, 27, 232, 16, 145, 243, 250, 202, 134, 221, 71, 118, 125, 73, 200, 129, 238, 255, 104, 28, 25, 242, 214, 77, 85, 182, 7, 44, 88 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5b670b4c-a8dc-4cca-8d2b-0bb45d69a702"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 80, 85, 177, 83, 122, 110, 188, 125, 65, 160, 132, 192, 153, 151, 142, 54, 32, 64, 238, 115, 133, 43, 179, 92, 165, 156, 27, 151, 236, 188, 102, 19, 71, 225, 76, 167, 204, 14, 156, 54, 178, 181, 9, 160, 206, 182, 147, 204, 190, 225, 232, 95, 237, 221, 182, 136, 170, 229, 216, 160, 104, 62, 186, 179 }, new byte[] { 67, 132, 193, 11, 59, 107, 6, 3, 191, 33, 57, 8, 139, 208, 4, 189, 243, 18, 109, 10, 234, 126, 148, 29, 186, 98, 249, 112, 114, 81, 252, 113, 149, 31, 243, 228, 91, 212, 136, 222, 115, 23, 41, 161, 203, 231, 90, 27, 31, 171, 154, 88, 112, 231, 87, 5, 73, 77, 100, 99, 106, 185, 202, 105, 92, 169, 20, 29, 79, 144, 207, 144, 56, 72, 170, 85, 114, 53, 34, 79, 232, 34, 93, 66, 108, 233, 162, 228, 49, 108, 164, 211, 51, 243, 10, 250, 16, 35, 98, 81, 140, 215, 143, 200, 189, 126, 171, 191, 20, 35, 80, 58, 179, 48, 71, 25, 231, 105, 27, 198, 194, 10, 67, 137, 104, 6, 64, 216 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5ddbd197-9ac9-42fb-bdfe-dee7dbe35efd"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 178, 149, 53, 25, 8, 103, 205, 230, 185, 125, 62, 221, 205, 186, 169, 121, 95, 70, 206, 69, 200, 96, 229, 105, 200, 207, 103, 218, 50, 184, 42, 24, 152, 198, 242, 177, 111, 202, 21, 86, 149, 216, 13, 176, 22, 57, 225, 95, 146, 128, 12, 20, 167, 25, 238, 134, 222, 91, 163, 39, 154, 172, 44, 195 }, new byte[] { 169, 177, 183, 165, 230, 155, 219, 13, 83, 199, 73, 121, 99, 168, 147, 97, 14, 210, 170, 254, 119, 132, 40, 129, 243, 205, 21, 187, 250, 39, 195, 162, 184, 253, 146, 32, 21, 4, 230, 187, 31, 106, 133, 4, 228, 42, 114, 130, 53, 109, 144, 174, 159, 243, 96, 145, 147, 238, 241, 249, 84, 240, 1, 179, 182, 87, 118, 203, 94, 107, 15, 148, 242, 196, 20, 226, 90, 75, 55, 46, 30, 54, 221, 135, 10, 250, 93, 186, 74, 27, 148, 23, 19, 222, 84, 56, 8, 14, 247, 167, 69, 57, 16, 3, 139, 67, 78, 167, 71, 149, 224, 37, 6, 115, 31, 191, 64, 136, 207, 208, 29, 239, 115, 242, 156, 221, 197, 138 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("666bc14a-4078-4619-85f1-bc63033c556f"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 102, 95, 43, 33, 148, 195, 196, 83, 52, 148, 107, 50, 189, 119, 207, 83, 212, 239, 19, 65, 149, 236, 35, 202, 151, 245, 155, 174, 56, 55, 189, 78, 196, 123, 204, 159, 217, 225, 59, 123, 73, 40, 203, 103, 224, 30, 49, 84, 161, 215, 3, 132, 68, 221, 59, 60, 93, 40, 176, 115, 106, 55, 242, 34 }, new byte[] { 218, 137, 13, 123, 4, 239, 41, 177, 238, 67, 70, 136, 39, 176, 233, 83, 47, 21, 135, 93, 250, 5, 9, 75, 171, 171, 246, 29, 104, 148, 54, 60, 209, 39, 146, 237, 150, 187, 238, 202, 79, 147, 182, 96, 234, 135, 121, 106, 254, 247, 29, 135, 183, 50, 166, 110, 39, 118, 234, 145, 146, 217, 103, 182, 115, 132, 7, 194, 115, 142, 168, 44, 137, 168, 225, 112, 179, 128, 135, 13, 19, 101, 242, 43, 103, 251, 116, 245, 7, 87, 244, 98, 28, 125, 168, 6, 144, 220, 223, 189, 111, 236, 35, 200, 92, 89, 188, 155, 104, 161, 202, 123, 161, 52, 90, 68, 88, 62, 63, 0, 197, 245, 208, 90, 182, 176, 33, 195 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("6d6ad990-1ff2-445b-8496-d766048e25cf"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 231, 243, 105, 30, 113, 61, 223, 193, 143, 176, 93, 159, 255, 64, 245, 43, 219, 15, 53, 121, 77, 55, 16, 250, 160, 228, 130, 222, 47, 138, 47, 233, 21, 73, 194, 85, 50, 45, 237, 240, 59, 118, 14, 149, 150, 145, 10, 167, 206, 10, 240, 2, 200, 148, 122, 1, 153, 60, 85, 80, 8, 163, 107, 24 }, new byte[] { 0, 129, 114, 168, 210, 0, 52, 55, 252, 204, 255, 17, 78, 34, 51, 131, 158, 176, 30, 86, 106, 161, 234, 47, 248, 69, 118, 165, 92, 150, 68, 17, 60, 191, 36, 146, 54, 244, 19, 234, 205, 219, 119, 242, 240, 214, 0, 244, 183, 204, 109, 148, 128, 237, 85, 58, 198, 188, 9, 162, 132, 194, 42, 71, 253, 229, 184, 134, 234, 190, 222, 140, 108, 93, 36, 254, 89, 12, 136, 110, 150, 246, 126, 55, 115, 167, 146, 199, 32, 234, 85, 245, 144, 108, 59, 139, 255, 72, 5, 143, 10, 77, 83, 250, 172, 41, 20, 98, 47, 61, 70, 88, 187, 79, 105, 35, 227, 36, 53, 207, 157, 229, 248, 87, 55, 190, 14, 28 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("84a7c64a-feed-4fb2-8b1e-24e10aa382b2"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 100, 32, 212, 57, 66, 109, 114, 142, 169, 163, 52, 90, 87, 127, 37, 1, 156, 37, 158, 33, 139, 23, 122, 81, 18, 120, 49, 52, 40, 100, 222, 218, 35, 187, 151, 34, 31, 191, 224, 177, 96, 135, 238, 119, 139, 154, 54, 216, 196, 52, 160, 5, 109, 49, 17, 10, 116, 233, 17, 134, 12, 213, 174, 241 }, new byte[] { 0, 252, 13, 39, 202, 228, 131, 192, 167, 73, 13, 168, 86, 46, 47, 179, 109, 111, 204, 29, 96, 215, 46, 47, 40, 213, 124, 119, 66, 231, 16, 118, 241, 140, 160, 83, 125, 23, 160, 126, 191, 233, 56, 212, 66, 119, 89, 183, 138, 4, 232, 82, 30, 175, 126, 10, 236, 83, 184, 9, 167, 81, 130, 1, 61, 226, 86, 78, 217, 49, 99, 177, 149, 156, 191, 235, 229, 116, 249, 4, 144, 188, 241, 101, 78, 168, 23, 40, 185, 202, 153, 175, 123, 1, 17, 217, 212, 146, 131, 187, 167, 202, 217, 246, 45, 30, 115, 206, 128, 161, 148, 237, 218, 1, 238, 180, 243, 62, 57, 182, 12, 211, 234, 213, 196, 8, 131, 179 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("8f744e72-da12-4038-a54e-7512a0ada884"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 200, 245, 165, 154, 34, 206, 230, 11, 195, 55, 62, 211, 182, 135, 225, 224, 210, 97, 151, 55, 179, 88, 146, 85, 64, 184, 236, 51, 137, 61, 17, 21, 185, 13, 49, 161, 151, 124, 139, 250, 75, 178, 97, 132, 73, 215, 226, 208, 53, 32, 90, 119, 69, 74, 93, 156, 180, 240, 188, 115, 67, 15, 77, 151 }, new byte[] { 204, 69, 253, 163, 102, 185, 82, 46, 132, 8, 169, 71, 89, 120, 232, 167, 69, 195, 136, 233, 193, 199, 142, 9, 117, 242, 137, 3, 252, 196, 78, 81, 92, 192, 106, 92, 155, 28, 242, 115, 8, 152, 243, 39, 11, 216, 62, 181, 88, 157, 215, 143, 217, 150, 33, 219, 102, 59, 56, 229, 45, 20, 147, 34, 73, 158, 247, 248, 171, 27, 28, 48, 9, 226, 237, 196, 244, 88, 134, 34, 124, 182, 131, 39, 240, 4, 183, 135, 16, 138, 167, 149, 188, 144, 175, 68, 52, 179, 45, 135, 214, 37, 32, 125, 88, 112, 243, 57, 103, 192, 204, 56, 157, 203, 209, 135, 4, 88, 44, 37, 21, 7, 88, 235, 50, 105, 53, 197 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("96e0097f-ce73-4950-8ee2-89b313581154"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 186, 115, 137, 119, 26, 199, 9, 183, 195, 109, 200, 192, 90, 21, 210, 44, 159, 32, 226, 64, 161, 122, 24, 131, 230, 221, 66, 143, 55, 36, 150, 18, 152, 169, 96, 85, 49, 0, 80, 172, 82, 34, 15, 164, 151, 130, 224, 55, 111, 183, 26, 248, 117, 151, 30, 104, 156, 213, 121, 23, 162, 159, 159, 146 }, new byte[] { 213, 211, 58, 198, 172, 248, 6, 25, 119, 32, 150, 196, 67, 205, 63, 40, 21, 27, 101, 45, 106, 210, 16, 99, 25, 61, 212, 13, 100, 139, 19, 174, 47, 76, 64, 155, 64, 89, 253, 76, 193, 77, 177, 157, 201, 141, 246, 217, 64, 199, 219, 177, 138, 22, 13, 248, 152, 80, 45, 184, 19, 79, 60, 43, 61, 76, 210, 41, 52, 131, 128, 189, 53, 228, 125, 81, 131, 32, 185, 159, 174, 10, 45, 223, 29, 181, 81, 88, 242, 223, 254, 98, 182, 45, 2, 95, 131, 236, 44, 160, 251, 14, 157, 169, 11, 37, 253, 10, 103, 229, 170, 25, 197, 58, 224, 74, 107, 171, 109, 147, 169, 223, 209, 130, 14, 144, 143, 137 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("99c5faa8-d3fe-45b3-a871-86117ef93111"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 63, 57, 167, 132, 173, 244, 32, 110, 241, 95, 250, 70, 22, 53, 76, 248, 248, 191, 247, 65, 127, 224, 68, 25, 170, 145, 95, 25, 9, 222, 65, 36, 204, 173, 92, 106, 98, 118, 47, 159, 181, 55, 123, 149, 142, 252, 0, 3, 124, 85, 190, 211, 8, 73, 34, 43, 81, 48, 224, 238, 141, 67, 42, 221 }, new byte[] { 15, 150, 111, 159, 209, 61, 68, 75, 222, 187, 69, 3, 161, 16, 133, 248, 53, 69, 42, 164, 206, 178, 252, 96, 138, 107, 250, 126, 114, 37, 221, 229, 195, 252, 21, 116, 208, 14, 43, 32, 177, 223, 69, 118, 228, 49, 94, 80, 52, 181, 10, 94, 236, 220, 109, 146, 22, 67, 160, 10, 246, 26, 156, 228, 61, 78, 59, 218, 223, 176, 230, 195, 224, 23, 153, 243, 144, 246, 1, 182, 179, 117, 99, 200, 12, 163, 106, 231, 91, 74, 161, 243, 211, 120, 74, 246, 211, 166, 79, 132, 148, 183, 181, 222, 249, 192, 160, 192, 133, 129, 44, 251, 36, 77, 116, 171, 117, 3, 247, 97, 241, 89, 61, 215, 234, 7, 34, 5 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 57, 253, 21, 131, 57, 70, 21, 92, 13, 162, 200, 233, 180, 228, 56, 26, 200, 28, 139, 186, 102, 13, 0, 31, 166, 52, 202, 100, 101, 58, 57, 58, 17, 78, 147, 178, 164, 143, 122, 183, 181, 249, 157, 81, 149, 114, 25, 65, 216, 139, 207, 255, 107, 158, 177, 0, 175, 179, 77, 201, 190, 24, 94, 114 }, new byte[] { 206, 176, 184, 81, 72, 107, 62, 150, 147, 31, 33, 71, 21, 148, 184, 207, 178, 153, 34, 9, 67, 207, 254, 41, 5, 246, 1, 142, 31, 80, 161, 168, 162, 6, 244, 0, 180, 207, 83, 212, 23, 210, 8, 230, 21, 52, 176, 188, 123, 124, 98, 222, 180, 104, 9, 114, 46, 106, 5, 47, 5, 116, 86, 106, 204, 47, 238, 74, 130, 205, 121, 159, 104, 20, 15, 6, 177, 30, 63, 244, 12, 33, 185, 16, 210, 70, 91, 132, 93, 3, 39, 148, 249, 175, 114, 172, 214, 140, 67, 152, 152, 66, 218, 195, 56, 137, 243, 206, 129, 78, 194, 72, 172, 86, 64, 177, 131, 223, 175, 123, 187, 43, 10, 141, 54, 32, 126, 198 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c30d316f-9c93-42c9-8e72-0b3efa896192"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 182, 93, 222, 6, 11, 88, 207, 29, 19, 96, 47, 73, 228, 153, 8, 99, 85, 234, 124, 53, 232, 4, 65, 3, 204, 46, 92, 154, 177, 73, 20, 130, 170, 189, 222, 103, 55, 65, 11, 128, 225, 190, 49, 188, 108, 9, 173, 47, 14, 161, 34, 108, 69, 97, 197, 222, 247, 77, 73, 1, 207, 98, 195 }, new byte[] { 90, 194, 33, 117, 97, 232, 249, 13, 13, 176, 40, 131, 91, 211, 72, 40, 62, 171, 112, 126, 7, 49, 43, 210, 244, 104, 25, 35, 130, 32, 223, 243, 128, 167, 120, 79, 116, 77, 252, 243, 227, 118, 189, 113, 48, 219, 168, 76, 47, 28, 25, 6, 119, 31, 92, 36, 5, 111, 241, 52, 233, 100, 225, 30, 182, 186, 107, 150, 216, 157, 151, 28, 251, 147, 42, 62, 11, 179, 228, 228, 38, 241, 55, 196, 124, 174, 4, 0, 144, 181, 62, 231, 210, 18, 39, 210, 63, 183, 167, 80, 209, 97, 40, 191, 205, 98, 140, 156, 56, 225, 34, 245, 121, 81, 2, 115, 143, 25, 215, 9, 81, 46, 81, 220, 35, 240, 40, 147 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c5eacfa9-ec87-4150-bedc-ca141458b5a3"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 74, 248, 134, 51, 162, 220, 138, 194, 126, 196, 233, 216, 185, 11, 219, 82, 63, 23, 165, 149, 189, 198, 219, 147, 154, 202, 125, 10, 56, 143, 114, 114, 219, 209, 154, 253, 101, 74, 155, 6, 179, 247, 246, 255, 38, 238, 215, 54, 169, 5, 199, 167, 110, 161, 45, 85, 161, 252, 229, 64, 126, 64, 68, 128 }, new byte[] { 112, 180, 211, 150, 109, 94, 42, 200, 109, 240, 27, 9, 175, 211, 144, 153, 102, 147, 165, 207, 105, 159, 8, 30, 126, 204, 191, 38, 159, 137, 175, 92, 247, 171, 43, 157, 20, 168, 106, 150, 174, 22, 46, 47, 72, 241, 139, 252, 135, 56, 94, 28, 28, 91, 242, 213, 157, 181, 166, 206, 235, 210, 189, 156, 101, 243, 186, 124, 163, 131, 7, 107, 49, 184, 197, 58, 166, 29, 156, 150, 25, 252, 157, 23, 145, 25, 88, 47, 83, 240, 194, 157, 111, 255, 83, 128, 77, 79, 54, 107, 68, 139, 56, 199, 219, 184, 77, 124, 35, 138, 223, 236, 206, 215, 224, 186, 218, 211, 38, 199, 1, 154, 31, 211, 151, 209, 220, 25 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("cb235a17-fd24-48cf-ba34-ac5ac698a832"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 164, 187, 163, 105, 149, 78, 76, 150, 82, 199, 90, 171, 172, 199, 252, 48, 168, 177, 163, 25, 222, 198, 120, 1, 194, 254, 238, 155, 153, 173, 9, 71, 195, 246, 112, 255, 27, 196, 98, 195, 132, 150, 252, 96, 10, 2, 177, 3, 111, 145, 134, 207, 65, 124, 230, 251, 85, 232, 94, 152, 242, 35, 37, 171 }, new byte[] { 94, 223, 181, 155, 163, 152, 155, 20, 22, 75, 112, 100, 238, 167, 224, 239, 204, 247, 151, 7, 32, 92, 213, 23, 238, 66, 242, 251, 110, 187, 200, 153, 47, 83, 58, 44, 82, 142, 18, 222, 143, 136, 181, 154, 36, 193, 146, 226, 192, 134, 19, 148, 101, 36, 81, 220, 156, 188, 47, 15, 189, 132, 246, 144, 14, 180, 217, 55, 168, 32, 116, 222, 42, 52, 151, 95, 141, 185, 106, 86, 218, 145, 15, 215, 228, 153, 83, 214, 154, 1, 68, 231, 23, 105, 79, 175, 176, 193, 217, 10, 7, 118, 29, 85, 234, 16, 120, 252, 80, 62, 18, 145, 24, 134, 203, 119, 232, 122, 66, 51, 253, 161, 125, 178, 158, 169, 228, 25 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("d406be20-d364-43c5-84bf-4d3e3be43ae0"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 5, 213, 85, 160, 189, 151, 197, 46, 180, 135, 7, 238, 121, 32, 190, 179, 210, 224, 16, 236, 89, 130, 167, 7, 153, 190, 83, 127, 124, 183, 82, 100, 191, 225, 189, 245, 4, 205, 122, 80, 195, 85, 161, 144, 48, 46, 60, 43, 205, 160, 113, 155, 17, 48, 154, 201, 119, 199, 195, 67, 183, 228, 64, 132 }, new byte[] { 108, 231, 124, 106, 147, 47, 89, 90, 50, 7, 192, 106, 255, 106, 35, 1, 61, 64, 31, 115, 146, 172, 18, 132, 226, 109, 103, 211, 246, 212, 99, 119, 36, 24, 245, 187, 7, 147, 220, 125, 193, 199, 62, 163, 67, 80, 0, 127, 83, 20, 234, 137, 125, 226, 226, 118, 173, 78, 215, 131, 47, 42, 185, 54, 175, 166, 185, 23, 199, 176, 226, 211, 113, 201, 150, 46, 82, 29, 133, 199, 133, 219, 52, 110, 19, 198, 195, 250, 209, 26, 110, 98, 12, 46, 61, 88, 228, 193, 10, 53, 181, 78, 38, 166, 90, 182, 217, 242, 244, 232, 104, 204, 38, 8, 221, 63, 69, 75, 75, 100, 103, 142, 191, 97, 59, 215, 247, 234 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("e798134f-8d1b-41aa-98c1-c8914240366d"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 65, 107, 12, 155, 98, 199, 83, 23, 159, 185, 80, 82, 17, 164, 71, 234, 215, 210, 61, 67, 247, 114, 156, 0, 165, 47, 160, 231, 169, 21, 253, 44, 56, 150, 252, 118, 241, 167, 93, 223, 23, 128, 10, 239, 28, 173, 248, 194, 43, 142, 40, 147, 88, 0, 217, 21, 50, 131, 212, 123, 233, 39, 180, 4 }, new byte[] { 208, 185, 105, 226, 200, 156, 144, 106, 42, 64, 14, 240, 110, 23, 107, 132, 29, 98, 211, 135, 154, 130, 66, 78, 36, 17, 163, 244, 110, 165, 254, 33, 156, 152, 138, 81, 98, 138, 155, 9, 175, 82, 104, 34, 71, 130, 201, 223, 214, 38, 79, 5, 167, 184, 123, 48, 217, 4, 90, 125, 179, 191, 43, 48, 205, 153, 190, 201, 90, 231, 5, 82, 120, 126, 246, 147, 144, 15, 147, 114, 133, 186, 51, 95, 97, 225, 54, 24, 20, 44, 145, 96, 167, 53, 65, 186, 36, 185, 246, 205, 16, 243, 182, 95, 134, 187, 57, 55, 83, 255, 48, 188, 13, 209, 13, 44, 34, 121, 54, 191, 152, 145, 33, 94, 206, 105, 173, 153 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f0b84747-fbed-43e1-9cd1-ecf2e1bd3cc0"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 197, 192, 106, 222, 137, 179, 142, 41, 82, 153, 69, 248, 211, 66, 201, 220, 189, 241, 58, 109, 245, 126, 108, 160, 197, 253, 90, 106, 7, 216, 182, 220, 30, 27, 255, 189, 157, 51, 208, 137, 141, 132, 194, 72, 31, 31, 223, 141, 214, 224, 52, 248, 15, 230, 37, 246, 230, 167, 159, 200, 148, 45, 125, 198 }, new byte[] { 135, 224, 217, 73, 33, 254, 181, 36, 79, 136, 97, 153, 66, 202, 223, 30, 126, 177, 81, 169, 207, 188, 73, 12, 169, 232, 164, 100, 40, 33, 248, 79, 146, 35, 230, 20, 135, 126, 117, 112, 191, 138, 7, 10, 116, 187, 30, 122, 53, 32, 111, 211, 28, 52, 246, 142, 177, 88, 193, 50, 243, 133, 191, 114, 211, 101, 10, 2, 121, 220, 141, 136, 85, 166, 34, 96, 143, 157, 201, 205, 108, 6, 239, 95, 41, 116, 26, 204, 116, 112, 43, 108, 95, 169, 184, 77, 219, 154, 129, 251, 201, 144, 76, 224, 221, 20, 195, 78, 35, 38, 84, 195, 25, 125, 147, 103, 237, 50, 61, 225, 188, 83, 32, 172, 86, 19, 136, 197 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f2dbff0f-0ccb-4cc3-91e3-d068431af710"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 58, 102, 74, 244, 153, 117, 198, 176, 32, 159, 19, 243, 66, 104, 97, 72, 31, 180, 156, 78, 85, 91, 178, 190, 44, 232, 148, 233, 151, 41, 68, 22, 221, 73, 47, 167, 32, 169, 165, 144, 34, 80, 212, 24, 79, 178, 249, 145, 123, 161, 100, 5, 255, 245, 19, 12, 242, 64, 84, 29, 73, 95, 180, 254 }, new byte[] { 173, 183, 184, 17, 238, 99, 46, 234, 126, 17, 170, 235, 88, 144, 49, 114, 130, 43, 214, 198, 41, 173, 76, 191, 167, 186, 224, 119, 180, 216, 127, 229, 64, 20, 231, 199, 126, 238, 92, 114, 230, 63, 147, 143, 109, 231, 247, 75, 173, 241, 191, 53, 190, 44, 15, 103, 153, 198, 46, 184, 185, 101, 144, 223, 203, 200, 96, 74, 52, 20, 15, 232, 192, 141, 121, 224, 109, 153, 181, 176, 148, 26, 165, 43, 210, 181, 129, 137, 85, 163, 180, 80, 208, 73, 4, 89, 55, 49, 209, 38, 175, 74, 6, 135, 205, 206, 185, 92, 26, 208, 186, 45, 84, 190, 209, 249, 36, 68, 186, 66, 186, 210, 163, 177, 250, 68, 164, 109 } });
        }
    }
}
