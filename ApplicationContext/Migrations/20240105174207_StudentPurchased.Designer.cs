// <auto-generated />
using System;
using ApplicationContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApplicationContext.Migrations
{
    [DbContext(typeof(HighSchoolQuestContext))]
    [Migration("20240105174207_StudentPurchased")]
    partial class StudentPurchased
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Attempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AttempType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<int?>("Score")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Attempts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                            AttempType = 0,
                            CreatedDate = new DateTime(2024, 1, 5, 17, 42, 7, 383, DateTimeKind.Utc).AddTicks(2236),
                            ExamDate = new DateTime(2024, 1, 6, 17, 42, 7, 383, DateTimeKind.Utc).AddTicks(2241),
                            IsDeleted = false,
                            Name = "bai kiem tra kien thuc xa hoi",
                            Result = "Pass",
                            Score = 10,
                            UserId = new Guid("f0b84747-fbed-43e1-9cd1-ecf2e1bd3cc0")
                        });
                });

            modelBuilder.Entity("Domain.Models.AttemptDetail", b =>
                {
                    b.Property<Guid>("AttemptId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ExaminationQuestionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<string>("UserAnswered")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AttemptId", "ExaminationQuestionId");

                    b.HasIndex("ExaminationQuestionId");

                    b.ToTable("AttemptDetails");

                    b.HasData(
                        new
                        {
                            AttemptId = new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                            ExaminationQuestionId = new Guid("ad0080ef-ac58-450b-b086-bc7f856c1fec"),
                            IsCorrect = true,
                            UserAnswered = "Paris"
                        },
                        new
                        {
                            AttemptId = new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                            ExaminationQuestionId = new Guid("046b0f97-130a-48c7-b1ad-40033ae41fff"),
                            IsCorrect = true,
                            UserAnswered = "7"
                        },
                        new
                        {
                            AttemptId = new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                            ExaminationQuestionId = new Guid("2339983b-33db-4333-9b1b-a5514faa280a"),
                            IsCorrect = true,
                            UserAnswered = "1776-07-04"
                        },
                        new
                        {
                            AttemptId = new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                            ExaminationQuestionId = new Guid("139c3a57-af40-4c80-96fc-508957db3780"),
                            IsCorrect = true,
                            UserAnswered = "London"
                        });
                });

            modelBuilder.Entity("Domain.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Code = "SE",
                            Description = "các ngành về máy tính",
                            IsDeleted = false,
                            Name = "Công nghệ thông tin"
                        },
                        new
                        {
                            Id = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Code = "KT",
                            Description = "các ngành về kinh tế-quản lý",
                            IsDeleted = false,
                            Name = "Kinh tế"
                        },
                        new
                        {
                            Id = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Code = "YH",
                            Description = "Các ngành y dược",
                            IsDeleted = false,
                            Name = "Y học"
                        },
                        new
                        {
                            Id = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Code = "SP",
                            Description = "Các ngành sư phạm-giáo dục",
                            IsDeleted = false,
                            Name = "Sư phạm"
                        },
                        new
                        {
                            Id = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            Code = "TK",
                            Description = "Các ngành thiết kế/nghệ thuật",
                            IsDeleted = false,
                            Name = "Thiết kế"
                        },
                        new
                        {
                            Id = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Code = "LAW",
                            Description = "Các ngành về luật",
                            IsDeleted = false,
                            Name = "Luật"
                        },
                        new
                        {
                            Id = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Code = "TT",
                            Description = "Các ngành về báo chí/truyền thông",
                            IsDeleted = false,
                            Name = "Truyền Thông"
                        },
                        new
                        {
                            Id = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Code = "NN",
                            Description = "Các ngành về ngôn ngữ",
                            IsDeleted = false,
                            Name = "Ngôn Ngữ"
                        },
                        new
                        {
                            Id = new Guid("d2322472-e7af-47e7-ab8f-eba6e8e7baad"),
                            Code = "DM",
                            Description = "Các ngành về dệt may",
                            IsDeleted = false,
                            Name = "Dệt May"
                        },
                        new
                        {
                            Id = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Code = "KT",
                            Description = "Các ngành về kỹ thuật",
                            IsDeleted = false,
                            Name = "Kỹ Thuật"
                        },
                        new
                        {
                            Id = new Guid("3a8a3b94-db19-44cb-91ae-a895fe50c498"),
                            Code = "NK",
                            Description = "Các ngành về năng khiếu",
                            IsDeleted = false,
                            Name = "Năng Khiếu"
                        },
                        new
                        {
                            Id = new Guid("6c7f8637-25d3-4284-a4e5-3aa20ceda1f4"),
                            Code = "CT",
                            Description = "Các ngành về chính trị",
                            IsDeleted = false,
                            Name = "Chính trị"
                        },
                        new
                        {
                            Id = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Code = "QL",
                            Description = "Các ngành về quản lý-lưu trữ thông tin",
                            IsDeleted = false,
                            Name = "Quản lý-Lưu trữ thông tin"
                        },
                        new
                        {
                            Id = new Guid("eb977e5d-b2a9-48c2-a540-cefe5a960c1d"),
                            Code = "MT",
                            Description = "Các ngành về môi trường",
                            IsDeleted = false,
                            Name = "Môi trường"
                        },
                        new
                        {
                            Id = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Code = "TH",
                            Description = "Các ngành về toán học",
                            IsDeleted = false,
                            Name = "Toán học"
                        },
                        new
                        {
                            Id = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Code = "XD",
                            Description = "Các ngành về xây dựng-kiến trúc",
                            IsDeleted = false,
                            Name = "Xây Dựng"
                        },
                        new
                        {
                            Id = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Code = "TP",
                            Description = "Các ngành về thực phẩm",
                            IsDeleted = false,
                            Name = "Thực phẩm"
                        },
                        new
                        {
                            Id = new Guid("d7ab840a-0e06-4785-aa71-f82bef075ff9"),
                            Code = "DL",
                            Description = "Các ngành về du lịch",
                            IsDeleted = false,
                            Name = "Du lịch"
                        },
                        new
                        {
                            Id = new Guid("575e2a34-3e4e-40b3-be97-37310e59085a"),
                            Code = "CA",
                            Description = "Các ngành về công an- quân đội",
                            IsDeleted = false,
                            Name = "Công an- quân đội"
                        },
                        new
                        {
                            Id = new Guid("38449231-c9b9-46b9-9ee1-83ebaea156f1"),
                            Code = "CK",
                            Description = "Các ngành về cơ khí",
                            IsDeleted = false,
                            Name = "Cơ khí"
                        },
                        new
                        {
                            Id = new Guid("03a02645-69be-46a7-ad93-cf48b8c2961d"),
                            Code = "HD",
                            Description = "Các ngành về hải dương học",
                            IsDeleted = false,
                            Name = "Hải dương"
                        },
                        new
                        {
                            Id = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Code = "KD",
                            Description = "Các ngành về kinh doanh-marketing",
                            IsDeleted = false,
                            Name = "Kinh doanh"
                        },
                        new
                        {
                            Id = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Code = "TC",
                            Description = "Các ngành về tài chính-ngân hàng",
                            IsDeleted = false,
                            Name = "Tài chính"
                        },
                        new
                        {
                            Id = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Code = "LG",
                            Description = "Các ngành về logistics-vận tải",
                            IsDeleted = false,
                            Name = "Logistics"
                        },
                        new
                        {
                            Id = new Guid("9bf92746-e6c9-46ae-a8ba-9fa93671dcce"),
                            Code = "VH",
                            Description = "Các ngành về văn hóa",
                            IsDeleted = false,
                            Name = "Văn hóa"
                        },
                        new
                        {
                            Id = new Guid("07563189-01d5-4ec1-80a6-f9c7ced12408"),
                            Code = "DA",
                            Description = "Các ngành về điện ảnh-sân khấu",
                            IsDeleted = false,
                            Name = "Điện ảnh"
                        });
                });

            modelBuilder.Entity("Domain.Models.Examination", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalNumberOfQuestion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Examinations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0080ef-ac58-450b-b086-bc7f856c1fec"),
                            Description = "de thi toan",
                            IsDeleted = false,
                            Name = "de toan",
                            TotalNumberOfQuestion = 4
                        },
                        new
                        {
                            Id = new Guid("1e157ceb-9adb-48bf-84de-ae050c2f89b8"),
                            Description = "De thi hoa hoc",
                            IsDeleted = false,
                            Name = "de hoa",
                            TotalNumberOfQuestion = 20
                        },
                        new
                        {
                            Id = new Guid("e296dd9b-4007-4666-b6fe-35664dcaed77"),
                            Description = "De thi sinh hoc",
                            IsDeleted = false,
                            Name = "de sinh",
                            TotalNumberOfQuestion = 21
                        },
                        new
                        {
                            Id = new Guid("80b9fa50-f8aa-4bc5-bf05-39e8f54f8f06"),
                            Description = "De thi van",
                            IsDeleted = false,
                            Name = "de van",
                            TotalNumberOfQuestion = 5
                        },
                        new
                        {
                            Id = new Guid("61bb287c-ea61-47ec-883d-628ed98bb716"),
                            Description = "De thi am nhac",
                            IsDeleted = false,
                            Name = "de music",
                            TotalNumberOfQuestion = 10
                        });
                });

            modelBuilder.Entity("Domain.Models.ExaminationQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<Guid>("ExaminationId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationId");

                    b.HasIndex("QuestionId");

                    b.ToTable("ExaminationQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0080ef-ac58-450b-b086-bc7f856c1fec"),
                            ExaminationId = new Guid("ad0080ef-ac58-450b-b086-bc7f856c1fec"),
                            IsDeleted = false,
                            QuestionId = new Guid("238f27e2-fe56-4ce8-88f8-d3aa7b56f976")
                        },
                        new
                        {
                            Id = new Guid("046b0f97-130a-48c7-b1ad-40033ae41fff"),
                            ExaminationId = new Guid("ad0080ef-ac58-450b-b086-bc7f856c1fec"),
                            IsDeleted = false,
                            QuestionId = new Guid("85e5d51b-16c7-4d0d-8f40-766a6a902698")
                        },
                        new
                        {
                            Id = new Guid("2339983b-33db-4333-9b1b-a5514faa280a"),
                            ExaminationId = new Guid("ad0080ef-ac58-450b-b086-bc7f856c1fec"),
                            IsDeleted = false,
                            QuestionId = new Guid("3e28911a-1220-4c7f-a1c6-bcce0b74ccfe")
                        },
                        new
                        {
                            Id = new Guid("139c3a57-af40-4c80-96fc-508957db3780"),
                            ExaminationId = new Guid("ad0080ef-ac58-450b-b086-bc7f856c1fec"),
                            IsDeleted = false,
                            QuestionId = new Guid("21eb2451-53ac-44f6-9a6c-751d394a8936")
                        });
                });

            modelBuilder.Entity("Domain.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5e0affd-9745-4859-8171-77b99fc725c1"),
                            Code = "GroupA",
                            Description = "Khối A",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("632ba05a-9ed9-4a00-9ac8-e1c642919806"),
                            Code = "GroupB",
                            Description = "Khối B",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("dab75dab-d28c-45ad-98a6-b3f25dec3ad0"),
                            Code = "GroupC",
                            Description = "Khối C",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("09f798c3-4d01-437f-b361-bf230efd7ddf"),
                            Code = "GroupD",
                            Description = "Khối D",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("20bbb66d-3117-4050-ae30-4caf85831530"),
                            Code = "GroupH",
                            Description = "Khối H",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b8de514a-7bba-4b8b-bae1-fc36c07ed52b"),
                            Code = "GroupV",
                            Description = "Khối V",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.Models.GroupDepartment", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupDepartments");

                    b.HasData(
                        new
                        {
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            GroupId = new Guid("f5e0affd-9745-4859-8171-77b99fc725c1")
                        },
                        new
                        {
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            GroupId = new Guid("09f798c3-4d01-437f-b361-bf230efd7ddf")
                        },
                        new
                        {
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            GroupId = new Guid("09f798c3-4d01-437f-b361-bf230efd7ddf")
                        },
                        new
                        {
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            GroupId = new Guid("f5e0affd-9745-4859-8171-77b99fc725c1")
                        },
                        new
                        {
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            GroupId = new Guid("09f798c3-4d01-437f-b361-bf230efd7ddf")
                        },
                        new
                        {
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            GroupId = new Guid("f5e0affd-9745-4859-8171-77b99fc725c1")
                        },
                        new
                        {
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            GroupId = new Guid("632ba05a-9ed9-4a00-9ac8-e1c642919806")
                        },
                        new
                        {
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            GroupId = new Guid("f5e0affd-9745-4859-8171-77b99fc725c1")
                        },
                        new
                        {
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            GroupId = new Guid("632ba05a-9ed9-4a00-9ac8-e1c642919806")
                        },
                        new
                        {
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            GroupId = new Guid("dab75dab-d28c-45ad-98a6-b3f25dec3ad0")
                        },
                        new
                        {
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            GroupId = new Guid("09f798c3-4d01-437f-b361-bf230efd7ddf")
                        },
                        new
                        {
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            GroupId = new Guid("20bbb66d-3117-4050-ae30-4caf85831530")
                        },
                        new
                        {
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            GroupId = new Guid("b8de514a-7bba-4b8b-bae1-fc36c07ed52b")
                        },
                        new
                        {
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            GroupId = new Guid("f5e0affd-9745-4859-8171-77b99fc725c1")
                        },
                        new
                        {
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            GroupId = new Guid("dab75dab-d28c-45ad-98a6-b3f25dec3ad0")
                        },
                        new
                        {
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            GroupId = new Guid("09f798c3-4d01-437f-b361-bf230efd7ddf")
                        },
                        new
                        {
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            GroupId = new Guid("f5e0affd-9745-4859-8171-77b99fc725c1")
                        },
                        new
                        {
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            GroupId = new Guid("dab75dab-d28c-45ad-98a6-b3f25dec3ad0")
                        },
                        new
                        {
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            GroupId = new Guid("09f798c3-4d01-437f-b361-bf230efd7ddf")
                        });
                });

            modelBuilder.Entity("Domain.Models.MBTI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MBTI");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "INTJ",
                            Description = "Imaginative and strategic thinkers, with a plan for everything.",
                            Name = "The Architect"
                        },
                        new
                        {
                            Id = 2,
                            Code = "INTP",
                            Description = "Innovative inventors with an unquenchable thirst for knowledge.",
                            Name = "The Logician"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ENTJ",
                            Description = "Bold, imaginative and strong-willed leaders, always finding a way – or making one.",
                            Name = "The Commander"
                        },
                        new
                        {
                            Id = 4,
                            Code = "ENTP",
                            Description = "Smart and curious thinkers who cannot resist an intellectual challenge.",
                            Name = "The Debater"
                        },
                        new
                        {
                            Id = 5,
                            Code = "INFJ",
                            Description = "Quiet and mystical, yet very inspiring and tireless idealists.",
                            Name = "The Advocate"
                        },
                        new
                        {
                            Id = 6,
                            Code = "INFP",
                            Description = "Poetic, kind and altruistic people, always eager to help a good cause.",
                            Name = "The Mediator"
                        },
                        new
                        {
                            Id = 7,
                            Code = "ENFJ",
                            Description = "Charismatic and inspiring leaders, able to mesmerize their listeners.",
                            Name = "The Protagonist"
                        },
                        new
                        {
                            Id = 8,
                            Code = "ENFP",
                            Description = "Enthusiastic, creative and sociable free spirits, who can always find a reason to smile.",
                            Name = "The Campaigner"
                        },
                        new
                        {
                            Id = 9,
                            Code = "ISTJ",
                            Description = "Practical and fact-minded individuals, whose reliability cannot be doubted.",
                            Name = "The Logistician"
                        },
                        new
                        {
                            Id = 10,
                            Code = "ISFJ",
                            Description = "Very dedicated and warm protectors, always ready to defend their loved ones.",
                            Name = "The Defender"
                        },
                        new
                        {
                            Id = 11,
                            Code = "ESTJ",
                            Description = "Excellent administrators, unsurpassed at managing things – or people.",
                            Name = "The Executive"
                        },
                        new
                        {
                            Id = 12,
                            Code = "ESFJ",
                            Description = "Extraordinarily caring, social and popular people, always eager to help.",
                            Name = "The Consul"
                        },
                        new
                        {
                            Id = 13,
                            Code = "ISTP",
                            Description = "Bold and practical experimenters, masters of all kinds of tools.",
                            Name = "The Virtuoso"
                        },
                        new
                        {
                            Id = 14,
                            Code = "ISFP",
                            Description = "Flexible and charming artists, always ready to explore and experience something new.",
                            Name = "The Adventurer"
                        },
                        new
                        {
                            Id = 15,
                            Code = "ESTP",
                            Description = "Smart, energetic and very perceptive people, who truly enjoy living on the edge.",
                            Name = "The Entrepreneur"
                        },
                        new
                        {
                            Id = 16,
                            Code = "ESFP",
                            Description = "Spontaneous, energetic and enthusiastic people – life is never boring around them.",
                            Name = "The Entertainer"
                        });
                });

            modelBuilder.Entity("Domain.Models.MBTI_Department", b =>
                {
                    b.Property<int>("MBTI_Id")
                        .HasColumnType("integer");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.HasKey("MBTI_Id", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("MBTI_Department");

                    b.HasData(
                        new
                        {
                            MBTI_Id = 2,
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013")
                        },
                        new
                        {
                            MBTI_Id = 2,
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f")
                        },
                        new
                        {
                            MBTI_Id = 9,
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329")
                        });
                });

            modelBuilder.Entity("Domain.Models.MBTI_Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfQuestion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("MBTI_Exams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Note = "MBTI Exam",
                            NumberOfQuestion = 12
                        });
                });

            modelBuilder.Entity("Domain.Models.MBTI_ExamQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExamId")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("QuestionId");

                    b.ToTable("MBTI_ExamQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExamId = 1,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExamId = 1,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 3,
                            ExamId = 1,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 4,
                            ExamId = 1,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 5,
                            ExamId = 1,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 6,
                            ExamId = 1,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 7,
                            ExamId = 1,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 8,
                            ExamId = 1,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 9,
                            ExamId = 1,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 10,
                            ExamId = 1,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 11,
                            ExamId = 1,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 12,
                            ExamId = 1,
                            QuestionId = 12
                        });
                });

            modelBuilder.Entity("Domain.Models.MBTI_Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<int>("FirstAnswerType")
                        .HasColumnType("integer");

                    b.Property<string>("NameAns1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameAns2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameQuestion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SecondAnswerType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NameAns1")
                        .IsUnique();

                    b.ToTable("MBTI_Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Xã hội, giao tiếp.",
                            NameAns2 = "b. Thiết kế, nghiên cứu.",
                            NameQuestion = "Bạn thích công việc kiểu : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Khách quan.",
                            NameAns2 = "b. Chủ quan.",
                            NameQuestion = "Bạn tiếp xúc với một người theo xu hướng : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Ý nghĩa, giá trị.",
                            NameAns2 = "b. Tính logic.",
                            NameQuestion = "Bạn đánh giá sự việc dựa trên : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 4,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Thong thả, thoải mái.",
                            NameAns2 = "b. Nhanh nhẹn, đúng giờ.",
                            NameQuestion = "Bạn là người có tác phong : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 5,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Bắt đầu cho cuộc nói chuyện.",
                            NameAns2 = "b. Chỉ nói khi người khác bắt chuyện.",
                            NameQuestion = "Trong các cuộc giao tiếp, bạn là người : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 6,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Là người có cái đầu lạnh.",
                            NameAns2 = "b. Là người có trái tim ấm.",
                            NameQuestion = "Bạn là người thế nào : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 7,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Dễ chịu, thoải mái.",
                            NameAns2 = "b. Nghiêm chỉnh, quả quyết.",
                            NameQuestion = "Tính cách của bạn : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 8,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Khá thú vị.",
                            NameAns2 = "b. Khó hiểu.",
                            NameQuestion = "Những người có tầm nhìn xa thường : ",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 9,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Dễ dàng bắt chuyện và trò chuyện nhiều điều cùng họ.",
                            NameAns2 = "b. Cảm thấy khó khăn và không biết nên nói gì.",
                            NameQuestion = "Đối với những người mới gặp, bạn thường : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 10,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Không có quy trình cụ thể.",
                            NameAns2 = "b. Thiếu tính sáng tạo.",
                            NameQuestion = "Một công việc gây nhàm chán khi : ",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 11,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Sự hòa hợp với mọi người.",
                            NameAns2 = "b. Sự nhất quán trong suy nghĩ.",
                            NameQuestion = "Bạn bị hấp dẫn bởi : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 12,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 2,
                            NameAns1 = "a. Giàu trí tưởng tượng.",
                            NameAns2 = "b. Nắm bắt tình huống tốt.",
                            NameQuestion = "Bạn bị lôi cuốn bởi kiểu người : ",
                            SecondAnswerType = 3
                        },
                        new
                        {
                            Id = 13,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Dè dặt.",
                            NameAns2 = "b. Thoải mái.",
                            NameQuestion = "Trong các cuộc trò chuyện bạn thường : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 14,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Tuân theo chuẩn mực.",
                            NameAns2 = "b. Đôi lúc không hiểu rõ nguyên nhân.",
                            NameQuestion = "Lựa chọn của bạn có xu hướng : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 15,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Không công bằng.",
                            NameAns2 = "b. Tàn nhẫn.",
                            NameQuestion = "Trong hai điều sau, điều nào tồi tệ hơn : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 16,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Kiên quyết.",
                            NameAns2 = "b. Nhẹ nhàng.",
                            NameQuestion = "Tính cách nào giống bạn hơn : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 17,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Độc lập giải quyết.",
                            NameAns2 = "b. Trao đổi với mọi người.",
                            NameQuestion = "Đối với một vấn đề trong nhóm : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 18,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Những điều bất ngờ không tính trước.",
                            NameAns2 = "b. Những điều có kế hoạch trước.",
                            NameQuestion = "Trong cuộc sống, bạn cảm thấy hứng thú với : ",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 19,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Chắc chắn trong tư tưởng.",
                            NameAns2 = "b. Cống hiến hết mình.",
                            NameQuestion = "Bạn thấy tâm đắc với bản thân bởi sự : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 20,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Khả năng lý luận phân tích.",
                            NameAns2 = "b. Sự liên tưởng.",
                            NameQuestion = "Bạn nhìn nhận một vấn đề với : ",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 21,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Ở nhà cùng gia đình.",
                            NameAns2 = "b. Đi du lịch cùng bạn bè.",
                            NameQuestion = "Trong các kỳ nghỉ lễ bạn có xu hướng : ",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 22,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Các ngụ ý, hàm ý, ẩn ý.",
                            NameAns2 = "b. Các nguyên tắc, nguyên lý.",
                            NameQuestion = "Bạn bị lôi cuốn bởi : ",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 23,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Cảm nhận từ con tim.",
                            NameAns2 = "b. Những quy tắc chung.",
                            NameQuestion = "Khi quyết định việc gì bạn thường dựa vào : ",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 24,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Làm việc có phương pháp, tổ chức tốt.",
                            NameAns2 = "b. Ứng biến xoay trở tốt trước khó khăn.",
                            NameQuestion = "Bạn thích làm việc với người Sếp",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 25,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Sự chắc chắn.",
                            NameAns2 = "b. Sự cởi mở.",
                            NameQuestion = "Bạn nghiêng về :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 26,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Công tư phân minh.",
                            NameAns2 = "b. Bị tình cảm chi phối.",
                            NameQuestion = "Bạn là người có tư tưởng :",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 27,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 3,
                            NameAns1 = "a. Nghệ thuật.",
                            NameAns2 = "b. Khoa học.",
                            NameQuestion = "Bạn thích học các môn :",
                            SecondAnswerType = 2
                        },
                        new
                        {
                            Id = 28,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 1,
                            NameAns1 = "a. Trầm lặng, ít nói.",
                            NameAns2 = "b. Hoạt bát, vui vẻ.",
                            NameQuestion = "Trong một nhóm bạn bè bạn thường :",
                            SecondAnswerType = 0
                        },
                        new
                        {
                            Id = 29,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 2,
                            NameAns1 = "a. Dựa vào vẻ ngoài của họ.",
                            NameAns2 = "b. Dựa vào cảm nhận của bạn.",
                            NameQuestion = "Khi đánh giá một người bạn thường :",
                            SecondAnswerType = 3
                        },
                        new
                        {
                            Id = 30,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Quá nồng nhiệt, mong chờ.",
                            NameAns2 = "b. Quá khách quan.",
                            NameQuestion = "Sẽ thật tai hại khi bạn :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 31,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 2,
                            NameAns1 = "a. Thích những thứ quen thuộc.",
                            NameAns2 = "b. Thích những điều mới mẻ.",
                            NameQuestion = "Phong cách của bạn :",
                            SecondAnswerType = 3
                        },
                        new
                        {
                            Id = 32,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 7,
                            NameAns1 = "a. Tìm kiếm một cách làm mới.",
                            NameAns2 = "b. Làm theo cách mọi người hay làm.",
                            NameQuestion = "Khi giải quyết một công việc thông thường, bạn sẽ :",
                            SecondAnswerType = 6
                        },
                        new
                        {
                            Id = 33,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 1,
                            NameAns1 = "a. Độc lập.",
                            NameAns2 = "b. Theo nhóm.",
                            NameQuestion = "Bạn thích làm việc :",
                            SecondAnswerType = 0
                        },
                        new
                        {
                            Id = 34,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Hiếm khi.",
                            NameAns2 = "b. Hay xảy ra.",
                            NameQuestion = "Bạn có hành động theo bản năng :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 35,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Giàu lý trí.",
                            NameAns2 = "b. Giàu cảm xúc.",
                            NameQuestion = "Trong cuộc sống, một người sẽ tốt hơn nếu :",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 36,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Theo thứ tự.",
                            NameAns2 = "b. Phát ngẫu nhiên.",
                            NameQuestion = "Khi nghe một album nhạc mới, bạn thường nghe :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 37,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Khéo léo, lanh lợi.",
                            NameAns2 = "b. Thẳng thắn, thực tế.",
                            NameQuestion = "Bạn là người :",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 38,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Sử dụng người khác.",
                            NameAns2 = "b. Hiểu và chia sẻ với người khác.",
                            NameQuestion = "Sẽ khó khăn hơn khi bạn cố:",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 39,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 1,
                            NameAns1 = "a. Diễn đạt trực tiếp nhất có thể.",
                            NameAns2 = "b. Diễn đạt một cách gián tiếp.",
                            NameQuestion = "Khi trình bày bạn thường :",
                            SecondAnswerType = 0
                        },
                        new
                        {
                            Id = 40,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Tìm bạn bè tâm sự hoặc đi chơi.",
                            NameAns2 = "b. Muốn ở một mình cho khuây khỏa.",
                            NameQuestion = "Khi cảm thấy buồn bạn thường :",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 41,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Tham gia khi bị ép.",
                            NameAns2 = "b. Năng nổ, tích cực.",
                            NameQuestion = "Đối với các hoạt động của cơ quan, lớp học :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 42,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 3,
                            NameAns1 = "a. Những thứ không xác định.",
                            NameAns2 = "b. Những thứ có logic.",
                            NameQuestion = "Bạn cảm thấy thoải mái với :",
                            SecondAnswerType = 2
                        },
                        new
                        {
                            Id = 43,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Dễ dàng nắm bắt.",
                            NameAns2 = "b. Giấu kín, khó nhận biết.",
                            NameQuestion = "Cảm xúc của bạn thường được người khác :",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 44,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Hành xử thiếu cân nhắc.",
                            NameAns2 = "b. Chỉ trích, phê phán người khác.",
                            NameQuestion = "Thật tồi tệ khi :",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 45,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Chuẩn bị chu toàn trước.",
                            NameAns2 = "b. Diễn ra tự nhiên.",
                            NameQuestion = "Bạn muốn một sự kiện như thế nào :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 46,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Dễ gần, hòa đồng.",
                            NameAns2 = "b. Thân thiện nhưng kín đáo.",
                            NameQuestion = "Bạn là người có tình cách :",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 47,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 3,
                            NameAns1 = "a. Trí tưởng tượng phong phú.",
                            NameAns2 = "b. Sự quan sát thực tế.",
                            NameQuestion = "Bạn có ưu điểm về :",
                            SecondAnswerType = 2
                        },
                        new
                        {
                            Id = 48,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Linh cảm.",
                            NameAns2 = "b. Sự việc thực tế.",
                            NameQuestion = "Khi quyết định điều gì đó, bạn tin vào :",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 49,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Bạn là người có đầu óc suy luận.",
                            NameAns2 = "b. Bạn là người giàu tình cảm và sự tinh tế.",
                            NameQuestion = "Bạn muốn được người khác khen ngợi như thế nào :",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 50,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Có chọn lựa và suy tính.",
                            NameAns2 = "b. Một cách tự nhiên.",
                            NameQuestion = "Bạn thích các sự việc xảy ra :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 51,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 7,
                            NameAns1 = "a. Bộc phát, linh hoạt.",
                            NameAns2 = "b. Kỹ lưỡng, cẩn thận.",
                            NameQuestion = "Bạn hay hành động một cách :",
                            SecondAnswerType = 6
                        },
                        new
                        {
                            Id = 52,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Tình cảm dồi dào.",
                            NameAns2 = "b. Lý trí mạnh mẽ.",
                            NameQuestion = "Bạn muốn bổ sung thêm điều gì ở bản thân :",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 54,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Nhấc máy trước để nghe.",
                            NameAns2 = "b. Để cho đồng nghiệp nhấc máy.",
                            NameQuestion = "Khi điện thoại bàn trong văn phòng công ty đổ chuông :",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 55,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Cố làm quen với nhiều người.",
                            NameAns2 = "b. Chỉ nói chuyện với vài người.",
                            NameQuestion = "Bạn mới tham gia một lớp Ngoại ngữ :",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 56,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 2,
                            NameAns1 = "a. Bản thân nó giải thích cho chính nó.",
                            NameAns2 = "b. Là bằng chứng giải thích cho các quy tắc, quy luật.",
                            NameQuestion = "Theo bạn, các sự việc, sự kiện :",
                            SecondAnswerType = 3
                        },
                        new
                        {
                            Id = 57,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Đa sầu đa cảm.",
                            NameAns2 = "b. Thực dụng, không bị chi phối bởi tình cảm.",
                            NameQuestion = "Bạn là người :",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 58,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Những suy nghĩ của họ.",
                            NameAns2 = "b. Những gì họ làm được.",
                            NameQuestion = "Bạn thường quan tâm tới người khác thông qua :",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 59,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Thói quen.",
                            NameAns2 = "b. Những điều mới mẻ.",
                            NameQuestion = "Bạn nghiêng về điều nào sau đây :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 60,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Luôn được chuẩn bị kỹ lưỡng.",
                            NameAns2 = "b. Tùy cơ ứng biến.",
                            NameQuestion = "Mọi việc sẽ tốt hơn nếu :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 61,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 1,
                            NameAns1 = "a. Ít bạn nhưng chơi rất thân.",
                            NameAns2 = "b. Nhiều bạn nhưng không thân thiết lắm.",
                            NameQuestion = "Bạn thích mối quan hệ :",
                            SecondAnswerType = 0
                        },
                        new
                        {
                            Id = 62,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 3,
                            NameAns1 = "a. Diễn đạt lời văn qua các phép so sánh, ẩn dụ.",
                            NameAns2 = "b. Nghĩ sao viết vậy, diễn đạt rõ ràng.",
                            NameQuestion = "Nếu bạn là nhà văn, bạn sẽ viết bài theo cách :",
                            SecondAnswerType = 2
                        },
                        new
                        {
                            Id = 63,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 7,
                            NameAns1 = "a. Phụ thuộc vào tâm trạng.",
                            NameAns2 = "b. Suy tính cẩn trọng.",
                            NameQuestion = "Khi quyết định một việc :",
                            SecondAnswerType = 6
                        },
                        new
                        {
                            Id = 64,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Một cách chắn chắn.",
                            NameAns2 = "b. Không chắc lắm, có thể thay đổi sau.",
                            NameQuestion = "Bạn thường hay đưa ra quyết định :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 65,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Nguyên tắc, lý trí.",
                            NameAns2 = "b. Cảm xúc, tình cảm.",
                            NameQuestion = "Bạn là người sống thiên về :",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 66,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 2,
                            NameAns1 = "a. Thực tế.",
                            NameAns2 = "b. Bất ngờ, mới mẻ",
                            NameQuestion = "Bạn thích thú với sự việc :",
                            SecondAnswerType = 3
                        },
                        new
                        {
                            Id = 67,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 2,
                            NameAns1 = "a. Không hứng thú.",
                            NameAns2 = "b. Hào hứng.",
                            NameQuestion = "Khi nói về một chủ đề mới lạ chưa gặp, bạn cảm thấy :",
                            SecondAnswerType = 3
                        },
                        new
                        {
                            Id = 68,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Kiểm tra lại trước khi áp dụng.",
                            NameAns2 = "b. Tin tưởng và áp dụng theo.",
                            NameQuestion = "Đối với một suy luận được nhiều người tin dùng, bạn sẽ :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 69,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 4,
                            NameAns1 = "a. Những thứ có tính logic cao.",
                            NameAns2 = "b. Những thứ gây cảm động.",
                            NameQuestion = "Điều gì làm cho bạn ấn tượng :",
                            SecondAnswerType = 5
                        },
                        new
                        {
                            Id = 70,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 2,
                            NameAns1 = "a. Những thứ thực tế và rõ ràng.",
                            NameAns2 = "b. Những suy đoán.",
                            NameQuestion = "Bạn là người có xu hướng thiên về :",
                            SecondAnswerType = 3
                        },
                        new
                        {
                            Id = 71,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 1,
                            NameAns1 = "a. Không thoải mái.",
                            NameAns2 = "b. Thích thú.",
                            NameQuestion = "Ở một nơi đông người làm bạn :",
                            SecondAnswerType = 0
                        },
                        new
                        {
                            Id = 72,
                            Category = 2,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 5,
                            NameAns1 = "a. Hoàn cảnh nhất định.",
                            NameAns2 = "b. Nguyên tắc chung.",
                            NameQuestion = "Bạn đánh giá một người dựa trên :",
                            SecondAnswerType = 4
                        },
                        new
                        {
                            Id = 73,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 1,
                            NameAns1 = "a. Ra về sớm vì không hào hứng lắm.",
                            NameAns2 = "b. Vui chơi hết mình cho đến khi tàn tiệc.",
                            NameQuestion = "Bạn được mời tới bữa tiệc của công ty :",
                            SecondAnswerType = 0
                        },
                        new
                        {
                            Id = 74,
                            Category = 3,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 6,
                            NameAns1 = "a. Tuân thủ thời gian.",
                            NameAns2 = "b. Làm việc tùy hứng.",
                            NameQuestion = "Khi làm việc bạn sẽ :",
                            SecondAnswerType = 7
                        },
                        new
                        {
                            Id = 75,
                            Category = 0,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 0,
                            NameAns1 = "a. Trò chuyện cùng nhiều người, quen hoặc không quen.",
                            NameAns2 = "b. Chỉ trò chuyện với một số người quen.",
                            NameQuestion = "Khi đi tham dự một buổi liên hoan/tiệc tùng, bạn sẽ :",
                            SecondAnswerType = 1
                        },
                        new
                        {
                            Id = 76,
                            Category = 1,
                            CreatedBy = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            FirstAnswerType = 3,
                            NameAns1 = "a. Những thứ mơ hồ, không rõ ràng.",
                            NameAns2 = "b. Những thứ nhàm chán, tẻ nhạt.",
                            NameQuestion = "Điều gì làm bạn cảm thấy tồi tệ :",
                            SecondAnswerType = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.MBTI_UserRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MBTI_UserRecords");
                });

            modelBuilder.Entity("Domain.Models.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c731c3f5-a1d2-4b8f-bd7f-2d57fa0acb0f"),
                            Code = "KTPM",
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Description = "Học về thiết kế phần mềm",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật phần mềm"
                        },
                        new
                        {
                            Id = new Guid("63da08f2-e70f-488d-8d5a-eb24063697e5"),
                            Code = "KHMT",
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Description = "Nghiên cứu lý thuyết và thuật toán máy tính",
                            IsDeleted = false,
                            MajorName = "Khoa học máy tính"
                        },
                        new
                        {
                            Id = new Guid("2b72f32c-5d96-4b5d-ae68-597bbeead505"),
                            Code = "ATTT",
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Description = "Nghiên cứu và bảo mật hệ thống thông tin",
                            IsDeleted = false,
                            MajorName = "An toàn thông tin"
                        },
                        new
                        {
                            Id = new Guid("f5e68a91-1e8e-4ef7-9f0d-6da923dc5611"),
                            Code = "TTNT",
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Description = "Nghiên cứu và ứng dụng trí tuệ nhân tạo",
                            IsDeleted = false,
                            MajorName = "Trí tuệ nhân tạo"
                        },
                        new
                        {
                            Id = new Guid("ce320b5a-4eac-4436-92ef-90b985aec10f"),
                            Code = "MKT",
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Description = "Makerting",
                            IsDeleted = false,
                            MajorName = "Makerting"
                        },
                        new
                        {
                            Id = new Guid("1b320b9a-3eac-4336-92ef-90b985aec101"),
                            Code = "QTKD",
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Description = "Ngành học về quản lý và điều hành các hoạt động trong doanh nghiệp",
                            IsDeleted = false,
                            MajorName = "Quản trị kinh doanh"
                        },
                        new
                        {
                            Id = new Guid("2c430b7a-5eac-4536-93ef-80b985aec202"),
                            Code = "TMĐT",
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Description = "Ngành học về kinh doanh trực tuyến sử dụng nền tảng công nghệ thông tin với sự hỗ trợ của Internet để thực hiện các giao dịch mua bán, trao đổi, thanh toán trực tuyến.",
                            IsDeleted = false,
                            MajorName = "Thương mại điện tử"
                        },
                        new
                        {
                            Id = new Guid("3d550b8a-6eac-4636-92ef-70b985aec303"),
                            Code = "KDQT",
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Description = "Ngành học về kinh doanh và thương mại giữa các quốc gia",
                            IsDeleted = false,
                            MajorName = "Kinh doanh quốc tế"
                        },
                        new
                        {
                            Id = new Guid("4e661b9a-7eac-4736-92ef-60b985aec404"),
                            Code = "KT",
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Description = "Ngành học về công tác ghi chép, phân tích và kiểm tra các nghiệp vụ tài chính",
                            IsDeleted = false,
                            MajorName = "Kế toán"
                        },
                        new
                        {
                            Id = new Guid("1a111b2a-1eac-4132-92ef-90b985ae0101"),
                            Code = "YK",
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Description = "Ngành học về chẩn đoán, điều trị bệnh và nâng cao sức khỏe",
                            IsDeleted = false,
                            MajorName = "Y khoa"
                        },
                        new
                        {
                            Id = new Guid("2b222b3a-2eac-4233-93ef-80b985ae0202"),
                            Code = "DH",
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Description = "Ngành học về nghiên cứu, phát triển và sản xuất thuốc",
                            IsDeleted = false,
                            MajorName = "Dược học"
                        },
                        new
                        {
                            Id = new Guid("3c333b4a-3eac-4333-94ef-70b985ae0303"),
                            Code = "DD",
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Description = "Ngành học về chăm sóc người bệnh tại các cơ sở y tế",
                            IsDeleted = false,
                            MajorName = "Điều dưỡng"
                        },
                        new
                        {
                            Id = new Guid("4d444b5a-4eac-4434-95ef-60b985ae0404"),
                            Code = "RHM",
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Description = "Ngành học về phục hình, nha khoa và chỉnh nha",
                            IsDeleted = false,
                            MajorName = "Răng-Hàm-Mặt"
                        },
                        new
                        {
                            Id = new Guid("5e555b6a-5eac-4535-96ef-50b985ae0505"),
                            Code = "YHCT",
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Description = "Ngành học về phương pháp chữa bệnh bằng y học cổ truyền",
                            IsDeleted = false,
                            MajorName = "Y học cổ truyền"
                        },
                        new
                        {
                            Id = new Guid("a52a3b15-3a21-44cd-8d74-b4c6751e2963"),
                            Code = "SPTH",
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Description = "Đào tạo giáo viên toán học",
                            IsDeleted = false,
                            MajorName = "Sư phạm toán học"
                        },
                        new
                        {
                            Id = new Guid("1dcd3794-f8d5-4d4e-9788-74a3b9426421"),
                            Code = "SPNV",
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Description = "Đào tạo giáo viên ngữ văn",
                            IsDeleted = false,
                            MajorName = "Sư phạm ngữ văn"
                        },
                        new
                        {
                            Id = new Guid("cf3913ca-fa92-4f90-a55b-93725cae4b32"),
                            Code = "SPTA",
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Description = "Đào tạo giáo viên tiếng Anh",
                            IsDeleted = false,
                            MajorName = "Sư phạm tiếng Anh"
                        },
                        new
                        {
                            Id = new Guid("7ea9448b-e686-49e2-a0df-c425bd44f3ea"),
                            Code = "QLGD",
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Description = "Đào tạo quản lý ngành giáo dục",
                            IsDeleted = false,
                            MajorName = "Quản lý giáo dục"
                        },
                        new
                        {
                            Id = new Guid("387c472b-1f7d-4655-838c-80982b8f9e24"),
                            Code = "TKĐH",
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            Description = "Thiết kế các sản phẩm truyền thông đồ họa",
                            IsDeleted = false,
                            MajorName = "Thiết kế đồ họa"
                        },
                        new
                        {
                            Id = new Guid("b629fa64-5dea-4129-9d59-f48c265bca62"),
                            Code = "TKTT",
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            Description = "Thiết kế các sản phẩm thời trang",
                            IsDeleted = false,
                            MajorName = "Thiết kế thời trang"
                        },
                        new
                        {
                            Id = new Guid("44929c3d-dd91-4405-9d4e-f4be315b7fbb"),
                            Code = "TKNT",
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            Description = "Thiết kế các sản phẩm nội thất",
                            IsDeleted = false,
                            MajorName = "Thiết kế nội thất"
                        },
                        new
                        {
                            Id = new Guid("17d5462c-3a8a-4e93-b5e6-69d36186577e"),
                            Code = "DK",
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            Description = "Đào tạo nghệ thuật điêu khắc",
                            IsDeleted = false,
                            MajorName = "Điêu khắc"
                        },
                        new
                        {
                            Id = new Guid("c74e4f33-a078-4219-8f69-7398435aff4d"),
                            Code = "LKT",
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Description = "Ngành học đào tạo kỹ năng về luật kinh tế",
                            IsDeleted = false,
                            MajorName = "Luật kinh tế"
                        },
                        new
                        {
                            Id = new Guid("31b92a5b-8354-450f-a023-6e7d74349ab4"),
                            Code = "LHP",
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Description = "Ngành học đào tạo kỹ năng về luật Hiến pháp và luật hành chính",
                            IsDeleted = false,
                            MajorName = "Luật Hiến pháp và luật hành chính"
                        },
                        new
                        {
                            Id = new Guid("3c25899c-f1a5-48d0-9276-03ef9fd60a24"),
                            Code = "LDS",
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Description = "Ngành học đào tạo kỹ năng về luật dân sự và tố tụng dân sự",
                            IsDeleted = false,
                            MajorName = "Luật dân sự và tố tụng dân sự"
                        },
                        new
                        {
                            Id = new Guid("71bbd6ba-141b-4990-b2fa-28d59e026c75"),
                            Code = "LHS",
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Description = "Ngành học đào tạo kỹ năng về luật dân sự và tố tụng dân sự",
                            IsDeleted = false,
                            MajorName = "Luật hình sự và tố tụng hình sự"
                        },
                        new
                        {
                            Id = new Guid("c0d46118-35a4-4a25-982b-584781b45ca8"),
                            Code = "BC",
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực báo chí",
                            IsDeleted = false,
                            MajorName = "Báo chí"
                        },
                        new
                        {
                            Id = new Guid("19d935fe-5772-48a6-98bd-782450be775a"),
                            Code = "QHCC",
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quan hệ công chúng",
                            IsDeleted = false,
                            MajorName = "Quan hệ công chúng"
                        },
                        new
                        {
                            Id = new Guid("dc05a4d6-7019-424c-bc3b-118c7aa1272b"),
                            Code = "TTĐPT",
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực truyền thông đa phương tiện",
                            IsDeleted = false,
                            MajorName = "Truyền thông đa phương tiện"
                        },
                        new
                        {
                            Id = new Guid("07951ef0-d8df-47a3-82c2-c16dd3a16a3f"),
                            Code = "TTQT",
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Description = "Ngành học đào tạo kỹ năng về truyền thông quốc tế",
                            IsDeleted = false,
                            MajorName = "Truyền thông quốc tế"
                        },
                        new
                        {
                            Id = new Guid("0035306f-de5e-4c60-9e55-4f2282e7dda9"),
                            Code = "NNA",
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Description = "Ngành học đào tạo kỹ năng về ngôn ngữ Anh",
                            IsDeleted = false,
                            MajorName = "Ngôn ngữ Anh"
                        },
                        new
                        {
                            Id = new Guid("0ab02d77-61fb-46ea-8340-7236296c4022"),
                            Code = "NNN",
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Description = "Ngành học đào tạo kỹ năng về ngôn ngữ Nhật",
                            IsDeleted = false,
                            MajorName = "Ngôn ngữ Nhật"
                        },
                        new
                        {
                            Id = new Guid("317f2de4-b76e-4d4b-8b0a-94166493623e"),
                            Code = "VHVN",
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Description = "Ngành học đào tạo kỹ năng về tiếng Việt và văn hóa Việt Nam",
                            IsDeleted = false,
                            MajorName = "Tiếng Việt và văn hóa Việt Nam"
                        },
                        new
                        {
                            Id = new Guid("42308b7d-8d80-4077-a960-433b4eb6ec7a"),
                            Code = "QLVH",
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản lý văn hóa",
                            IsDeleted = false,
                            MajorName = "Quản lý văn hóa"
                        },
                        new
                        {
                            Id = new Guid("0c7c4a30-d3d1-48ea-9526-1b31fe4c0103"),
                            Code = "CNDM",
                            DepartmentId = new Guid("d2322472-e7af-47e7-ab8f-eba6e8e7baad"),
                            Description = "Ngành học đào tạo kỹ năng về công nghệ dệt,may",
                            IsDeleted = false,
                            MajorName = "Công nghệ dệt,may"
                        },
                        new
                        {
                            Id = new Guid("92913faa-9607-43da-b4aa-b6269cad9d12"),
                            Code = "CNDG",
                            DepartmentId = new Guid("d2322472-e7af-47e7-ab8f-eba6e8e7baad"),
                            Description = "Ngành học đào tạo kỹ năng về công nghệ da giày",
                            IsDeleted = false,
                            MajorName = "Công nghệ da giày"
                        },
                        new
                        {
                            Id = new Guid("524954ba-d75f-4cd7-a2af-acf23d383a05"),
                            Code = "CNVL",
                            DepartmentId = new Guid("d2322472-e7af-47e7-ab8f-eba6e8e7baad"),
                            Description = "Ngành học đào tạo kỹ năng về công nghệ vật liệu dệt, may",
                            IsDeleted = false,
                            MajorName = "Công nghệ vật liệu dệt, may"
                        },
                        new
                        {
                            Id = new Guid("bc1e9f85-8404-46eb-a6e6-bab6f898566a"),
                            Code = "KTĐ",
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thuật điện",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật điện"
                        },
                        new
                        {
                            Id = new Guid("667330de-e435-45d1-ab72-4d6504cbba14"),
                            Code = "KTHN",
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thuật hạt nhân",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật hạt nhân"
                        },
                        new
                        {
                            Id = new Guid("ac30fa55-823c-4f49-aa01-98a15822af37"),
                            Code = "KTCN",
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thuật công nghiệp",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật công nghiệp"
                        },
                        new
                        {
                            Id = new Guid("8136a6cf-c815-4d9e-9888-399d76d7c8e1"),
                            Code = "KTHK",
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thuật hàng không",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật hàng không"
                        },
                        new
                        {
                            Id = new Guid("0af0e064-0927-45b7-b9cc-8e8a49996c1c"),
                            Code = "HH",
                            DepartmentId = new Guid("3a8a3b94-db19-44cb-91ae-a895fe50c498"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực hội họa",
                            IsDeleted = false,
                            MajorName = "Hội họa"
                        },
                        new
                        {
                            Id = new Guid("d6f2b6ab-0f91-4ffc-ade1-65b934718b68"),
                            Code = "SPMT",
                            DepartmentId = new Guid("3a8a3b94-db19-44cb-91ae-a895fe50c498"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực sư phạm mỹ thuật",
                            IsDeleted = false,
                            MajorName = "Sư phạm mỹ thuật"
                        },
                        new
                        {
                            Id = new Guid("335f8cf8-94b0-47bd-ba70-eb2aaf0c07b1"),
                            Code = "TN",
                            DepartmentId = new Guid("3a8a3b94-db19-44cb-91ae-a895fe50c498"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thanh nhạc",
                            IsDeleted = false,
                            MajorName = "Thanh nhạc"
                        },
                        new
                        {
                            Id = new Guid("8c2d3663-1012-4a24-809d-bb12e6ed5d23"),
                            Code = "SPAN",
                            DepartmentId = new Guid("3a8a3b94-db19-44cb-91ae-a895fe50c498"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực sư phạm âm nhạc",
                            IsDeleted = false,
                            MajorName = "Sư phạm âm nhạc"
                        },
                        new
                        {
                            Id = new Guid("4c97f72e-0560-449e-a32d-7fac374b5bbf"),
                            Code = "QLNN",
                            DepartmentId = new Guid("6c7f8637-25d3-4284-a4e5-3aa20ceda1f4"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản lý nhà nước",
                            IsDeleted = false,
                            MajorName = "Quản lý nhà nước"
                        },
                        new
                        {
                            Id = new Guid("7e623947-4413-48ab-a0e1-c797405f5f10"),
                            Code = "CTXH",
                            DepartmentId = new Guid("6c7f8637-25d3-4284-a4e5-3aa20ceda1f4"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực công tác xã hội",
                            IsDeleted = false,
                            MajorName = "Công tác xã hội"
                        },
                        new
                        {
                            Id = new Guid("b430ab31-8762-4f35-906f-989f981f61b7"),
                            Code = "QTH",
                            DepartmentId = new Guid("6c7f8637-25d3-4284-a4e5-3aa20ceda1f4"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quốc tế học",
                            IsDeleted = false,
                            MajorName = "Quốc tế học"
                        },
                        new
                        {
                            Id = new Guid("fa88d41b-f627-4e5e-af66-19ead35fb082"),
                            Code = "XDĐ",
                            DepartmentId = new Guid("6c7f8637-25d3-4284-a4e5-3aa20ceda1f4"),
                            Description = "Ngành học đào tạo kỹ năng về xây dựng Đảng và chính quyền nhà nước",
                            IsDeleted = false,
                            MajorName = "Xây dựng Đảng và chính quyền nhà nước"
                        },
                        new
                        {
                            Id = new Guid("e812ac28-8fa5-4c08-8d45-e40b6018056f"),
                            Code = "TTTV",
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực thông tin - thư viện",
                            IsDeleted = false,
                            MajorName = "Thông tin - thư viện"
                        },
                        new
                        {
                            Id = new Guid("9186a969-d349-4cc8-866b-352a5056418c"),
                            Code = "BTH",
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực bảo tàng học",
                            IsDeleted = false,
                            MajorName = "Bảo tàng học"
                        },
                        new
                        {
                            Id = new Guid("2332343e-e798-496b-9ea5-841bdc10552a"),
                            Code = "KHTV",
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực khoa học thư viện",
                            IsDeleted = false,
                            MajorName = "Khoa học thư viện"
                        },
                        new
                        {
                            Id = new Guid("ad437f7f-3242-4270-997f-a0a6f8a0c9b2"),
                            Code = "QLTT",
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản lý thông tin",
                            IsDeleted = false,
                            MajorName = "Quản lý thông tin"
                        },
                        new
                        {
                            Id = new Guid("74757d60-d6c9-4cf3-a657-8f01bf8c42c7"),
                            Code = "QLTNMT",
                            DepartmentId = new Guid("eb977e5d-b2a9-48c2-a540-cefe5a960c1d"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản lý tài nguyên và môi trường",
                            IsDeleted = false,
                            MajorName = "Quản lý tài nguyên và môi trường"
                        },
                        new
                        {
                            Id = new Guid("282b4ad3-d00d-4275-97ae-7480635636e8"),
                            Code = "ĐLTN",
                            DepartmentId = new Guid("eb977e5d-b2a9-48c2-a540-cefe5a960c1d"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực địa lý tự nhiên",
                            IsDeleted = false,
                            MajorName = "Địa lý tự nhiên"
                        },
                        new
                        {
                            Id = new Guid("6d3f0b5b-f3f1-444b-a642-e83b527d7c3a"),
                            Code = "KHMT",
                            DepartmentId = new Guid("eb977e5d-b2a9-48c2-a540-cefe5a960c1d"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực khoa học môi trường",
                            IsDeleted = false,
                            MajorName = "Khoa học môi trường"
                        },
                        new
                        {
                            Id = new Guid("5ee2fae8-eae3-495a-95b6-303307cb596c"),
                            Code = "KTTNTN",
                            DepartmentId = new Guid("eb977e5d-b2a9-48c2-a540-cefe5a960c1d"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kinh tế tài nguyên thiên nhiên",
                            IsDeleted = false,
                            MajorName = "Kinh tế tài nguyên thiên nhiên"
                        },
                        new
                        {
                            Id = new Guid("8ae7996c-505b-4343-9df7-caebf86c9e60"),
                            Code = "TH",
                            DepartmentId = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Description = "Ngành học đào tạo kỹ năng về toán học",
                            IsDeleted = false,
                            MajorName = "Toán học"
                        },
                        new
                        {
                            Id = new Guid("c2a1d4aa-eb5a-4850-84c2-2b4cd2db77e0"),
                            Code = "TUD",
                            DepartmentId = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Description = "Ngành học đào tạo kỹ năng về toán ứng dụng",
                            IsDeleted = false,
                            MajorName = "Toán ứng dụng"
                        },
                        new
                        {
                            Id = new Guid("9e39d8ed-8447-45e6-aa07-9aa76e5c6c49"),
                            Code = "TT",
                            DepartmentId = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Description = "Ngành học đào tạo kỹ năng về toán-tin",
                            IsDeleted = false,
                            MajorName = "Toán-tin"
                        },
                        new
                        {
                            Id = new Guid("825d82f4-470c-4eb5-bf4f-6106b682260e"),
                            Code = "TK",
                            DepartmentId = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Description = "Ngành học đào tạo kỹ năng về thống kê",
                            IsDeleted = false,
                            MajorName = "Thống kê"
                        },
                        new
                        {
                            Id = new Guid("0e9599e3-0279-4ac6-8af5-eb14b3f1e584"),
                            Code = "KTXD",
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thuật xây dựng",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật xây dựng"
                        },
                        new
                        {
                            Id = new Guid("56306665-f58b-4188-8613-578b0fe470ed"),
                            Code = "KT",
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kiến trúc",
                            IsDeleted = false,
                            MajorName = "Kiến trúc"
                        },
                        new
                        {
                            Id = new Guid("86ac7343-b4cd-4dbb-946f-81db8c117f87"),
                            Code = "ĐTH",
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực đô thị học",
                            IsDeleted = false,
                            MajorName = "Đô thị học"
                        },
                        new
                        {
                            Id = new Guid("dd5be2ec-dd31-41ad-8674-d870f7b13ee8"),
                            Code = "KNTXD",
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kinh tế xây dựng",
                            IsDeleted = false,
                            MajorName = "Kinh tế xây dựng"
                        },
                        new
                        {
                            Id = new Guid("bfe5f392-c582-4915-9360-3d90134295d5"),
                            Code = "CNTP",
                            DepartmentId = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực công nghệ thực phẩm",
                            IsDeleted = false,
                            MajorName = "Công nghệ thực phẩm"
                        },
                        new
                        {
                            Id = new Guid("e026cfb6-343f-4af1-a15d-c840165a09b4"),
                            Code = "KTTP",
                            DepartmentId = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thuật thực phẩm",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật thực phẩm"
                        },
                        new
                        {
                            Id = new Guid("da699b0b-c55d-417f-93d8-e9571e712189"),
                            Code = "CNCBTS",
                            DepartmentId = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực công nghệ chế biến thủy sản",
                            IsDeleted = false,
                            MajorName = "Công nghệ chế biến thủy sản"
                        },
                        new
                        {
                            Id = new Guid("8ff0d04b-da37-4345-853c-71b66a2d94eb"),
                            Code = "CNSTH",
                            DepartmentId = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực công nghệ sau thu hoạch",
                            IsDeleted = false,
                            MajorName = "Công nghệ sau thu hoạch"
                        },
                        new
                        {
                            Id = new Guid("97c46aeb-da40-47de-9a6f-52254c3f5eb8"),
                            Code = "QTKS",
                            DepartmentId = new Guid("d7ab840a-0e06-4785-aa71-f82bef075ff9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản trị khách sạn",
                            IsDeleted = false,
                            MajorName = "Quản trị khách sạn"
                        },
                        new
                        {
                            Id = new Guid("995cb552-a1a7-40c9-9032-d374f11f3ed4"),
                            Code = "QTDVDL",
                            DepartmentId = new Guid("d7ab840a-0e06-4785-aa71-f82bef075ff9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản trị dịch vụ du lịch và lữ hành",
                            IsDeleted = false,
                            MajorName = "Quản trị dịch vụ du lịch và lữ hành"
                        },
                        new
                        {
                            Id = new Guid("2793f8f1-98fb-4b13-b5e1-04085ae78762"),
                            Code = "DLĐC",
                            DepartmentId = new Guid("d7ab840a-0e06-4785-aa71-f82bef075ff9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực du lịch địa chất",
                            IsDeleted = false,
                            MajorName = "Du lịch địa chất"
                        },
                        new
                        {
                            Id = new Guid("9f9cdb58-040c-472e-9f6a-576a9ee87fb4"),
                            Code = "DLST",
                            DepartmentId = new Guid("d7ab840a-0e06-4785-aa71-f82bef075ff9"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực du lịch sinh thái",
                            IsDeleted = false,
                            MajorName = "Du lịch sinh thái"
                        },
                        new
                        {
                            Id = new Guid("8a085ad7-3a1e-4cfd-8be9-c1bac0c36517"),
                            Code = "ĐTTS",
                            DepartmentId = new Guid("575e2a34-3e4e-40b3-be97-37310e59085a"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực điều tra trinh sát",
                            IsDeleted = false,
                            MajorName = "Điều tra trinh sát"
                        },
                        new
                        {
                            Id = new Guid("91f89343-44ab-47a9-964b-15437a9678a1"),
                            Code = "ĐTHS",
                            DepartmentId = new Guid("575e2a34-3e4e-40b3-be97-37310e59085a"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực điều tra hình sự",
                            IsDeleted = false,
                            MajorName = "Điều tra hình sự"
                        },
                        new
                        {
                            Id = new Guid("6090009b-8534-4200-a83b-f544d9be8732"),
                            Code = "QSCS",
                            DepartmentId = new Guid("575e2a34-3e4e-40b3-be97-37310e59085a"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quân sự cơ sở",
                            IsDeleted = false,
                            MajorName = "Quân sự cơ sở"
                        },
                        new
                        {
                            Id = new Guid("bc19438f-ee7e-4e59-ad83-e7879c0a54e5"),
                            Code = "CHTMĐC",
                            DepartmentId = new Guid("575e2a34-3e4e-40b3-be97-37310e59085a"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực chỉ huy tham mưu đặc công",
                            IsDeleted = false,
                            MajorName = "Chỉ huy tham mưu đặc công"
                        },
                        new
                        {
                            Id = new Guid("dc482730-bf16-4558-b1b6-8a7f1b8b855d"),
                            Code = "KTCK",
                            DepartmentId = new Guid("38449231-c9b9-46b9-9ee1-83ebaea156f1"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kỹ thuật cơ khí",
                            IsDeleted = false,
                            MajorName = "Kỹ thuật cơ khí"
                        },
                        new
                        {
                            Id = new Guid("0d036fb3-5ff7-4b63-86db-4342a62f886e"),
                            Code = "CNCTM",
                            DepartmentId = new Guid("38449231-c9b9-46b9-9ee1-83ebaea156f1"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực công nghệ chế tạo máy",
                            IsDeleted = false,
                            MajorName = "Công nghệ chế tạo máy"
                        },
                        new
                        {
                            Id = new Guid("b0377a76-981e-4af2-a0d8-d7ae1f723e7b"),
                            Code = "BDCN",
                            DepartmentId = new Guid("38449231-c9b9-46b9-9ee1-83ebaea156f1"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực bảo dưỡng công nghiệp",
                            IsDeleted = false,
                            MajorName = "Bảo dưỡng công nghiệp"
                        },
                        new
                        {
                            Id = new Guid("d05498a2-0502-4a9d-a535-d548db92000a"),
                            Code = "CNVL",
                            DepartmentId = new Guid("38449231-c9b9-46b9-9ee1-83ebaea156f1"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực công nghệ vật liệu",
                            IsDeleted = false,
                            MajorName = "Công nghệ vật liệu"
                        },
                        new
                        {
                            Id = new Guid("748bbfcd-20b9-4be4-8ec5-522afcc5caf4"),
                            Code = "QLB",
                            DepartmentId = new Guid("03a02645-69be-46a7-ad93-cf48b8c2961d"),
                            Description = "Ngành học đào tạo kỹ năng về quản lý biển",
                            IsDeleted = false,
                            MajorName = "Quản lý biển"
                        },
                        new
                        {
                            Id = new Guid("5f246722-c823-466e-a024-254ba25d1750"),
                            Code = "HDH",
                            DepartmentId = new Guid("03a02645-69be-46a7-ad93-cf48b8c2961d"),
                            Description = "Ngành học đào tạo kỹ năng về hải dương học",
                            IsDeleted = false,
                            MajorName = "Hải dương học"
                        },
                        new
                        {
                            Id = new Guid("348cdef7-2ec8-4814-883b-c41218128a3c"),
                            Code = "TVH",
                            DepartmentId = new Guid("03a02645-69be-46a7-ad93-cf48b8c2961d"),
                            Description = "Ngành học đào tạo kỹ năng về thủy văn học",
                            IsDeleted = false,
                            MajorName = "Thủy văn học"
                        },
                        new
                        {
                            Id = new Guid("9e518c87-c522-4fa7-abe1-a318ceec4e09"),
                            Code = "KTH",
                            DepartmentId = new Guid("03a02645-69be-46a7-ad93-cf48b8c2961d"),
                            Description = "Ngành học đào tạo kỹ năng về khí tượng học",
                            IsDeleted = false,
                            MajorName = "Khí tượng học"
                        },
                        new
                        {
                            Id = new Guid("2b49fa02-7c48-45ab-9f81-4605ff991bd4"),
                            Code = "QLCCU",
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản lý chuỗi cung ứng",
                            IsDeleted = false,
                            MajorName = "Quản lý chuỗi cung ứng"
                        },
                        new
                        {
                            Id = new Guid("ca49e2d3-f880-4a4f-9e60-04c57660d730"),
                            Code = "QTCL",
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản trị chất lượng",
                            IsDeleted = false,
                            MajorName = "Quản trị chất lượng"
                        },
                        new
                        {
                            Id = new Guid("66e52181-c48e-4fcc-a68e-421a02a9443e"),
                            Code = "TM",
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực thương mại",
                            IsDeleted = false,
                            MajorName = "Thương mại"
                        },
                        new
                        {
                            Id = new Guid("ad84e105-1ca7-401e-abd7-fdc5d2e40999"),
                            Code = "QTDN",
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực quản trị doanh nghiệp",
                            IsDeleted = false,
                            MajorName = "Quản trị doanh nghiệp"
                        },
                        new
                        {
                            Id = new Guid("1569cd2c-deef-4d74-bdcd-f785f52b465d"),
                            Code = "TCDN",
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Description = "Ngành học đào tạo kỹ năng về tài chính doanh nghiệp",
                            IsDeleted = false,
                            MajorName = "Tài chính doanh nghiệp"
                        },
                        new
                        {
                            Id = new Guid("bc73983d-1bb7-447b-be96-c4fc7b653e5c"),
                            Code = "NH",
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Description = "Ngành học đào tạo kỹ năng về ngân hàng",
                            IsDeleted = false,
                            MajorName = "Ngân hàng"
                        },
                        new
                        {
                            Id = new Guid("99c6c608-54b0-44b5-b018-65b506bb5398"),
                            Code = "TCC",
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Description = "Ngành học đào tạo kỹ năng về tài chính công",
                            IsDeleted = false,
                            MajorName = "Tài chính công"
                        },
                        new
                        {
                            Id = new Guid("820d7547-37d2-480a-84bf-a3cae888b55c"),
                            Code = "THQ",
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Description = "Ngành học đào tạo kỹ năng về thuế - Hải quan",
                            IsDeleted = false,
                            MajorName = "Thuế - Hải quan"
                        },
                        new
                        {
                            Id = new Guid("4989ef16-62cd-4aa1-850f-ef6a8e2b3b2c"),
                            Code = "KTVT",
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực kinh tế vận tải",
                            IsDeleted = false,
                            MajorName = "Kinh tế vận tải"
                        },
                        new
                        {
                            Id = new Guid("6b9f2a3b-e60e-45ef-b5ec-056b362cf874"),
                            Code = "KHHH",
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực khoa học hàng hải",
                            IsDeleted = false,
                            MajorName = "Khoa học hàng hải"
                        },
                        new
                        {
                            Id = new Guid("a767ae08-1162-4d9d-a6f0-e74123c4e055"),
                            Code = "KTVT",
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực khai thác vận tải",
                            IsDeleted = false,
                            MajorName = "Khai thác vận tải"
                        },
                        new
                        {
                            Id = new Guid("2445d565-594a-419b-ab0a-bcd87c2b9a2a"),
                            Code = "LGS",
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Description = "Ngành học đào tạo kỹ năng về lĩnh vực logistics",
                            IsDeleted = false,
                            MajorName = "Logistics"
                        },
                        new
                        {
                            Id = new Guid("9fff7eda-6093-4ce8-b467-f102b0f09430"),
                            Code = "VHĐT",
                            DepartmentId = new Guid("9bf92746-e6c9-46ae-a8ba-9fa93671dcce"),
                            Description = "Ngành học đào tạo kỹ năng về văn hóa đô thị",
                            IsDeleted = false,
                            MajorName = "Văn hóa đô thị"
                        },
                        new
                        {
                            Id = new Guid("5c1310fb-b35b-4529-beb1-79664cc85fc6"),
                            Code = "QLVH",
                            DepartmentId = new Guid("9bf92746-e6c9-46ae-a8ba-9fa93671dcce"),
                            Description = "Ngành học đào tạo kỹ năng về quản lý văn hóa",
                            IsDeleted = false,
                            MajorName = "Quản lý văn hóa"
                        },
                        new
                        {
                            Id = new Guid("d8393091-0dbd-4ab8-b18c-50ae38579ce8"),
                            Code = "VHAT",
                            DepartmentId = new Guid("9bf92746-e6c9-46ae-a8ba-9fa93671dcce"),
                            Description = "Ngành học đào tạo kỹ năng về văn hóa ẩm thực",
                            IsDeleted = false,
                            MajorName = "Văn hóa ẩm thực"
                        },
                        new
                        {
                            Id = new Guid("fcab8031-99a2-40cb-921c-f76e7f250ab6"),
                            Code = "VHNB",
                            DepartmentId = new Guid("9bf92746-e6c9-46ae-a8ba-9fa93671dcce"),
                            Description = "Ngành học đào tạo kỹ năng về văn hóa Nam bộ",
                            IsDeleted = false,
                            MajorName = "Văn hóa Nam bộ"
                        },
                        new
                        {
                            Id = new Guid("e10926c7-63e0-48e0-947c-060ba13d0a8e"),
                            Code = "ĐDSK",
                            DepartmentId = new Guid("07563189-01d5-4ec1-80a6-f9c7ced12408"),
                            Description = "Ngành học đào tạo kỹ năng về đạo diễn sân khấu",
                            IsDeleted = false,
                            MajorName = "Đạo diễn sân khấu"
                        },
                        new
                        {
                            Id = new Guid("b49b3229-b46c-4821-a0f9-2ead482c2bf1"),
                            Code = "ĐDĐATH",
                            DepartmentId = new Guid("07563189-01d5-4ec1-80a6-f9c7ced12408"),
                            Description = "Ngành học đào tạo kỹ năng về đạo diễn điện ảnh, truyền hình",
                            IsDeleted = false,
                            MajorName = "Đạo diễn điện ảnh, truyền hình"
                        },
                        new
                        {
                            Id = new Guid("0273f179-b2ae-434d-835f-6035e8b6ae52"),
                            Code = "DVKDATH",
                            DepartmentId = new Guid("07563189-01d5-4ec1-80a6-f9c7ced12408"),
                            Description = "Ngành học đào tạo kỹ năng về diễn viên kịch, điện ảnh - truyền hình",
                            IsDeleted = false,
                            MajorName = "Diễn viên kịch, điện ảnh - truyền hình"
                        },
                        new
                        {
                            Id = new Guid("2fa7fc82-948a-45bb-a33e-b37a98579b05"),
                            Code = "QP",
                            DepartmentId = new Guid("07563189-01d5-4ec1-80a6-f9c7ced12408"),
                            Description = "Ngành học đào tạo kỹ năng về quay phim",
                            IsDeleted = false,
                            MajorName = "Quay phim"
                        });
                });

            modelBuilder.Entity("Domain.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("TopicId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Content")
                        .IsUnique();

                    b.HasIndex("TopicId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f381da01-ca48-41b6-842d-6b9ff7e8deec"),
                            Content = "{\"Question\":\"Hai dao \\u0111\\u1ED9ng \\u0111i\\u1EC1u h\\u00F2a c\\u00F9ng ph\\u01B0\\u01A1ng, c\\u00F9ng t\\u1EA7n s\\u1ED1 c\\u00F3 bi\\u00EAn \\u0111\\u1ED9 l\\u1EA7n l\\u01B0\\u1EE3t l\\u00E0 A1 = 8 cm; A2 = 15 cm v\\u00E0 l\\u1EC7ch pha nhau 0,5\\u03C0. Dao \\u0111\\u1ED9ng t\\u1ED5ng h\\u1EE3p c\\u1EE7a hai dao \\u0111\\u1ED9ng n\\u00E0y c\\u00F3 bi\\u00EAn \\u0111\\u1ED9 b\\u1EB1ng:\",\"ListAnswer\":[{\"Value\":\"7cm\",\"IsAnswer\":false},{\"Value\":\"17cm\",\"IsAnswer\":true},{\"Value\":\"11cm\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("d1e7ee41-195a-462f-906a-c8b867371e4d")
                        },
                        new
                        {
                            Id = new Guid("9d76c22d-553c-4fe3-ba6b-6c7b38b1e7a5"),
                            Content = "{\"Question\":\"Khi n\\u00F3i v\\u1EC1 dao \\u0111\\u1ED9ng c\\u01B0\\u1EE1ng b\\u1EE9c v\\u00E0 dao \\u0111\\u1ED9ng duy tr\\u00EC, ph\\u00E1t bi\\u1EC3u n\\u00E0o sau \\u0111\\u00E2y l\\u00E0 sai?\",\"ListAnswer\":[{\"Value\":\"Dao \\u0111\\u1ED9ng duy tr\\u00EC c\\u00F3 t\\u1EA7n s\\u1ED1 b\\u1EB1ng t\\u1EA7n s\\u1ED1 ri\\u00EAng c\\u1EE7a h\\u1EC7 dao \\u0111\\u1ED9ng.\",\"IsAnswer\":false},{\"Value\":\"Dao \\u0111\\u1ED9ng duy tr\\u00EC c\\u00F3 bi\\u00EAn \\u0111\\u1ED9 kh\\u00F4ng \\u0111\\u1ED5i.\",\"IsAnswer\":false},{\"Value\":\"Bi\\u00EAn \\u0111\\u1ED9 c\\u1EE7a dao \\u0111\\u1ED9ng c\\u01B0\\u1EE1ng b\\u1EE9c l\\u00E0 bi\\u00EAn \\u0111\\u1ED9 c\\u1EE7a l\\u1EF1c c\\u01B0\\u1EE1ng b\\u1EE9c.\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("d1e7ee41-195a-462f-906a-c8b867371e4d")
                        },
                        new
                        {
                            Id = new Guid("551e3712-3de1-402a-8df9-a35db36011d4"),
                            Content = "{\"Question\":\"M\\u1ED9t v\\u1EADt dao \\u0111\\u1ED9ng \\u0111i\\u1EC1u ho\\u00E0 v\\u1EDBi chu k\\u00EC T, bi\\u00EAn \\u0111\\u1ED9 b\\u1EB1ng 5 cm. Qu\\u00E3ng \\u0111\\u01B0\\u1EDDng v\\u1EADt \\u0111i \\u0111\\u01B0\\u1EE3c trong 2,5T l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"50 cm\",\"IsAnswer\":true},{\"Value\":\"45 cm\",\"IsAnswer\":false},{\"Value\":\"25 cm\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("d1e7ee41-195a-462f-906a-c8b867371e4d")
                        },
                        new
                        {
                            Id = new Guid("a0752c7e-ac76-4a9c-82e4-92ddb89033b0"),
                            Content = "{\"Question\":\"S\\u1ED1 ch\\u1EC9 c\\u1EE7a ampe k\\u1EBF khi m\\u1EAFc n\\u1ED1i ti\\u1EBFp v\\u00E0o \\u0111o\\u1EA1n m\\u1EA1ch \\u0111i\\u1EC7n xoay chi\\u1EC1u cho ta bi\\u1EBFt gi\\u00E1 tr\\u1ECB c\\u01B0\\u1EDDng \\u0111\\u1ED9 d\\u00F2ng \\u0111i\\u1EC7n\",\"ListAnswer\":[{\"Value\":\"c\\u1EF1c \\u0111\\u1EA1i\",\"IsAnswer\":false},{\"Value\":\"hi\\u1EC7u d\\u1EE5ng\",\"IsAnswer\":true},{\"Value\":\"t\\u1EE9c th\\u1EDDi\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("79d76295-efe3-4f84-a831-5ca9913b7ab6")
                        },
                        new
                        {
                            Id = new Guid("19582b83-700e-43f7-9867-d86c71153b4b"),
                            Content = "{\"Question\":\"S\\u00F3ng \\u0111i\\u1EC7n t\\u1EEB c\\u00F3 t\\u1EA7n s\\u1ED1 f = 300 MHz thu\\u1ED9c lo\\u1EA1i\",\"ListAnswer\":[{\"Value\":\"s\\u00F3ng trung\",\"IsAnswer\":false},{\"Value\":\" s\\u00F3ng d\\u00E0i\",\"IsAnswer\":false},{\"Value\":\"s\\u00F3ng c\\u1EF1c ng\\u1EAFn\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("6fc99327-e8b8-42ad-b3f0-641c2f81027d")
                        },
                        new
                        {
                            Id = new Guid("02f6bdd7-aca1-41c8-a7d1-07843aff2d10"),
                            Content = "{\"Question\":\"Trong th\\u00ED nghi\\u1EC7m Y\\u00E2ng v\\u1EC1 giao thoa c\\u1EE7a \\u00E1nh s\\u00E1ng \\u0111\\u01A1n s\\u1EAFc, hai khe h\\u1EB9p c\\u00E1ch nhau 1 mm, m\\u1EB7t ph\\u1EB3ng ch\\u1EE9a hai khe c\\u00E1ch m\\u00E0n quan s\\u00E1t 1,5 m. Kho\\u1EA3ng c\\u00E1ch gi\\u1EEFa 5 v\\u00E2n s\\u00E1ng li\\u00EAn ti\\u1EBFp l\\u00E0 3,6 mm. B\\u01B0\\u1EDBc s\\u00F3ng c\\u1EE7a \\u00E1nh s\\u00E1ng d\\u00F9ng trong th\\u00ED nghi\\u1EC7m n\\u00E0y b\\u1EB1ng:\",\"ListAnswer\":[{\"Value\":\"0,48 \\u00B5m.\",\"IsAnswer\":false},{\"Value\":\"0,40 \\u00B5m.\",\"IsAnswer\":false},{\"Value\":\"0,60 \\u00B5m\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("5a1a8691-497c-4ac4-b764-64b0984a7c49")
                        },
                        new
                        {
                            Id = new Guid("b423d3b0-ebc5-4164-ba8a-458e14f089c5"),
                            Content = "{\"Question\":\"Ng\\u01B0\\u1EDDi ta t\\u1EA1o s\\u00F3ng d\\u1EEBng tr\\u00EAn m\\u1ED9t s\\u1EE3i d\\u00E2y c\\u0103ng gi\\u1EEFa 2 \\u0111i\\u1EC3m c\\u1ED1 \\u0111\\u1ECBnh. Hai t\\u1EA7n s\\u1ED1 g\\u1EA7n nhau nh\\u1EA5t c\\u00F9ng t\\u1EA1o ra s\\u00F3ng d\\u1EEBng tr\\u00EAn d\\u00E2y l\\u00E0 525 Hz v\\u00E0 600 Hz. T\\u1EA7n s\\u1ED1 nh\\u1ECF nh\\u1EA5t t\\u1EA1o ra s\\u00F3ng d\\u1EEBng tr\\u00EAn d\\u00E2y \\u0111\\u00F3 l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"75 Hz\",\"IsAnswer\":true},{\"Value\":\"125 Hz\",\"IsAnswer\":false},{\"Value\":\"100 Hz\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("17ba34ec-7b7c-47ce-9491-6a28d8f0f497")
                        },
                        new
                        {
                            Id = new Guid("d9bde32b-01a3-409b-9991-de7f471add13"),
                            Content = "{\"Question\":\"Khi c\\u00F3 s\\u00F3ng d\\u1EEBng tr\\u00EAn d\\u00E2y kho\\u1EA3ng c\\u00E1ch gi\\u1EEFa hai n\\u00FAt s\\u00F3ng li\\u00EAn ti\\u1EBFp l\\u00E0\",\"ListAnswer\":[{\"Value\":\"m\\u1ED9t b\\u01B0\\u1EDBc s\\u00F3ng\",\"IsAnswer\":false},{\"Value\":\"m\\u1ED9t n\\u1EEDa b\\u01B0\\u1EDBc s\\u00F3ng\",\"IsAnswer\":true},{\"Value\":\"m\\u1ED9t ph\\u1EA7n t\\u01B0 b\\u01B0\\u1EDBc s\\u00F3ng\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("17ba34ec-7b7c-47ce-9491-6a28d8f0f497")
                        },
                        new
                        {
                            Id = new Guid("8e7bbeff-72b3-4010-a716-9b31d5d20186"),
                            Content = "{\"Question\":\"Ph\\u00F3ng x\\u1EA1 l\\u00E0\",\"ListAnswer\":[{\"Value\":\"qu\\u00E1 tr\\u00ECnh h\\u1EA1t nh\\u00E2n nguy\\u00EAn t\\u1EED ph\\u00E1t c\\u00E1c tia kh\\u00F4ng nh\\u00ECn th\\u1EA5y\",\"IsAnswer\":false},{\"Value\":\"qu\\u00E1 tr\\u00ECnh ph\\u00E2n r\\u00E3 t\\u1EF1 ph\\u00E1t c\\u1EE7a m\\u1ED9t h\\u1EA1t nh\\u00E2n kh\\u00F4ng b\\u1EC1n v\\u1EEFng\",\"IsAnswer\":true},{\"Value\":\"qu\\u00E1 tr\\u00ECnh h\\u1EA1t nh\\u00E2n nguy\\u00EAn t\\u1EED n\\u1EB7ng b\\u1ECB ph\\u00E1 v\\u1EE1 th\\u00E0nh c\\u00E1c h\\u1EA1t nh\\u00E2n nh\\u1ECF h\\u01A1n.\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("ba088c8b-890e-4743-9a45-d49066c780a6")
                        },
                        new
                        {
                            Id = new Guid("84680ba8-f5b2-4c12-839d-1177b98a0b4c"),
                            Content = "{\"Question\":\"\\u0110un n\\u00F3ng este HCOOCH3 v\\u1EDBi m\\u1ED9t l\\u01B0\\u1EE3ng v\\u1EEBa \\u0111\\u1EE7 dung d\\u1ECBch NaOH, s\\u1EA3n ph\\u1EA9m thu \\u0111\\u01B0\\u1EE3c l\\u00E0\",\"ListAnswer\":[{\"Value\":\"HCOONa v\\u00E0 CH3OH\",\"IsAnswer\":true},{\"Value\":\"CH3COONa v\\u00E0 C2H5OH\",\"IsAnswer\":false},{\"Value\":\"CH3COONa v\\u00E0 CH3OH\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("111d9344-66dd-4653-8cff-96bb9bc3863a")
                        },
                        new
                        {
                            Id = new Guid("2c845a9e-bf68-475f-8cdc-90d3634e44bb"),
                            Content = "{\"Question\":\"L\\u00EAn men m gam glucoz\\u01A1 v\\u1EDBi hi\\u1EC7u su\\u1EA5t 90%, l\\u01B0\\u1EE3ng kh\\u00ED CO2 sinh ra h\\u1EA5p th\\u1EE5 h\\u1EBFt v\\u00E0o n\\u01B0\\u1EDBc v\\u00F4i trong, thu \\u0111\\u01B0\\u1EE3c 10 gam k\\u1EBFt t\\u1EE7a. Kh\\u1ED1i l\\u01B0\\u1EE3ng dung d\\u1ECBch sau ph\\u1EA3n \\u1EE9ng gi\\u1EA3m 3,4 gam so v\\u1EDBi kh\\u1ED1i l\\u01B0\\u1EE3ng ban \\u0111\\u1EA7u. Gi\\u00E1 tr\\u1ECB c\\u1EE7a m l\\u00E0\",\"ListAnswer\":[{\"Value\":\"15,0.\",\"IsAnswer\":true},{\"Value\":\"30\",\"IsAnswer\":false},{\"Value\":\"13,5\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("9207680f-4c5e-4725-aec7-85d64102b0e9")
                        },
                        new
                        {
                            Id = new Guid("efaaf3af-cbfc-4a92-a101-1533a05081fc"),
                            Content = "{\"Question\":\"\\u0110\\u1EC3 ch\\u1EE9ng minh trong ph\\u00E2n t\\u1EED c\\u1EE7a glucoz\\u01A1 c\\u00F3 nhi\\u1EC1u nh\\u00F3m hi\\u0111roxyl, ng\\u01B0\\u1EDDi ta cho dung d\\u1ECBch glucoz\\u01A1 ph\\u1EA3n \\u1EE9ng v\\u1EDBi\",\"ListAnswer\":[{\"Value\":\"Cu(OH)2 \\u1EDF nhi\\u1EC7t \\u0111\\u1ED9 th\\u01B0\\u1EDDng\",\"IsAnswer\":true},{\"Value\":\"Kim lo\\u1EA1i Na\",\"IsAnswer\":false},{\"Value\":\"Cu(OH)2 trong NaOH, \\u0111un n\\u00F3ng\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("9207680f-4c5e-4725-aec7-85d64102b0e9")
                        },
                        new
                        {
                            Id = new Guid("b7aa8c42-5ad5-4a5c-9b5d-b4f2d1d4e331"),
                            Content = "{\"Question\":\"S\\u1ED1 nh\\u00F3m amino v\\u00E0 s\\u1ED1 nh\\u00F3m cacboxyl c\\u00F3 trong m\\u1ED9t ph\\u00E2n t\\u1EED axit glutamic t\\u01B0\\u01A1ng \\u1EE9ng l\\u00E0\",\"ListAnswer\":[{\"Value\":\"2 v\\u00E0 2\",\"IsAnswer\":false},{\"Value\":\"1 v\\u00E0 2.\",\"IsAnswer\":true},{\"Value\":\"1 v\\u00E0 1\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("dd4d8c18-5a33-4a61-a34b-e2cd10226ec8")
                        },
                        new
                        {
                            Id = new Guid("6e6f683f-70cc-415a-bb0c-f0aa7962d649"),
                            Content = "{\"Question\":\"Polime n\\u00E0o sau \\u0111\\u00E2y thu\\u1ED9c lo\\u1EA1i polime thi\\u00EAn nhi\\u00EAn ?\",\"ListAnswer\":[{\"Value\":\"polietilen\",\"IsAnswer\":false},{\"Value\":\"tinh b\\u1ED9t\",\"IsAnswer\":true},{\"Value\":\"polistiren\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("cb01694c-ebac-478c-bbef-6845d723e501")
                        },
                        new
                        {
                            Id = new Guid("ea6ca33f-7780-4ecb-9311-4d1c3d8e4337"),
                            Content = "{\"Question\":\"\\u0110\\u1EC3 \\u0111i\\u1EC1u ch\\u1EBF Al kim lo\\u1EA1i ta c\\u00F3 th\\u1EC3 d\\u00F9ng ph\\u01B0\\u01A1ng ph\\u00E1p n\\u00E0o trong c\\u00E1c ph\\u01B0\\u01A1ng ph\\u00E1p sau \\u0111\\u00E2y ?\",\"ListAnswer\":[{\"Value\":\"D\\u00F9ng CO kh\\u1EED Al2O3\",\"IsAnswer\":false},{\"Value\":\"\\u0110i\\u1EC7n ph\\u00E2n n\\u00F3ng ch\\u1EA3y Al2O3\",\"IsAnswer\":true},{\"Value\":\"D\\u00F9ng Zn \\u0111\\u1EA9y AlCl3 ra kh\\u1ECFi mu\\u1ED1i\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("db827133-7fbb-4b8e-bcdd-7f769e849505")
                        },
                        new
                        {
                            Id = new Guid("d6fe0d35-1858-41dd-9ef6-747adb651bb2"),
                            Content = "{\"Question\":\"H\\u1ED7n h\\u1EE3p X ch\\u1EE9a Na2O, NH4Cl, NaHCO3 v\\u00E0 BaCl2 v\\u1EDBi s\\u1ED1 mol c\\u00E1c ch\\u1EA5t b\\u1EB1ng nhau. Cho h\\u1ED7n h\\u1EE3p X v\\u00E0o n\\u01B0\\u1EDBc d\\u01B0 v\\u00E0 \\u0111un n\\u00F3ng. C\\u00E1c ch\\u1EA5t tan trong dung d\\u1ECBch thu \\u0111\\u01B0\\u1EE3c l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"NaCl, NaOH, BaCl2\",\"IsAnswer\":false},{\"Value\":\"NaCl, NaOH\",\"IsAnswer\":false},{\"Value\":\"NaCl\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("111aa302-4022-42e7-bf44-5546d2212240")
                        },
                        new
                        {
                            Id = new Guid("abf931e5-52fd-44f8-9941-08ac0ec1c876"),
                            Content = "{\"Question\":\"Ho\\u00E0 tan ho\\u00E0n to\\u00E0n m (g) FexOy b\\u1EB1ng dd H2SO4 \\u0111\\u1EB7c n\\u00F3ng thu \\u0111\\u01B0\\u1EE3c 2,24lit SO2 (\\u0111ktc). Ph\\u1EA7n dd ch\\u1EE9a 120(g) m\\u1ED9t lo\\u1EA1i mu\\u1ED1i s\\u1EAFt duy nh\\u1EA5t. C\\u00F4ng th\\u1EE9c oxit s\\u1EAFt v\\u00E0 kh\\u1ED1i l\\u01B0\\u1EE3ng m l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"Fe3O4; m = 23,2(g)\",\"IsAnswer\":false},{\"Value\":\"FeO; m = 7,2(g)\",\"IsAnswer\":false},{\"Value\":\"Fe3O4; m = 46,4(g)\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("20dd53da-8d28-4f31-b2d6-7e722fbf1aea")
                        },
                        new
                        {
                            Id = new Guid("92557132-9238-4d73-8f09-d95717bd90f3"),
                            Content = "{\"Question\":\"C\\u00F3 6 ch\\u1EA5t r\\u1EAFn ri\\u00EAng bi\\u1EC7t g\\u1ED3m CuO, FeO, Fe3O4, MnO2, Ag2O v\\u00E0 h\\u1ED7n h\\u1EE3p (Fe \\u002B FeO). C\\u00F3 th\\u1EC3 d\\u00F9ng dung d\\u1ECBch ch\\u1EE9a ch\\u1EA5t n\\u00E0o sau \\u0111\\u00E2y \\u0111\\u1EC3 ph\\u00E2n bi\\u1EC7t 6 ch\\u1EA5t r\\u1EAFn tr\\u00EAn ?\",\"ListAnswer\":[{\"Value\":\"H2SO4 \\u0111\\u1EB7c ngu\\u1ED9i\",\"IsAnswer\":false},{\"Value\":\"H2SO4 lo\\u00E3ng\",\"IsAnswer\":false},{\"Value\":\"HCl lo\\u00E3ng, \\u0111un n\\u00F3ng\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("4bf74338-43a1-495c-ba6a-8d4b4aa431ab")
                        },
                        new
                        {
                            Id = new Guid("921aecb2-3208-448b-bc96-0c833dd576cc"),
                            Content = "{\"Question\":\"Chu\\u1EA9n \\u0111\\u1ED9 20ml dung d\\u1ECBch HCl aM b\\u1EB1ng dung d\\u1ECBch NaOH 0,5M c\\u1EA7n d\\u00F9ng h\\u1EBFt 11ml. G\\u00EDa tr\\u1ECB c\\u1EE7a a l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"0,275\",\"IsAnswer\":true},{\"Value\":\"0,265\",\"IsAnswer\":false},{\"Value\":\"0,11\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("4bf74338-43a1-495c-ba6a-8d4b4aa431ab")
                        },
                        new
                        {
                            Id = new Guid("1abf63a6-2a63-4b91-bd36-856c13309419"),
                            Content = "{\"Question\":\"Trong ph\\u00F2ng th\\u00ED nghi\\u1EC7m, ng\\u01B0\\u1EDDi ta s\\u1EED d\\u1EE5ng 3 lo\\u1EA1i nucleotit c\\u1EA5u t\\u1EA1o n\\u00EAn ARN \\u0111\\u1EC3 t\\u1ED5ng h\\u1EE3p 1 ph\\u00E2n t\\u1EED mARN nh\\u00E2n t\\u1EA1o. Ph\\u00E2n t\\u1EED mARN n\\u00E0y ch\\u1EC9 c\\u00F3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n \\u0111\\u01B0\\u1EE3c d\\u1ECBch m\\u00E3 khi 3 lo\\u1EA1i nucleotit \\u0111\\u01B0\\u1EE3c s\\u1EED d\\u1EE5ng l\\u00E0\",\"ListAnswer\":[{\"Value\":\"U, G v\\u00E0 X\",\"IsAnswer\":false},{\"Value\":\"G, A v\\u00E0 X\",\"IsAnswer\":false},{\"Value\":\"G, A v\\u00E0 U\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("533446a5-2f4c-4618-a441-f02bad78e322")
                        },
                        new
                        {
                            Id = new Guid("7af0247b-a9fe-48e0-aa2f-eb7b31dcd698"),
                            Content = "{\"Question\":\"\\u1EDE c\\u00E1c lo\\u00E0i sinh v\\u1EADt l\\u01B0\\u1EE1ng b\\u1ED9i, s\\u1ED1 nh\\u00F3m gen li\\u00EAn k\\u1EBFt \\u1EDF m\\u1ED7i lo\\u00E0i b\\u1EB1ng s\\u1ED1\",\"ListAnswer\":[{\"Value\":\"t\\u00EDnh tr\\u1EA1ng c\\u1EE7a lo\\u00E0i\",\"IsAnswer\":false},{\"Value\":\"NST trong b\\u1ED9 l\\u01B0\\u1EE1ng b\\u1ED9i c\\u1EE7a lo\\u00E0i\",\"IsAnswer\":false},{\"Value\":\"NST trong b\\u1ED9 \\u0111\\u01A1n b\\u1ED9i c\\u1EE7a lo\\u00E0i\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("f0a45c6c-be92-4c73-829e-907591c7694a")
                        },
                        new
                        {
                            Id = new Guid("58aca4f0-7ef3-4d69-828b-35d19e42cace"),
                            Content = "{\"Question\":\"Trong 1 qu\\u1EA7n th\\u1EC3 giao ph\\u1ED1i, nh\\u1EADn \\u0111\\u1ECBnh n\\u00E0o d\\u01B0\\u1EDBi \\u0111\\u00E2y l\\u00E0 \\u0111\\u00FAng?\",\"ListAnswer\":[{\"Value\":\"T\\u1EA7n s\\u1ED1 t\\u01B0\\u01A1ng \\u0111\\u1ED1i c\\u1EE7a c\\u00E1c alen trong 1gen n\\u00E0o \\u0111\\u00F3 l\\u00E0 kh\\u00F4ng \\u0111\\u1EB7c tr\\u01B0ng cho t\\u1EEBng qu\\u1EA7n th\\u1EC3.\",\"IsAnswer\":false},{\"Value\":\"T\\u1EA7n s\\u1ED1 t\\u01B0\\u01A1ng \\u0111\\u1ED1i c\\u1EE7a c\\u00E1c alen trong 1gen n\\u00E0o \\u0111\\u00F3 l\\u00E0 \\u0111\\u1EB7c tr\\u01B0ng cho t\\u1EEBng qu\\u1EA7n th\\u1EC3.\",\"IsAnswer\":false},{\"Value\":\"T\\u1EA7n s\\u1ED1 t\\u01B0\\u01A1ng \\u0111\\u1ED1i c\\u1EE7a c\\u00E1c ki\\u1EC3u gen c\\u00F3 t\\u00EDnh \\u0111\\u1EB7c tr\\u01B0ng cho t\\u1EEBng qu\\u1EA7n th\\u1EC3.\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("0546ebd3-376e-4246-bdb3-9ae20e6f253c")
                        },
                        new
                        {
                            Id = new Guid("67077697-1769-4658-b9ce-e443180e6ff4"),
                            Content = "{\"Question\":\"Quy tr\\u00ECnh t\\u1EA1o ra nh\\u1EEFng t\\u1EBF b\\u00E0o ho\\u1EB7c sinh v\\u1EADt c\\u00F3 gen b\\u1ECB bi\\u1EBFn \\u0111\\u1ED5i ho\\u1EB7c c\\u00F3 th\\u00EAm gen m\\u1EDBi, t\\u1EEB \\u0111\\u00F3 t\\u1EA1o ra c\\u00E1c c\\u01A1 th\\u1EC3 v\\u1EDBi nh\\u1EEFng \\u0111\\u1EB7c \\u0111i\\u1EC3m m\\u1EDBi \\u0111\\u01B0\\u1EE3c g\\u1ECDi l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"c\\u00F4ng ngh\\u1EC7 vi sinh v\\u1EADt\",\"IsAnswer\":false},{\"Value\":\"c\\u00F4ng ngh\\u1EC7 gen\",\"IsAnswer\":true},{\"Value\":\"c\\u00F4ng ngh\\u1EC7 t\\u1EBF b\\u00E0o\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("45b651e7-9e76-42d0-b996-aeb00ec00d3f")
                        },
                        new
                        {
                            Id = new Guid("cf13aa13-1104-4b55-bc06-bef52a8dcdb3"),
                            Content = "{\"Question\":\"Di truy\\u1EC1n y h\\u1ECDc l\\u00E0 ng\\u00E0nh khoa h\\u1ECDc v\\u1EADn d\\u1EE5ng nh\\u1EEFng hi\\u1EC3u bi\\u1EBFt v\\u1EC1 Di truy\\u1EC1n h\\u1ECDc ng\\u01B0\\u1EDDi v\\u00E0o y h\\u1ECDc\",\"ListAnswer\":[{\"Value\":\"\\u0111\\u1EC3 \\u0111i\\u1EC1u tr\\u1ECB trong 1 s\\u1ED1 tr\\u01B0\\u1EDDng h\\u1EE3p b\\u1EC7nh l\\u00ED\",\"IsAnswer\":false},{\"Value\":\"gi\\u00FAp cho vi\\u1EC7c gi\\u1EA3i th\\u00EDch, ch\\u1EA9n \\u0111o\\u00E1n, ph\\u00F2ng ng\\u1EEBa, h\\u1EA1n ch\\u1EBF c\\u00E1c b\\u1EC7nh t\\u1EADt di truy\\u1EC1n v\\u00E0 \\u0111i\\u1EC1u tr\\u1ECB trong 1 s\\u1ED1 tr\\u01B0\\u1EDDng h\\u1EE3p b\\u1EC7nh l\\u00ED.\",\"IsAnswer\":true},{\"Value\":\"\\u0111\\u1EC3 gi\\u1EA3i th\\u00EDch, ch\\u1EA9n \\u0111o\\u00E1n c\\u00E1c t\\u1EADt, b\\u1EC7nh di truy\\u1EC1n\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("4881c89c-4995-4833-a00c-90bac688b8c4")
                        },
                        new
                        {
                            Id = new Guid("75a4aef4-0914-4509-a778-149c8c18edce"),
                            Content = "{\"Question\":\"M\\u1ED7i lo\\u00E0i giao ph\\u1ED1i l\\u00E0 m\\u1ED9t t\\u1ED5 ch\\u1EE9c t\\u1EF1 nhi\\u00EAn, c\\u00F3 t\\u00EDnh to\\u00E0n v\\u1EB9n l\\u00E0 do c\\u00E1ch li\",\"ListAnswer\":[{\"Value\":\"di truy\\u1EC1n\",\"IsAnswer\":false},{\"Value\":\"sinh s\\u1EA3n\",\"IsAnswer\":true},{\"Value\":\"sinh th\\u00E1i\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("b2a7a480-c0e9-424a-a3cf-e35ed4f7e794")
                        },
                        new
                        {
                            Id = new Guid("188c4fda-2283-4ab1-8eae-e1f9db22a2b0"),
                            Content = "{\"Question\":\"S\\u1EF1 ph\\u00E1t sinh, ph\\u00E1t tri\\u1EC3n c\\u1EE7a s\\u1EF1 s\\u1ED1ng tr\\u00EAn Tr\\u00E1i \\u0110\\u1EA5t l\\u1EA7n l\\u01B0\\u1EE3t tr\\u1EA3i qua c\\u00E1c giai \\u0111o\\u1EA1n:\",\"ListAnswer\":[{\"Value\":\"Ti\\u1EBFn h\\u00F3a h\\u00F3a h\\u1ECDc \\u2013 ti\\u1EBFn h\\u00F3a ti\\u1EC1n sinh h\\u1ECDc - ti\\u1EBFn h\\u00F3a sinh h\\u1ECDc\",\"IsAnswer\":true},{\"Value\":\"Ti\\u1EBFn h\\u00F3a h\\u00F3a h\\u1ECDc \\u2013 ti\\u1EBFn h\\u00F3a sinh h\\u1ECDc.\",\"IsAnswer\":false},{\"Value\":\"Ti\\u1EBFn h\\u00F3a sinh h\\u1ECDc \\u2013 ti\\u1EBFn h\\u00F3a h\\u00F3a h\\u1ECDc \\u2013 ti\\u1EBFn h\\u00F3a ti\\u1EC1n sinh h\\u1ECDc.\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("03699ee1-aa9b-4695-8593-8112a5b7145f")
                        },
                        new
                        {
                            Id = new Guid("e7d454dc-e07b-4d56-bfc0-c33b4455192d"),
                            Content = "{\"Question\":\"D\\u1EA5u hi\\u1EC7u n\\u00E0o kh\\u00F4ng ph\\u1EA3i l\\u00E0 \\u0111\\u1EB7c tr\\u01B0ng c\\u1EE7a qu\\u1EA7n th\\u1EC3?\",\"ListAnswer\":[{\"Value\":\"\\u0111\\u1ED9 \\u0111a d\\u1EA1ng\",\"IsAnswer\":true},{\"Value\":\"t\\u1EC9 l\\u1EC7 \\u0111\\u1EF1c \\u2013 c\\u00E1i\",\"IsAnswer\":false},{\"Value\":\"m\\u1EADt \\u0111\\u1ED9\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("c444dd00-cde1-43b3-9761-ea0eca9553e9")
                        },
                        new
                        {
                            Id = new Guid("733909fe-c214-4d72-b6fc-f4c8e176f842"),
                            Content = "{\"Question\":\"Hi\\u1EC7n t\\u01B0\\u1EE3ng kh\\u1ED1ng ch\\u1EBF sinh h\\u1ECDc \\u0111\\u00E3\",\"ListAnswer\":[{\"Value\":\"\\u0111\\u1EA3m b\\u1EA3o c\\u00E2n b\\u1EB1ng sinh th\\u00E1i trong qu\\u1EA7n x\\u00E3\",\"IsAnswer\":true},{\"Value\":\"l\\u00E0m cho m\\u1ED9t lo\\u00E0i b\\u1ECB ti\\u00EAu di\\u1EC7t\",\"IsAnswer\":false},{\"Value\":\"m\\u1EA5t c\\u00E2n b\\u1EB1ng trong qu\\u1EA7n x\\u00E3\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("49d712a6-e7ca-4252-a430-308f954047ff")
                        },
                        new
                        {
                            Id = new Guid("51c0e4fa-7565-4230-9dd6-cd40f4667ccc"),
                            Content = "{\"Question\":\"H\\u1EC7 sinh th\\u00E1i t\\u1EF1 nhi\\u00EAn c\\u00F3 c\\u1EA5u tr\\u00FAc \\u1ED5n \\u0111\\u1ECBnh v\\u00E0 ho\\u00E0n ch\\u1EC9nh v\\u00EC\",\"ListAnswer\":[{\"Value\":\"c\\u00F3 nhi\\u1EC1u chu\\u1ED7i v\\u00E0 l\\u01B0\\u1EDBi th\\u1EE9c \\u0103n\",\"IsAnswer\":false},{\"Value\":\"c\\u00F3 s\\u1EF1 \\u0111a d\\u1EA1ng sinh h\\u1ECDc\",\"IsAnswer\":true},{\"Value\":\"c\\u00F3 c\\u1EA5u tr\\u00FAc l\\u1EDBn nh\\u1EA5t\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("356135ae-0bc9-4560-af03-191995168919")
                        },
                        new
                        {
                            Id = new Guid("3848919c-ba2f-41f3-8c50-176275dd76cb"),
                            Content = "{\"Question\":\"N\\u0103m 1977, Vi\\u1EC7t Nam tr\\u1EDF th\\u00E0nh th\\u00E0nh vi\\u00EAn th\\u1EE9 m\\u1EA5y c\\u1EE7a Li\\u00EAn h\\u1EE3p qu\\u1ED1c?\",\"ListAnswer\":[{\"Value\":\"Th\\u00E0nh vi\\u00EAn th\\u1EE9 148\",\"IsAnswer\":false},{\"Value\":\"Th\\u00E0nh vi\\u00EAn th\\u1EE9 149\",\"IsAnswer\":true},{\"Value\":\"Th\\u00E0nh vi\\u00EAn th\\u1EE9 147\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("c5470d64-b50b-447c-8d89-fc5b9bf338d3")
                        },
                        new
                        {
                            Id = new Guid("cbdea889-463d-4ecc-bf8f-f05467f1fc19"),
                            Content = "{\"Question\":\"K\\u1EBF ho\\u1EA1ch 5 n\\u0103m (1946-1950) c\\u1EE7a Li\\u00EAn X\\u00F4 \\u0111\\u01B0\\u1EE3c ti\\u1EBFn h\\u00E0nh trong th\\u1EDDi gian bao l\\u00E2u?\",\"ListAnswer\":[{\"Value\":\"1 n\\u0103m 3 th\\u00E1ng\",\"IsAnswer\":false},{\"Value\":\"4 n\\u0103m 3 th\\u00E1ng\",\"IsAnswer\":true},{\"Value\":\"9 th\\u00E1ng\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("bffb16de-cbfc-4a26-8e27-370225aa09aa")
                        },
                        new
                        {
                            Id = new Guid("75eeeaf3-5d75-48e4-aa8b-f18f4fbe81eb"),
                            Content = "{\"Question\":\"S\\u1EF1 ki\\u1EC7n Nenx\\u01A1n Man\\u0111\\u00EAla tr\\u1EDF th\\u00E0nh t\\u1ED5ng th\\u1ED1ng Nam Phi (1994) \\u0111\\u00E1nh d\\u1EA5u\",\"ListAnswer\":[{\"Value\":\"s\\u1EF1 ch\\u1EA5m d\\u1EE9t ho\\u00E0n to\\u00E0n ch\\u1EE7 ngh\\u0129a ph\\u00E2n bi\\u1EC7t ch\\u1EE7ng t\\u1ED9c \\u1EDF Nam Phi.\",\"IsAnswer\":true},{\"Value\":\"s\\u1EF1 s\\u1EE5p \\u0111\\u1ED5 ho\\u00E0n to\\u00E0n c\\u1EE7a ch\\u1EE7 ngh\\u0129a th\\u1EF1c d\\u00E2n c\\u0169 tr\\u00EAn th\\u1EBF gi\\u1EDBi.\",\"IsAnswer\":false},{\"Value\":\"s\\u1EF1 th\\u1EAFng l\\u1EE3i c\\u1EE7a phong tr\\u00E0o gi\\u1EA3i ph\\u00F3ng d\\u00E2n t\\u1ED9c \\u1EDF ch\\u00E2u Phi.\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("c20ee29b-c548-4a55-9f5c-2c78113b445e")
                        },
                        new
                        {
                            Id = new Guid("de226c30-025a-4f46-b071-fc76cbfc5ff5"),
                            Content = "{\"Question\":\"H\\u1EADu qu\\u1EA3 c\\u1EE7a Chi\\u1EBFn tranh th\\u1EBF gi\\u1EDBi th\\u1EE9 hai (1939-1945) \\u0111\\u1EC3 l\\u1EA1i \\u0111\\u00E3 l\\u00E0m cho n\\u1EC1n kinh t\\u1EBF T\\u00E2y \\u00C2u tr\\u1EDF n\\u00EAn\",\"ListAnswer\":[{\"Value\":\"Ph\\u00E1t tri\\u1EC3n m\\u1EA1nh m\\u1EBD\",\"IsAnswer\":false},{\"Value\":\"Ph\\u00E1t tri\\u1EC3n ch\\u1EADm\",\"IsAnswer\":false},{\"Value\":\"Ki\\u1EC7t qu\\u1EC7\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("5054a03a-17d9-4ba1-b33c-fef16aa2ffc0")
                        },
                        new
                        {
                            Id = new Guid("f1854eb1-754b-4488-9d4a-088c008c5cf0"),
                            Content = "{\"Question\":\"Sau chi\\u1EBFn tranh th\\u1EBF gi\\u1EDBi th\\u1EE9 hai, quan h\\u1EC7 gi\\u1EEFa M\\u0129 v\\u00E0 Li\\u00EAn X\\u00F4 \\u0111\\u00E3 c\\u00F3 s\\u1EF1 chuy\\u1EC3n bi\\u1EBFn nh\\u01B0 th\\u1EBF n\\u00E0o?\",\"ListAnswer\":[{\"Value\":\"H\\u1EE3p t\\u00E1c v\\u1EDBi nhau trong vi\\u1EC7c gi\\u1EA3i quy\\u1EBFt nhi\\u1EC1u v\\u1EA5n \\u0111\\u1EC1 qu\\u1ED1c t\\u1EBF l\\u1EDBn\",\"IsAnswer\":false},{\"Value\":\"T\\u1EEB \\u0111\\u1ED3ng minh trong chi\\u1EBFn tranh chuy\\u1EC3n sang \\u0111\\u1ED1i \\u0111\\u1EA7u v\\u00E0 \\u0111i \\u0111\\u1EBFn t\\u00ECnh tr\\u1EA1ng chi\\u1EBFn tranh l\\u1EA1nh.\",\"IsAnswer\":true},{\"Value\":\"Chuy\\u1EC3n t\\u1EEB \\u0111\\u1ED1i \\u0111\\u1EA7u sang \\u0111\\u1ED1i tho\\u1EA1i, th\\u1EF1c hi\\u1EC7n h\\u1EE3p t\\u00E1c tr\\u00EAn nhi\\u1EC1u l\\u0129nh v\\u1EF1c\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("b4f8ba38-e4f6-4fa9-a49a-18e74322e133")
                        },
                        new
                        {
                            Id = new Guid("a294a985-9bdb-4eee-b593-837776db1553"),
                            Content = "{\"Question\":\"Th\\u1EF1c d\\u00E2n Ph\\u00E1p ti\\u1EBFn h\\u00E0nh cu\\u1ED9c khai th\\u00E1c thu\\u1ED9c \\u0111\\u1ECBa l\\u1EA7n th\\u1EE9 hai \\u1EDF \\u0110\\u00F4ng D\\u01B0\\u01A1ng (1919 - 1929) khi\",\"ListAnswer\":[{\"Value\":\"Th\\u1EBF gi\\u1EDBi t\\u01B0 b\\u1EA3n \\u0111ang l\\u00E2m v\\u00E0o kh\\u1EE7ng ho\\u1EA3ng th\\u1EEBa\",\"IsAnswer\":false},{\"Value\":\"Cu\\u1ED9c chi\\u1EBFn tranh th\\u1EBF gi\\u1EDBi th\\u1EE9 nh\\u1EA5t k\\u1EBFt th\\u00FAc.\",\"IsAnswer\":true},{\"Value\":\"Kinh t\\u1EBF c\\u00E1c n\\u01B0\\u1EDBc t\\u01B0 b\\u1EA3n \\u0111ang tr\\u00EAn \\u0111\\u00E0 ph\\u00E1t tri\\u1EC3n\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("9654577c-a684-4ec7-ac30-fd49386482a7")
                        },
                        new
                        {
                            Id = new Guid("9cd5e3c3-056e-48ea-948c-707e2fb4efb3"),
                            Content = "{\"Question\":\"H\\u00ECnh th\\u1EE9c m\\u1EB7t tr\\u1EADn \\u0111\\u01B0\\u1EE3c th\\u00E0nh l\\u1EADp trong phong tr\\u00E0o 1930 - 1931 l\\u00E0\",\"ListAnswer\":[{\"Value\":\"Ch\\u1EC9 c\\u00F3 li\\u00EAn minh c\\u00F4ng - n\\u00F4ng.\",\"IsAnswer\":true},{\"Value\":\"M\\u1EB7t tr\\u1EADn d\\u00E2n ch\\u1EE7 \\u0110\\u00F4ng D\\u01B0\\u01A1ng\",\"IsAnswer\":false},{\"Value\":\"M\\u1EB7t tr\\u1EADn nh\\u00E2n d\\u00E2n ph\\u1EA3n \\u0111\\u1EBF \\u0110\\u00F4ng D\\u01B0\\u01A1ng\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("670f0b14-435e-413f-ac27-7271ed1b87bb")
                        },
                        new
                        {
                            Id = new Guid("79c09f5a-9ee5-4a93-b268-05d178d43f23"),
                            Content = "{\"Question\":\"\\u0110\\u01B0\\u1EDDng l\\u1ED1i kh\\u00E1ng chi\\u1EBFn ch\\u1ED1ng Ph\\u00E1p c\\u1EE7a \\u0110\\u1EA3ng l\\u00E0\",\"ListAnswer\":[{\"Value\":\"to\\u00E0n d\\u00E2n, to\\u00E0n di\\u1EC7n, \\u0111\\u00E1nh nhanh th\\u1EAFng nhanh, t\\u1EF1 l\\u1EF1c c\\u00E1nh sinh\",\"IsAnswer\":false},{\"Value\":\"to\\u00E0n d\\u00E2n, to\\u00E0n di\\u1EC7n, tr\\u01B0\\u1EDDng k\\u00EC, ch\\u1EC9 d\\u1EF1a v\\u00E0o s\\u1EE9c l\\u1EF1c b\\u1EA3n th\\u00E2n\",\"IsAnswer\":false},{\"Value\":\"to\\u00E0n d\\u00E2n, to\\u00E0n di\\u1EC7n, tr\\u01B0\\u1EDDng k\\u00EC, t\\u1EF1 l\\u1EF1c c\\u00E1nh sinh v\\u00E0 tranh th\\u1EE7 s\\u1EF1 \\u1EE7ng h\\u1ED9 qu\\u1ED1c t\\u1EBF\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("596c886d-ae82-4b7e-9d88-7f185f57778e")
                        },
                        new
                        {
                            Id = new Guid("8e9f36cb-54eb-48d4-b5c9-d7cbaf1f744c"),
                            Content = "{\"Question\":\"Chi\\u1EBFn tranh c\\u1EE5c b\\u1ED9 kh\\u00E1c Chi\\u1EBFn tranh \\u0111\\u1EB7c bi\\u1EC7t \\u1EDF \\u0111i\\u1EC3m n\\u00E0o ?\",\"ListAnswer\":[{\"Value\":\"Chi\\u1EBFn tranh c\\u1EE5c b\\u1ED9 s\\u1EED d\\u1EE5ng v\\u0169 kh\\u00ED v\\u00E0 ph\\u01B0\\u01A1ng ti\\u1EC7n chi\\u1EBFn tranh do M\\u0129 cung c\\u1EA5p\",\"IsAnswer\":false},{\"Value\":\"Chi\\u1EBFn tranh c\\u1EE5c b\\u1ED9 l\\u00E0 h\\u00ECnh th\\u1EE9c chi\\u1EBFn tranh c\\u1EE7a ch\\u1EE7 ngh\\u0129a th\\u1EF1c d\\u00E2n m\\u1EDBi\",\"IsAnswer\":false},{\"Value\":\"Chi\\u1EBFn tranh c\\u1EE5c b\\u1ED9 ch\\u1EE7 y\\u1EBFu \\u0111\\u01B0\\u1EE3c ti\\u1EBFn h\\u00E0nh b\\u1EB1ng l\\u1EF1c l\\u01B0\\u1EE3ng qu\\u00E2n vi\\u1EC5n chinh M\\u0129\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("1649f0c1-8557-4c2a-99a8-b4ffde8e7bbe")
                        },
                        new
                        {
                            Id = new Guid("b0a4c2fe-9e68-438b-898f-e2161826d722"),
                            Content = "{\"Question\":\"H\\u1ED9i ngh\\u1ECB l\\u1EA7n th\\u1EE9 24 Ban Ch\\u1EA5p h\\u00E0nh Trung \\u01B0\\u01A1ng \\u0110\\u1EA3ng (9/1975) \\u0111\\u00E3\",\"ListAnswer\":[{\"Value\":\"\\u0111\\u1EC1 ra nhi\\u1EC7m v\\u1EE5 th\\u1ED1ng nh\\u1EA5t \\u0111\\u1EA5t n\\u01B0\\u1EDBc v\\u1EC1 m\\u1EB7t nh\\u00E0 n\\u01B0\\u1EDBc\",\"IsAnswer\":true},{\"Value\":\"\\u0111\\u1EC1 ra \\u0111\\u01B0\\u1EDDng l\\u1ED1i \\u0111\\u1ED5i m\\u1EDBi \\u0111\\u1EA5t n\\u01B0\\u1EDBc \\u0111i l\\u00EAn ch\\u1EE7 ngh\\u0129a x\\u00E3 h\\u1ED9i\",\"IsAnswer\":false},{\"Value\":\"\\u0111\\u1EC1 ra ch\\u1EE7 tr\\u01B0\\u01A1ng gi\\u1EA3i ph\\u00F3ng mi\\u1EC1n Nam, th\\u1ED1ng nh\\u1EA5t \\u0111\\u1EA5t n\\u01B0\\u1EDBc\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("179ea3f8-4ed8-4151-b360-7dbe9f033e0c")
                        },
                        new
                        {
                            Id = new Guid("e3ddebdc-b041-4f1a-9c32-1f287ee75c08"),
                            Content = "{\"Question\":\"\\u0110\\u01B0\\u1EDDng bi\\u00EAn gi\\u1EDBi d\\u00E0i nh\\u1EA5t tr\\u00EAn \\u0111\\u1EA5t li\\u1EC1n n\\u01B0\\u1EDBc ta l\\u00E0 v\\u1EDBi\",\"ListAnswer\":[{\"Value\":\"L\\u00E0o\",\"IsAnswer\":true},{\"Value\":\"Campuchia\",\"IsAnswer\":false},{\"Value\":\"Trung Qu\\u1ED1c\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("0bca65ca-2ce4-4923-a507-43e381130c9f")
                        },
                        new
                        {
                            Id = new Guid("e6b2ed05-8c88-47ce-8cb7-ab7038ac93c5"),
                            Content = "{\"Question\":\"H\\u1EA1n ch\\u1EBF l\\u1EDBn nh\\u1EA5t c\\u1EE7a ngu\\u1ED3n lao \\u0111\\u1ED9ng n\\u01B0\\u1EDBc ta l\\u00E0\",\"ListAnswer\":[{\"Value\":\"Tr\\u00ECnh \\u0111\\u1ED9 chuy\\u00EAn m\\u00F4n, k\\u0129 thu\\u1EADt ch\\u01B0a cao\",\"IsAnswer\":true},{\"Value\":\"Th\\u1EC3 l\\u1EF1c ch\\u01B0a th\\u1EADt t\\u1ED1t\",\"IsAnswer\":false},{\"Value\":\"C\\u00F2n thi\\u1EBFu k\\u0129 n\\u0103ng l\\u00E0m vi\\u1EC7c\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("370bb392-410b-46b5-9971-2df9a53e7670")
                        },
                        new
                        {
                            Id = new Guid("17a5ca0d-c4da-4554-a714-e0b9badada82"),
                            Content = "{\"Question\":\"Trong c\\u01A1 c\\u1EA5u lao \\u0111\\u1ED9ng c\\u00F3 vi\\u1EC7c l\\u00E0m \\u1EDF n\\u01B0\\u1EDBc ta ph\\u00E2n theo tr\\u00ECnh \\u0111\\u1ED9 chuy\\u00EAn m\\u00F4n k\\u0129 thu\\u1EADt, th\\u00E0nh ph\\u1EA7n chi\\u1EBFm t\\u1EC9 tr\\u1ECDng cao nh\\u1EA5t l\\u00E0\",\"ListAnswer\":[{\"Value\":\"Ch\\u01B0a qua \\u0111\\u00E0o t\\u1EA1o\",\"IsAnswer\":true},{\"Value\":\"Cao \\u0111\\u1EB3ng, \\u0111\\u1ECBa h\\u1ECDc, tr\\u00EAn \\u0111\\u1EA1i h\\u1ECDc\",\"IsAnswer\":false},{\"Value\":\"C\\u00F3 ch\\u1EE9ng ch\\u1EC9 s\\u01A1 c\\u1EA5p\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("370bb392-410b-46b5-9971-2df9a53e7670")
                        },
                        new
                        {
                            Id = new Guid("9fd1ad12-cebb-4450-bfeb-c8618d924b75"),
                            Content = "{\"Question\":\"T\\u1EEB n\\u0103m 1990 \\u0111\\u1EBFn n\\u0103m 2005, trong ng\\u00E0nh tr\\u1ED3ng tr\\u1ECDt hai nh\\u00F3m c\\u00E2y tr\\u1ED3ng c\\u00F3 t\\u1ED1c \\u0111\\u1ED9 t\\u0103ng tr\\u01B0\\u1EDFng gi\\u00E1 tr\\u1ECB s\\u1EA3n xu\\u1EA5t cao nh\\u1EA5t l\\u00E0\",\"ListAnswer\":[{\"Value\":\"C\\u00E2y rau \\u0111\\u1EA1u, c\\u00E2y \\u0103n qu\\u1EA3\",\"IsAnswer\":false},{\"Value\":\"C\\u00E2y c\\u00F4ng nghi\\u1EC7p, c\\u00E2y rau \\u0111\\u1EADu\",\"IsAnswer\":true},{\"Value\":\"C\\u00E2y l\\u01B0\\u01A1ng th\\u1EF1c, c\\u00E2y \\u0103n qu\\u1EA3\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("0c83b2dc-372d-4687-8a51-c35b5e51c991")
                        },
                        new
                        {
                            Id = new Guid("d9cf5916-5fe2-424b-bf05-83d07b07fce1"),
                            Content = "{\"Question\":\"\\u0110\\u1EC3 t\\u0103ng s\\u1EA3n l\\u01B0\\u1EE3ng l\\u01B0\\u01A1ng th\\u1EF1c \\u1EDF n\\u01B0\\u1EDBc ta, bi\\u1EC7n ph\\u00E1p quan tr\\u1ECDng nh\\u1EA5t l\\u00E0\",\"ListAnswer\":[{\"Value\":\"M\\u1EDF r\\u1ED9ng di\\u1EC7n t\\u00EDch \\u0111\\u1EA5t tr\\u1ED3ng c\\u00E2y l\\u01B0\\u01A1ng th\\u1EF1c\",\"IsAnswer\":false},{\"Value\":\"\\u0110\\u1EA9y m\\u1EA1nh th\\u00E2m canh, t\\u0103ng n\\u0103ng su\\u1EA5t\",\"IsAnswer\":true},{\"Value\":\"K\\u00EAu g\\u1ECDi \\u0111\\u1EA7u t\\u01B0 n\\u01B0\\u1EDBc ngo\\u00E0i v\\u00E0o s\\u1EA3n xu\\u1EA5t n\\u00F4ng nghi\\u1EC7p\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("0c83b2dc-372d-4687-8a51-c35b5e51c991")
                        },
                        new
                        {
                            Id = new Guid("b57da0ee-c931-43bc-8709-1eaf851a6aec"),
                            Content = "{\"Question\":\"T\\u1EC9nh n\\u00E0o sau \\u0111\\u00E2y kh\\u00F4ng thu\\u1ED9c v\\u00F9ng T\\u00E2y Nguy\\u00EAn ?\",\"ListAnswer\":[{\"Value\":\"Kon Tum\",\"IsAnswer\":false},{\"Value\":\"\\u0110\\u1ED3ng Nai\",\"IsAnswer\":true},{\"Value\":\"Gia Lai\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("020841e0-c4da-4010-9556-e67ad0b7d816")
                        },
                        new
                        {
                            Id = new Guid("75e9556c-f0b0-4b3b-b2d1-c34f19e7491b"),
                            Content = "{\"Question\":\"T\\u00E2y Nguy\\u00EAn c\\u00F3 v\\u1ECB tr\\u00ED \\u0111\\u1EB7c bi\\u1EC7t v\\u1EC1 m\\u1EB7t qu\\u1ED1c ph\\u00F2ng v\\u00EC\",\"ListAnswer\":[{\"Value\":\"Gi\\u00E1p v\\u1EDBi v\\u00F9ng Duy\\u00EAn h\\u1EA3i Nam Trung B\\u1ED9\",\"IsAnswer\":false},{\"Value\":\"R\\u1EA5t g\\u1EA7n v\\u1EDBi TP H\\u1ED3 Ch\\u00ED Minh\",\"IsAnswer\":false},{\"Value\":\"C\\u00F3 bi\\u00EAn gi\\u1EDBi k\\u00E9o d\\u00E0i v\\u1EDBi L\\u00E0o v\\u00E0 Campuchia\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("020841e0-c4da-4010-9556-e67ad0b7d816")
                        },
                        new
                        {
                            Id = new Guid("b6477824-5d8c-4b82-a725-b765000c7830"),
                            Content = "{\"Question\":\"C\\u00E1c c\\u00E2y c\\u00F4ng nghi\\u1EC7p l\\u00E2u n\\u0103m c\\u00F3 gi\\u00E1 tr\\u1ECB kinh t\\u00EA cao c\\u1EE7a n\\u01B0\\u1EDBc ta l\\u00E0\",\"ListAnswer\":[{\"Value\":\"C\\u00E0 ph\\u00EA, cao su, m\\u00EDa\",\"IsAnswer\":false},{\"Value\":\"H\\u1ED3 ti\\u00EAu, b\\u00F4ng, ch\\u00E8\",\"IsAnswer\":false},{\"Value\":\"C\\u00E0 ph\\u00EA, \\u0111i\\u1EC1u, ch\\u00E8\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("a9902cb8-b044-4e0e-8e22-9ec0337dea6b")
                        },
                        new
                        {
                            Id = new Guid("7a03d7ad-eeef-48ae-b732-6833bcf3a044"),
                            Content = "{\"Question\":\"M\\u1ED9t trong nh\\u1EEFng \\u0111\\u1EB7c \\u0111i\\u1EC3m c\\u01A1 b\\u1EA3n c\\u1EE7a \\u0111i\\u1EC3m c\\u00F4ng nghi\\u1EC7p \\u1EDF n\\u01B0\\u1EDBc ta l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"Do Ch\\u00EDnh ph\\u1EE7 th\\u00E0nh l\\u1EADp\",\"IsAnswer\":false},{\"Value\":\"C\\u00F3 c\\u00E1c ng\\u00E0nh chuy\\u00EAn m\\u00F4n h\\u00F3a\",\"IsAnswer\":false},{\"Value\":\"Th\\u01B0\\u1EDDng h\\u00ECnh th\\u00E0nh \\u1EDF c\\u00E1c t\\u1EC9nh mi\\u1EC1n n\\u00FAi\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("adda106e-b8ba-4bfb-bdea-e2fcd916137c")
                        },
                        new
                        {
                            Id = new Guid("be7ac590-66b0-4c93-81e5-6b893c386844"),
                            Content = "{\"Question\":\"M\\u1ED9t trong nh\\u1EEFng di s\\u1EA3n thi\\u00EAn nhi\\u00EAn th\\u1EBF gi\\u1EDBi \\u1EDF n\\u01B0\\u1EDBc ta l\\u00E0\",\"ListAnswer\":[{\"Value\":\"V\\u1ECBnh H\\u1EA1 Long\",\"IsAnswer\":true},{\"Value\":\"Th\\u00E1nh \\u0111\\u1ECBa M\\u1EF9 S\\u01A1n\",\"IsAnswer\":false},{\"Value\":\"Ph\\u1ED1 c\\u1ED5 H\\u1ED9i An\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("e992f53a-b7b0-4a1e-9b81-36ed3328c6e1")
                        },
                        new
                        {
                            Id = new Guid("5c780d44-d323-48ad-9cc4-8f03b61c6678"),
                            Content = "{\"Question\":\"Ph\\u00E1p lu\\u1EADt \\u0111\\u01B0\\u1EE3c Nh\\u00E0 n\\u01B0\\u1EDBc ban h\\u00E0nh v\\u00E0 b\\u1EA3o \\u0111\\u1EA3m th\\u1EF1c hi\\u1EC7n b\\u1EB1ng\",\"ListAnswer\":[{\"Value\":\"\\u00DD ch\\u00ED c\\u1EE7a Nh\\u00E0 n\\u01B0\\u1EDBc\",\"IsAnswer\":false},{\"Value\":\"Quy\\u1EC1n l\\u1EF1c Nh\\u00E0 n\\u01B0\\u1EDBc\",\"IsAnswer\":true},{\"Value\":\"D\\u01B0 lu\\u1EADn x\\u00E3 h\\u1ED9i.\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("28bbe836-de18-4d85-9555-a47d95f85a5f")
                        },
                        new
                        {
                            Id = new Guid("7ef701de-6f5d-4059-9bfe-596bddfbeaac"),
                            Content = "{\"Question\":\"N\\u1ED9i dung n\\u00E0o kh\\u00F4ng ph\\u1EA3i l\\u00E0 h\\u00ECnh th\\u1EE9c th\\u1EF1c hi\\u1EC7n ph\\u00E1p lu\\u1EADt?\",\"ListAnswer\":[{\"Value\":\"Thi h\\u00E0nh ph\\u00E1p lu\\u1EADt.\",\"IsAnswer\":false},{\"Value\":\"Ph\\u1ED5 bi\\u1EBFn ph\\u00E1p lu\\u1EADt.\",\"IsAnswer\":true},{\"Value\":\"S\\u1EED d\\u1EE5ng ph\\u00E1p lu\\u1EADt\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("6880b25a-40ec-410e-b332-e6616982e206")
                        },
                        new
                        {
                            Id = new Guid("6d8d0d49-2fcb-438b-b0f7-16496a737a6c"),
                            Content = "{\"Question\":\"\\u0110\\u1EA3m b\\u1EA3o quy\\u1EC1n b\\u00ECnh \\u0111\\u1EB3ng c\\u1EE7a c\\u00F4ng d\\u00E2n tr\\u01B0\\u1EDBc ph\\u00E1p lu\\u1EADt l\\u00E0 tr\\u00E1ch nhi\\u1EC7m c\\u1EE7a\",\"ListAnswer\":[{\"Value\":\"Nh\\u00E0 n\\u01B0\\u1EDBc v\\u00E0 c\\u00F4ng d\\u00E2n\",\"IsAnswer\":false},{\"Value\":\"Nh\\u00E0 n\\u01B0\\u1EDBc v\\u00E0 x\\u00E3 h\\u1ED9i.\",\"IsAnswer\":true},{\"Value\":\"Nh\\u00E0 n\\u01B0\\u1EDBc v\\u00E0 c\\u00F4ng d\\u00E2n\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("898a8245-bff3-4cbb-9ac4-8692cc84d2e1")
                        },
                        new
                        {
                            Id = new Guid("9c51879f-c0d9-48ac-8b12-4815d5b44974"),
                            Content = "{\"Question\":\"N\\u1ED9i dung n\\u00E0o sau \\u0111\\u00E2y kh\\u00F4ng thu\\u1ED9c v\\u1EC1 quan h\\u1EC7 b\\u00ECnh \\u0111\\u1EB3ng trong h\\u00F4n nh\\u00E2n v\\u00E0 gia \\u0111\\u00ECnh?\",\"ListAnswer\":[{\"Value\":\"B\\u00ECnh \\u0111\\u1EB3ng gi\\u1EEFa ch\\u00FA b\\u00E1c v\\u00E0 ch\\u00E1u\",\"IsAnswer\":true},{\"Value\":\"B\\u00ECnh \\u0111\\u1EB3ng gi\\u1EEFa anh, ch\\u1ECB, em.\",\"IsAnswer\":false},{\"Value\":\"B\\u00ECnh \\u0111\\u1EB3ng gi\\u1EEFa cha m\\u1EB9 v\\u00E0 con\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("fa93b3f0-ed5f-4b84-af34-6cc4f5b3831c")
                        },
                        new
                        {
                            Id = new Guid("043ce175-c8d9-421e-a4fe-c56bec91b704"),
                            Content = "{\"Question\":\"C\\u00E1c d\\u00E2n t\\u1ED9c c\\u00F3 quy\\u1EC1n d\\u00F9ng ti\\u1EBFng n\\u00F3i, ch\\u1EEF vi\\u1EBFt c\\u1EE7a m\\u00ECnh l\\u00E0 n\\u1ED9i dung b\\u00ECnh \\u0111\\u1EB3ng v\\u1EC1\",\"ListAnswer\":[{\"Value\":\"V\\u0103n h\\u00F3a\",\"IsAnswer\":true},{\"Value\":\"X\\u00E3 h\\u1ED9i\",\"IsAnswer\":false},{\"Value\":\"Ch\\u00EDnh tr\\u1ECB\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("b80adb23-18d3-4b5e-9fc0-2fa25d47dd49")
                        },
                        new
                        {
                            Id = new Guid("b4134c55-0411-45c9-9d97-89d8ab11bfc4"),
                            Content = "{\"Question\":\"\\u0110\\u00E1nh ng\\u01B0\\u1EDDi l\\u00E0 h\\u00E0nh vi x\\u00E2m ph\\u1EA1m \\u0111\\u1EBFn quy\\u1EC1n n\\u00E0o sau \\u0111\\u00E2y c\\u1EE7a c\\u00F4ng d\\u00E2n?\",\"ListAnswer\":[{\"Value\":\"Quy\\u1EC1n \\u0111\\u01B0\\u1EE3c ph\\u00E1p lu\\u1EADt b\\u1EA3o h\\u1ED9 v\\u1EC1 t\\u00EDnh m\\u1EA1ng, s\\u1EE9c kh\\u1ECFe\",\"IsAnswer\":true},{\"Value\":\"Quy\\u1EC1n b\\u1EA5t kh\\u1EA3 x\\u00E2m ph\\u1EA1m v\\u1EC1 th\\u00E2n th\\u1EC3\",\"IsAnswer\":false},{\"Value\":\"Quy\\u1EC1n \\u0111\\u01B0\\u1EE3c s\\u1ED1ng v\\u00E0 \\u0111\\u01B0\\u1EE3c t\\u00F4n tr\\u1ECDng c\\u1EE7a c\\u00F4ng d\\u00E2n\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("c2b93d0f-1032-45c9-94bf-a53e2c5aa3be")
                        },
                        new
                        {
                            Id = new Guid("99b02765-cceb-4bc3-a28e-705d20737154"),
                            Content = "{\"Question\":\"Quy\\u1EC1n b\\u1EA7u c\\u1EED v\\u00E0 quy\\u1EC1n \\u1EE9ng c\\u1EED l\\u00E0 c\\u00E1c quy\\u1EC1n d\\u00E2n ch\\u1EE7 c\\u01A1 b\\u1EA3n c\\u1EE7a c\\u00F4ng d\\u00E2n trong l\\u0129nh v\\u1EF1c\",\"ListAnswer\":[{\"Value\":\"V\\u0103n h\\u00F3a\",\"IsAnswer\":false},{\"Value\":\"Kinh t\\u1EBF\",\"IsAnswer\":false},{\"Value\":\"Ch\\u00EDnh tr\\u1ECB\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("0faf3a0d-3e02-41f1-890c-51610de8e8cb")
                        },
                        new
                        {
                            Id = new Guid("45d36bbc-a0fb-44bb-9d53-0a957348a341"),
                            Content = "{\"Question\":\"C\\u00F4ng d\\u00E2n c\\u00F3 th\\u1EC3 h\\u1ECDc b\\u1EA5t c\\u1EE9 ng\\u00E0nh, ngh\\u1EC1 n\\u00E0o ph\\u00F9 h\\u1EE3p v\\u1EDBi\",\"ListAnswer\":[{\"Value\":\"M\\u1EE5c \\u0111\\u00EDch, y\\u00EAu c\\u1EA7u c\\u1EE7a b\\u1EA3n th\\u00E2n v\\u00E0 \\u0111i\\u1EC1u ki\\u1EC7n c\\u1EE7a gia \\u0111\\u00ECnh\",\"IsAnswer\":false},{\"Value\":\"M\\u1EE5c \\u0111\\u00EDch, s\\u1EDF th\\u00EDch, \\u0111i\\u1EC1u ki\\u1EC7n v\\u00E0 \\u0111am m\\u00EA c\\u1EE7a m\\u00ECnh\",\"IsAnswer\":false},{\"Value\":\"N\\u0103ng khi\\u1EBFu, kh\\u1EA3 n\\u0103ng, s\\u1EDF th\\u00EDch v\\u00E0 \\u0111i\\u1EC1u ki\\u1EC7n c\\u1EE7a m\\u00ECnh\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7b39b159-82aa-48a9-9dd1-6d0b435f50be")
                        },
                        new
                        {
                            Id = new Guid("72606ff9-6cb1-4466-a9c1-f2143e68f4cf"),
                            Content = "{\"Question\":\"C\\u1EE7ng c\\u1ED1 qu\\u1ED1c ph\\u00F2ng, b\\u1EA3o v\\u1EC7 an ninh qu\\u1ED1c gia l\\u00E0 nhi\\u1EC7m v\\u1EE5 c\\u1EE7a to\\u00E0n d\\u00E2n m\\u00E0 n\\u00F2ng c\\u1ED1t l\\u00E0\",\"ListAnswer\":[{\"Value\":\"C\\u00F4ng an nh\\u00E2n d\\u00E2n\",\"IsAnswer\":false},{\"Value\":\"Qu\\u00E2n \\u0111\\u1ED9i nh\\u00E2n d\\u00E2n\",\"IsAnswer\":false},{\"Value\":\"Qu\\u00E2n \\u0111\\u1ED9i nh\\u00E2n d\\u00E2n v\\u00E0 C\\u00F4ng an nh\\u00E2n d\\u00E2n\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("72c5c4ca-e8f8-4b02-97cd-4666ab7ccd44")
                        },
                        new
                        {
                            Id = new Guid("bc590d16-97bb-4ccf-8245-584675f0cd60"),
                            Content = "{\"Question\":\"C\\u01A1 s\\u1EDF ph\\u00E1p l\\u00ED \\u0111\\u1EC3 th\\u1EF1c hi\\u1EC7n c\\u00F3 hi\\u1EC7u qu\\u1EA3 qu\\u00E1 tr\\u00ECnh h\\u1EE3p t\\u00E1c l\\u00E0\",\"ListAnswer\":[{\"Value\":\"Hi\\u1EBFn ph\\u00E1p\",\"IsAnswer\":false},{\"Value\":\"Ph\\u00E1p lu\\u1EADt\",\"IsAnswer\":true},{\"Value\":\"Lu\\u1EADt\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("86f6ce80-f585-47d8-b3f0-c2f1d6cd084a")
                        },
                        new
                        {
                            Id = new Guid("65fce6a4-b1fc-4cea-a040-5fd0cf7e0958"),
                            Content = "{\"Question\":\"Cho h\\u00E0m s\\u1ED1 y = - x^3 \\u002B 3x^2 - 3x \\u002B 1, m\\u1EC7nh \\u0111\\u1EC1 n\\u00E0o sau \\u0111\\u00E2y l\\u00E0 \\u0111\\u00FAng?\",\"ListAnswer\":[{\"Value\":\"H\\u00E0m s\\u1ED1 lu\\u00F4n ngh\\u1ECBch bi\\u1EBFn.\",\"IsAnswer\":true},{\"Value\":\"H\\u00E0m s\\u1ED1 lu\\u00F4n \\u0111\\u1ED3ng bi\\u1EBFn\",\"IsAnswer\":false},{\"Value\":\"H\\u00E0m s\\u1ED1 \\u0111\\u1EA1t c\\u1EF1c \\u0111\\u1EA1i t\\u1EA1i x = 1\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("77963fa2-2bc8-4273-929b-835f0efd31f6")
                        },
                        new
                        {
                            Id = new Guid("5801238f-e7f7-4335-8e99-f92728cc6d59"),
                            Content = "{\"Question\":\"Ng\\u00E0y 27 th\\u00E1ng 3 n\\u0103m 2016 b\\u00E0 Mai g\\u1EEDi ti\\u1EBFt ki\\u1EC7m v\\u00E0o ng\\u00E2n h\\u00E0ng s\\u1ED1 ti\\u1EC1n 100 tri\\u1EC7u \\u0111\\u1ED3ng v\\u1EDBi h\\u00ECnh th\\u1EE9c l\\u00E3i k\\u00E9p v\\u00E0 l\\u00E3i su\\u1EA5t 6,8% m\\u1ED9t n\\u0103m. B\\u00E0 Mai d\\u1EF1 t\\u00EDnh \\u0111\\u1EBFn ng\\u00E0y 27 th\\u00E1ng 3 n\\u0103m 2020 th\\u00EC r\\u00FAt h\\u1EBFt ti\\u1EC1n ra \\u0111\\u1EC3 lo c\\u00F4ng chuy\\u1EC7n. H\\u1ECFi b\\u00E0 s\\u1EBD r\\u00FAt \\u0111\\u01B0\\u1EE3c bao nhi\\u00EAu ti\\u1EC1n (l\\u00E0m tr\\u00F2n k\\u1EBFt qu\\u1EA3 \\u0111\\u1EBFn h\\u00E0ng ngh\\u00ECn) ?\",\"ListAnswer\":[{\"Value\":\"38949000 \\u0111\\u1ED3ng\",\"IsAnswer\":false},{\"Value\":\"31259000 \\u0111\\u1ED3ng\",\"IsAnswer\":false},{\"Value\":\"30102000 \\u0111\\u1ED3ng\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("f9c20b6d-10ed-4d8c-bb76-f418113c4a8e")
                        },
                        new
                        {
                            Id = new Guid("208c8070-f3bd-4caa-8a72-fcfc805a2756"),
                            Content = "{\"Question\":\"D\\u00E2n s\\u1ED1 Vi\\u1EC7t Nam n\\u0103m 2015 l\\u00E0 91,71 tri\\u1EC7u ng\\u01B0\\u1EDDi. Gi\\u1EA3 s\\u1EED trong 5 n\\u0103m t\\u1EC9 l\\u1EC7 t\\u0103ng d\\u00E2n s\\u1ED1 l\\u00E0 kh\\u00F4ng \\u0111\\u1ED5i. H\\u1ECFi t\\u1EC9 l\\u1EC7 n\\u00E0y c\\u00F3 th\\u1EC3 nh\\u1EADn gi\\u00E1 tr\\u1ECB t\\u1ED1i \\u0111a l\\u00E0 bao nhi\\u00EAu \\u0111\\u1EC3 d\\u00E2n s\\u1ED1 Vi\\u1EC7t Nam n\\u0103m 2020 kh\\u00F4ng v\\u01B0\\u1EE3t qu\\u00E1 96,5 tri\\u1EC7u ng\\u01B0\\u1EDDi (l\\u00E0m tr\\u00F2n k\\u1EBFt qu\\u1EA3 \\u0111\\u1EBFn ph\\u1EA7n ch\\u1EE5c ngh\\u00ECn) ?\",\"ListAnswer\":[{\"Value\":\"1,08%\",\"IsAnswer\":false},{\"Value\":\"1,02%\",\"IsAnswer\":true},{\"Value\":\"0,91%\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("f9c20b6d-10ed-4d8c-bb76-f418113c4a8e")
                        },
                        new
                        {
                            Id = new Guid("7d2ef0c9-bbcc-4313-a9b5-45e7ea76bdd0"),
                            Content = "{\"Question\":\"Trong c\\u00E1c m\\u1EC7nh \\u0111\\u1EC1 sau m\\u1EC7nh \\u0111\\u1EC1 n\\u00E0o nh\\u1EADn gi\\u00E1 tr\\u1ECB \\u0111\\u00FAng?\",\"ListAnswer\":[{\"Value\":\"H\\u00E0m s\\u1ED1 y = 1/x c\\u00F3 nguy\\u00EAn h\\u00E0m tr\\u00EAn (-\\u221E; \\u002B\\u221E).\",\"IsAnswer\":true},{\"Value\":\"H\\u00E0m s\\u1ED1 y = |x| c\\u00F3 nguy\\u00EAn h\\u00E0m tr\\u00EAn (-\\u221E;\\u002B\\u221E).\",\"IsAnswer\":false},{\"Value\":\"1/x \\u002B C l\\u00E0 h\\u1ECD nguy\\u00EAn h\\u00E0m c\\u1EE7a ln\\u2061x tr\\u00EAn (0;\\u002B\\u221E).\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("56057547-6172-4967-a8c3-e8e9afc494ac")
                        },
                        new
                        {
                            Id = new Guid("9bf57282-2764-4111-a657-eb17760c070a"),
                            Content = "{\"Question\":\"H\\u00E0m s\\u1ED1 n\\u00E0o d\\u01B0\\u1EDBi \\u0111\\u00E2y kh\\u00F4ng ph\\u1EA3i l\\u00E0 m\\u1ED9t nguy\\u00EAn h\\u00E0m c\\u1EE7a f(x)=2x-sin\\u20612x ?\",\"ListAnswer\":[{\"Value\":\"x^2 \\u002B (1/2).cos\\u20612x\",\"IsAnswer\":false},{\"Value\":\"x^2 \\u002B cos^2 x\",\"IsAnswer\":false},{\"Value\":\"x^2 \\u002B cos\\u20612x\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("56057547-6172-4967-a8c3-e8e9afc494ac")
                        },
                        new
                        {
                            Id = new Guid("7c142395-2435-4549-a4cf-d483179cd48a"),
                            Content = "{\"Question\":\"Gi\\u00E1 tr\\u1ECB l\\u1EDBn nh\\u1EA5t c\\u1EE7a h\\u00E0m s\\u1ED1 f(x) = -x^2 \\u002B 4 l\\u00E0\",\"ListAnswer\":[{\"Value\":\"0\",\"IsAnswer\":false},{\"Value\":\"2\",\"IsAnswer\":false},{\"Value\":\"4\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("468f1e58-d93b-46db-b4df-4a173513befb")
                        },
                        new
                        {
                            Id = new Guid("32cea7fb-b070-4f98-a1af-e5d7fdb494e2"),
                            Content = "{\"Question\":\"Ti\\u0300m ca\\u0301c s\\u00F4\\u0301 th\\u01B0\\u0323c x, y sao cho (x \\u2013 2y) \\u002B (x \\u002B y \\u002B 4).i = (2x \\u002B y) \\u002B 2yi.\",\"ListAnswer\":[{\"Value\":\"x = -3, y = 1\",\"IsAnswer\":true},{\"Value\":\"x = -3, y = -1\",\"IsAnswer\":false},{\"Value\":\"x = 3, y = 1 \",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("74d64b16-20e1-4f3c-9f54-facf73dd9740")
                        },
                        new
                        {
                            Id = new Guid("30746883-03fd-47aa-99eb-d9c0c3c39f93"),
                            Content = "{\"Question\":\"Ph\\u00E2\\u0300n th\\u01B0\\u0323c cu\\u0309a s\\u00F4\\u0301 ph\\u01B0\\u0301c z = -i la\\u0300\",\"ListAnswer\":[{\"Value\":\"1\",\"IsAnswer\":false},{\"Value\":\"0\",\"IsAnswer\":true},{\"Value\":\"-i\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("74d64b16-20e1-4f3c-9f54-facf73dd9740")
                        },
                        new
                        {
                            Id = new Guid("37c803d8-be52-48c9-af20-aa586878cd6f"),
                            Content = "{\"Question\":\"V\\u1EDBi gi\\u00E1 tr\\u1ECB n\\u00E0o c\\u1EE7a m, h\\u00E0m s\\u1ED1 y = (x - m)^3 - 3x \\u0111\\u1EA1t c\\u1EF1c ti\\u1EC3u t\\u1EA1i \\u0111i\\u1EC3m c\\u00F3 ho\\u00E0nh \\u0111\\u1ED9 x = 0?\",\"ListAnswer\":[{\"Value\":\"-1\",\"IsAnswer\":true},{\"Value\":\"1\",\"IsAnswer\":false},{\"Value\":\"Kh\\u00F4ng t\\u1ED3n t\\u1EA1i\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7612387b-bd34-4ff2-bc52-535d32fe45ec")
                        },
                        new
                        {
                            Id = new Guid("479690de-b69a-4652-b0db-49545b76a26e"),
                            Content = "{\"Question\":\"M\\u1ED9t c\\u00F4ng ti qu\\u1EA3n l\\u00ED chu\\u1EA9n b\\u1ECB x\\u00E2y d\\u1EF1ng m\\u1ED9t khu chung c\\u01B0 m\\u1EDBi. H\\u1ECD t\\u00EDnh to\\u00E1n n\\u1EBFu t\\u00F2a nh\\u00E0 c\\u00F3 x c\\u0103n h\\u1ED9 th\\u00EC chi ph\\u00ED b\\u1EA3o tr\\u00EC c\\u1EE7a t\\u00F2a nh\\u00E0 l\\u00E0: C(x) = 4000 - 14x \\u002B 0,04x^2. Khu \\u0111\\u1EA5t c\\u1EE7a h\\u1ECD c\\u00F3 th\\u1EC3 x\\u00E2y \\u0111\\u01B0\\u1EE3c t\\u00F2a nh\\u00E0 ch\\u1EE9a t\\u1ED1i \\u0111a 300 c\\u0103n h\\u1ED9. H\\u1ECFi h\\u1ECD n\\u00EAn x\\u00E2y d\\u1EF1ng t\\u00F2a nh\\u00E0 c\\u00F3 bao nhi\\u00EAu c\\u0103n h\\u1ED9 \\u0111\\u1EC3 chi ph\\u00ED b\\u1EA3o tr\\u00EC c\\u1EE7a t\\u00F2a nh\\u00E0 l\\u00E0 nh\\u1ECF nh\\u1EA5t?\",\"ListAnswer\":[{\"Value\":\"150\",\"IsAnswer\":false},{\"Value\":\"175\",\"IsAnswer\":true},{\"Value\":\"225\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("e83b8918-df70-4d49-8ddc-adcdac56a057")
                        },
                        new
                        {
                            Id = new Guid("22dd9c89-34df-47bf-9c84-fd4f64ba32f6"),
                            Content = "{\"Question\":\"Quan ni\\u1EC7m v\\u1EC1 \\u0111\\u1ED9c gi\\u1EA3 c\\u1EE7a v\\u0103n h\\u1ECDc Vi\\u1EC7t Nam sau n\\u0103m 1975 c\\u00F3 g\\u00EC m\\u1EDBi?\",\"ListAnswer\":[{\"Value\":\"\\u0110\\u1ED9c gi\\u1EA3 l\\u00E0 nh\\u1EEFng \\u0111\\u1ED1i t\\u01B0\\u1EE3ng \\u0111\\u1EC3 tuy\\u00EAn truy\\u1EC1n, gi\\u00E1c ng\\u1ED9\",\"IsAnswer\":false},{\"Value\":\"\\u0110\\u1ED9c gi\\u1EA3 l\\u00E0 ng\\u01B0\\u1EDDi mua h\\u00E0ng, nh\\u00E0 v\\u0103n l\\u00E0 ng\\u01B0\\u1EDDi b\\u00E1n h\\u00E0ng\",\"IsAnswer\":false},{\"Value\":\"\\u0110\\u1ED9c gi\\u1EA3 l\\u00E0 nh\\u1EEFng ng\\u01B0\\u1EDDi b\\u1EA1n \\u0111\\u1EC3 giao l\\u01B0u, d\\u1ED1i tho\\u1EA1i m\\u1ED9t c\\u00E1ch b\\u00ECnh \\u0111\\u1EB3ng\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("12d2f288-dedb-414d-a7ca-3a7e4d527495"),
                            Content = "{\"Question\":\"Giai \\u0111o\\u1EA1n 1945-1975, v\\u0103n h\\u1ECDc Vi\\u1EC7t Nam \\u0111\\u00E3 t\\u00ECm \\u0111\\u1EBFn nh\\u1EEFng h\\u00ECnh th\\u1EE9c ngh\\u1EC7 thu\\u1EADt n\\u00E0o \\u0111\\u1EC3 ph\\u00F9 h\\u1EE3p v\\u1EDBi nhu c\\u1EA7u th\\u1EA9m m\\u0129 c\\u1EE7a \\u0111\\u1EA1i ch\\u00FAng\",\"ListAnswer\":[{\"Value\":\"M\\u1EDBi m\\u1EBB \\u0111\\u1ED1i v\\u1EDBi nh\\u00E2n d\\u00E2n, \\u0111\\u01B0\\u1EE3c th\\u1EC3 hi\\u1EC7n b\\u1EB1ng m\\u1ED9t ng\\u00F4n ng\\u1EEF ngh\\u1EC7 thu\\u1EADt tinh t\\u1EBF, trau chu\\u1ED1t.\",\"IsAnswer\":false},{\"Value\":\"Quen thu\\u1ED9c \\u0111\\u1ED1i v\\u1EDBi nh\\u00E2n d\\u00E2n, \\u0111\\u01B0\\u1EE3c th\\u1EC3 hi\\u1EC7n b\\u1EB1ng m\\u1ED9t ng\\u00F4n ng\\u1EEF b\\u00ECnh d\\u1ECB, trong s\\u00E1ng, d\\u1EC5 hi\\u1EC3u\",\"IsAnswer\":true},{\"Value\":\"D\\u1EC5 d\\u00E3i \\u0111\\u1ED1i v\\u1EDBi nh\\u00E2n d\\u00E2n, \\u0111\\u01B0\\u1EE3c th\\u1EC3 hi\\u1EC7n b\\u1EB1ng ng\\u00F4n ng\\u1EEF b\\u00ECnh d\\u00E2n, su\\u1ED3ng s\\u00E3\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("bc0e149e-20a5-4216-ba3f-245bb9e3e929"),
                            Content = "{\"Question\":\"\\u00DD n\\u00E0o sau \\u0111\\u00E2y kh\\u00F4ng \\u0111\\u00FAng khi n\\u00F3i v\\u1EC1 \\u0111\\u1EB7c \\u0111i\\u1EC3m khuynh h\\u01B0\\u1EDBng l\\u00E3ng m\\u1EA1n \\u0111\\u01B0\\u1EE3c th\\u1EC3 hi\\u1EC7n nh\\u01B0 th\\u1EBF n\\u00E0o trong v\\u0103n h\\u1ECDc giai \\u0111o\\u1EA1n 1945-1975\",\"ListAnswer\":[{\"Value\":\"L\\u00E0 khuynh h\\u01B0\\u1EDBng tr\\u00E0n \\u0111\\u1EA7y m\\u01A1 \\u01B0\\u1EDBc, h\\u01B0\\u1EDBng t\\u1EDBi t\\u01B0\\u01A1ng lai\",\"IsAnswer\":false},{\"Value\":\"Kh\\u1EB3ng \\u0111\\u1ECBnh l\\u00ED t\\u01B0\\u1EDFng c\\u1EE7a cu\\u1ED9c s\\u1ED1ng m\\u1EDBi, v\\u1EBB \\u0111\\u1EB9p c\\u1EE7a con ng\\u01B0\\u1EDDi m\\u1EDBi\",\"IsAnswer\":false},{\"Value\":\"C\\u00E1c t\\u00E1c ph\\u1EA9m \\u0111\\u1EC1u c\\u00F3 k\\u1EBFt th\\u00FAc c\\u00F3 h\\u1EADu, \\u0111\\u01B0\\u1EE3c h\\u01B0\\u1EDFng cu\\u1ED9c s\\u1ED1ng h\\u1EA1nh ph\\u00FAc, no \\u1EA5m\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("1bd17c9e-5fd5-4f20-8af6-8b25ccffddcd"),
                            Content = "{\"Question\":\"V\\u0103n h\\u1ECDc Vi\\u1EC7t Nam giai \\u0111o\\u1EA1n 1945-1975 kh\\u00F4ng m\\u1EAFc ph\\u1EA3i h\\u1EA1n ch\\u1EBF n\\u00E0o?\",\"ListAnswer\":[{\"Value\":\"M\\u1ED9t s\\u1ED1 c\\u00E2y b\\u00FAt ch\\u1EA1y theo th\\u1ECB hi\\u1EBFu th\\u1EA5p k\\u00E9m c\\u1EE7a 1 b\\u1ED9 ph\\u1EADn c\\u00F4ng ch\\u00FAng, bi\\u1EBFn s\\u00E1ng t\\u00E1c v\\u0103n h\\u1ECDc m\\u1ECDt th\\u1EE9 h\\u00E0ng h\\u00F3a \\u0111\\u1EC3 c\\u00E2u kh\\u00E1ch.\",\"IsAnswer\":true},{\"Value\":\"Y\\u00EAu c\\u1EA7u v\\u1EC1 ph\\u1EA9m ch\\u1EA5t ngh\\u1EC7 thu\\u1EADt c\\u1EE7a t\\u00E1c ph\\u1EA9m nhi\\u1EC1u khi b\\u1ECB h\\u1EA1 th\\u1EA5p\",\"IsAnswer\":false},{\"Value\":\"C\\u00E1 t\\u00EDnh, phong c\\u00E1ch ri\\u00EAng c\\u1EE7a nh\\u00E0 v\\u0103n ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\u00E1t huy m\\u1EA1nh m\\u1EBD\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("9edf87ce-ec37-4e8c-ba8c-79c800ad5d4e"),
                            Content = "{\"Question\":\"T\\u1EEB n\\u0103m 1929 \\u0111\\u1EBFn n\\u0103m 1936, Ph\\u1EA1m V\\u0103n \\u0110\\u1ED3ng b\\u1ECB th\\u1EF1c d\\u00E2n Ph\\u00E1p b\\u1EAFt, k\\u1EBFt \\u00E1n t\\u00F9 v\\u00E0 b\\u1ECB \\u0111i \\u0111\\u00E0y \\u1EDF:\",\"ListAnswer\":[{\"Value\":\"Qu\\u1EA3ng Ng\\u00E3i\",\"IsAnswer\":false},{\"Value\":\"C\\u00F4n \\u0110\\u1EA3o\",\"IsAnswer\":true},{\"Value\":\"Tam \\u0110\\u1EA3o\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("acd7e283-1edb-40f9-bd36-2228d69a1819"),
                            Content = "{\"Question\":\"Truy\\u1EC7n th\\u01A1 n\\u00E0o sau \\u0111\\u00E2y kh\\u00F4ng ph\\u1EA3i c\\u1EE7a Nguy\\u1EC5n \\u0110\\u00ECnh Chi\\u1EC3u?\",\"ListAnswer\":[{\"Value\":\"D\\u01B0\\u01A1ng T\\u1EEB - H\\u00E0 M\\u1EADu\",\"IsAnswer\":false},{\"Value\":\"S\\u01A1 k\\u00EDnh t\\u00E2n trang\",\"IsAnswer\":true},{\"Value\":\"Ng\\u01B0 Ti\\u1EC1u Y thu\\u1EADt v\\u1EA5n \\u0111\\u00E1p\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("a1c0ea7c-58b7-4083-b9cc-e67423275a58"),
                            Content = "{\"Question\":\"Gi\\u00E1 tr\\u1ECB n\\u1ED9i dung c\\u1EE7a t\\u00E1c ph\\u1EA9m : Nguy\\u1EC5n \\u0110\\u00ECnh Chi\\u1EC3u, ng\\u00F4i sao s\\u00E1ng trong v\\u0103n ngh\\u1EC7 c\\u1EE7a d\\u00E2n t\\u1ED9c l\\u00E0:\",\"ListAnswer\":[{\"Value\":\"T\\u00E1c gi\\u1EA3 h\\u1EBFt l\\u1EDDi ca ng\\u1EE3i Nguy\\u1EC5n \\u0110\\u00ECnh Chi\\u1EC3u, m\\u1ED9t ng\\u01B0\\u1EDDi tr\\u1ECDn \\u0111\\u1EDDi d\\u00F9ng c\\u00E2y b\\u00FAt l\\u00E0m v\\u0169 kh\\u00ED chi\\u1EBFn \\u0111\\u1EA5u cho d\\u00E2n, cho n\\u01B0\\u1EDBc, m\\u1ED9t ng\\u00F4i sao s\\u00E1ng trong n\\u1EC1n v\\u0103n ngh\\u1EC7 c\\u1EE7a d\\u00E2n t\\u1ED9c Vi\\u1EC7t Nam.\",\"IsAnswer\":false},{\"Value\":\"L\\u00E0m s\\u00E1ng t\\u1ECF m\\u1ED1i li\\u00EAn h\\u1EC7 kh\\u0103ng kh\\u00EDt gi\\u1EEFa th\\u01A1 v\\u0103n c\\u1EE7a Nguy\\u1EC5n \\u0110\\u00ECnh Chi\\u1EC3u v\\u1EDBi ho\\u00E0n c\\u1EA3nh c\\u1EE7a T\\u1ED5 qu\\u1ED1c l\\u00FAc b\\u1EA5y gi\\u1EDD v\\u00E0 v\\u1EDBi th\\u1EDDi \\u0111\\u1EA1i hi\\u1EC7n nay.\",\"IsAnswer\":false},{\"Value\":\"C\\u1EA3 hai \\u0111\\u00E1p \\u00E1n tr\\u00EAn \\u0111\\u1EC1u \\u0111\\u00FAng\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("4cfbb40a-4b1d-472f-b6ed-f621ff2e9f58"),
                            Content = "{\"Question\":\"T\\u00E1c ph\\u1EA9m \\u0111\\u01B0\\u1EE3c chia th\\u00E0nh m\\u1EA5y ph\\u1EA7n?\",\"ListAnswer\":[{\"Value\":\"Hai ph\\u1EA7n\",\"IsAnswer\":false},{\"Value\":\"Ba ph\\u1EA7n\",\"IsAnswer\":true},{\"Value\":\"N\\u0103m ph\\u1EA7n\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("f4e17213-cfe6-4fd4-8f04-6ad9127c8ef7"),
                            Content = "{\"Question\":\"T\\u00E1c ph\\u1EA9m \\u0111\\u01B0\\u1EE3c vi\\u1EBFt theo th\\u1EC3 lo\\u1EA1i n\\u00E0o?\",\"ListAnswer\":[{\"Value\":\"V\\u0103n ngh\\u1ECB lu\\u1EADn\",\"IsAnswer\":true},{\"Value\":\"V\\u0103n xu\\u00F4i\",\"IsAnswer\":false},{\"Value\":\"V\\u0103n ch\\u00EDnh lu\\u1EADn\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("b6cb7448-a377-42c8-ae85-75c3f65fea88"),
                            Content = "{\"Question\":\"\\u0110\\u1EB7c \\u0111i\\u1EC3m n\\u00E0o sau \\u0111\\u00E2y kh\\u00F4ng ph\\u1EA3i l\\u00E0 \\u0111\\u1EB7c tr\\u01B0ng c\\u1EE7a phong c\\u00E1ch ng\\u00F4n ng\\u1EEF khoa h\\u1ECDc?\",\"ListAnswer\":[{\"Value\":\"T\\u00EDnh kh\\u00E1i qu\\u00E1t tr\\u1EEBu t\\u01B0\\u1EE3ng\",\"IsAnswer\":false},{\"Value\":\"T\\u00EDnh kh\\u00E1ch quan, phi c\\u00E1 th\\u1EC3\",\"IsAnswer\":false},{\"Value\":\"T\\u00EDnh truy\\u1EC1n c\\u1EA3m thuy\\u1EBFt ph\\u1EE5c\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7c506348-0444-4c91-ad50-15b952135294")
                        },
                        new
                        {
                            Id = new Guid("cc760427-bedc-4728-bf27-96bf043db449"),
                            Content = "{\"Question\":\"You are old enough to take \\u2026\\u2026 for what you have done.\",\"ListAnswer\":[{\"Value\":\"responsibility\",\"IsAnswer\":true},{\"Value\":\"responsible\",\"IsAnswer\":false},{\"Value\":\"responsibly \",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("33fcdca5-2b11-49cf-8824-f91d45c86dd2")
                        },
                        new
                        {
                            Id = new Guid("760f9cce-e1bf-415f-9432-71cc69c9af85"),
                            Content = "{\"Question\":\"The USA is a country of high youth unemployment.\",\"ListAnswer\":[{\"Value\":\"We find high youth unemployment a problem in the USA\",\"IsAnswer\":false},{\"Value\":\"High youth unemployment is found in the USA\",\"IsAnswer\":true},{\"Value\":\"The USA is a country of young people\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("4f830591-4a73-4976-9a63-dcebb53ca4c2")
                        },
                        new
                        {
                            Id = new Guid("cca4025d-9a6e-4f2a-8759-2dfac58c6a6a"),
                            Content = "{\"Question\":\"A water polo team \\u2026\\u2026 seven players, six swimmers and a goalie.\",\"ListAnswer\":[{\"Value\":\"composes\",\"IsAnswer\":false},{\"Value\":\"consists of\",\"IsAnswer\":true},{\"Value\":\"includes of \",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("9a4f72df-ee78-4455-8b67-76b3a26ce507")
                        },
                        new
                        {
                            Id = new Guid("3e62a92e-e050-42b4-8d13-4194ecac2f42"),
                            Content = "{\"Question\":\"The Spirit of \\u2026\\u2026 22nd SEA GAMES was solidarity, co-operation for peace and development.\",\"ListAnswer\":[{\"Value\":\"the\",\"IsAnswer\":true},{\"Value\":\"a\",\"IsAnswer\":false},{\"Value\":\"an\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("838f30bd-d9cf-4ea6-8825-fe729c55e5af")
                        },
                        new
                        {
                            Id = new Guid("8d199b0b-e54f-41d1-b266-32da75652d57"),
                            Content = "{\"Question\":\"One advantage of living in a/an \\u2026\\u2026 is to strengthen relationships between young children and adults.\",\"ListAnswer\":[{\"Value\":\"nuclear family\",\"IsAnswer\":false},{\"Value\":\"nuclear house\",\"IsAnswer\":false},{\"Value\":\"extended family\",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("2addcd1a-4f32-42dc-bf9f-637fd7769c3c")
                        },
                        new
                        {
                            Id = new Guid("a28c8be3-ab1e-4fc5-a641-0360d3f9f6e0"),
                            Content = "{\"Question\":\"He is one of the most \\u2026\\u2026\\u2026 bosses I have ever worked with. He behaves rudely to not only me but also others in the staff.\",\"ListAnswer\":[{\"Value\":\"thoughtful\",\"IsAnswer\":false},{\"Value\":\"impolite\",\"IsAnswer\":true},{\"Value\":\"communicative\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("64722757-eb15-4891-abbc-bd870caae9f1")
                        },
                        new
                        {
                            Id = new Guid("bd235389-9531-44ac-b2ae-707c820c939b"),
                            Content = "{\"Question\":\"My teacher always gives me advice \\u2026\\u2026 suitable career in the future.\",\"ListAnswer\":[{\"Value\":\"to choose\",\"IsAnswer\":true},{\"Value\":\"choosing\",\"IsAnswer\":false},{\"Value\":\"not to choose\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("451fa872-1960-4c03-a3df-374dbfc81c83")
                        },
                        new
                        {
                            Id = new Guid("c96a6886-0210-4059-85c0-43b32ce23730"),
                            Content = "{\"Question\":\"A good leader should not be conservative, but rather \\u2026\\u2026 to new ideas.\",\"ListAnswer\":[{\"Value\":\"receptive\",\"IsAnswer\":true},{\"Value\":\"permissive\",\"IsAnswer\":false},{\"Value\":\"applicable\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("55469d88-1e76-4678-ad62-e3d233602dfa")
                        },
                        new
                        {
                            Id = new Guid("956ad23f-9c28-42d7-aeea-764dca133c20"),
                            Content = "{\"Question\":\"\\u2026\\u2026 a desert requires a lot of careful preparation and survival skills.\",\"ListAnswer\":[{\"Value\":\"Visiting\",\"IsAnswer\":false},{\"Value\":\"Explore\",\"IsAnswer\":false},{\"Value\":\"Exploring \",\"IsAnswer\":true}]}",
                            IsDeleted = false,
                            TopicId = new Guid("7294fa9f-78c5-49f3-a9fa-c99feb6d6a5c")
                        },
                        new
                        {
                            Id = new Guid("2688e556-145c-4f09-8dbc-8e475b30f79e"),
                            Content = "{\"Question\":\"Reading \\u2026\\u2026 an integral role in enhancing knowledge and relaxing.\",\"ListAnswer\":[{\"Value\":\"holds \",\"IsAnswer\":false},{\"Value\":\"plays\",\"IsAnswer\":true},{\"Value\":\"takes\",\"IsAnswer\":false}]}",
                            IsDeleted = false,
                            TopicId = new Guid("470c4063-38b5-437c-9820-2a29a470c708")
                        });
                });

            modelBuilder.Entity("Domain.Models.RecordDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MBTI_ExamQuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("UserChoice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserRecordId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MBTI_ExamQuestionId");

                    b.HasIndex("UserRecordId");

                    b.ToTable("RecordDetails");
                });

            modelBuilder.Entity("Domain.Models.StudentPurchased", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ExaminationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationId");

                    b.HasIndex("UserId");

                    b.ToTable("StudentPurchased");
                });

            modelBuilder.Entity("Domain.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625"),
                            IsDeleted = false,
                            Name = "Toán"
                        },
                        new
                        {
                            Id = new Guid("c0456f7f-1963-4598-8b7c-8f44bd7e2dbe"),
                            IsDeleted = false,
                            Name = "Ngữ Văn"
                        },
                        new
                        {
                            Id = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c"),
                            IsDeleted = false,
                            Name = "Tiếng Anh"
                        },
                        new
                        {
                            Id = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de"),
                            IsDeleted = false,
                            Name = "Lịch Sử"
                        },
                        new
                        {
                            Id = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7"),
                            IsDeleted = false,
                            Name = "Địa Lý"
                        },
                        new
                        {
                            Id = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502"),
                            IsDeleted = false,
                            Name = "Sinh học"
                        },
                        new
                        {
                            Id = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8"),
                            IsDeleted = false,
                            Name = "Hóa học"
                        },
                        new
                        {
                            Id = new Guid("00940497-7f82-493d-aac3-a56e9e92f390"),
                            IsDeleted = false,
                            Name = "Giáo dục công dân"
                        },
                        new
                        {
                            Id = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4"),
                            IsDeleted = false,
                            Name = "Vật Lý"
                        });
                });

            modelBuilder.Entity("Domain.Models.SubjectGroup", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("SubjectId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("SubjectGroup");
                });

            modelBuilder.Entity("Domain.Models.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77963fa2-2bc8-4273-929b-835f0efd31f6"),
                            Description = "Sự đồng biến, nghịch biến của hàm số, cực trị của hàm số, tìm giá trị lớn nhất và giá trị nhỏ nhất của hàm số, đường tiệm cận là gì và cuối cùng là khảo sát sự biến thiên và vẽ đồ thị của hàm số.",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Ứng dụng đạo hàm để khảo sát và vẽ đồ thị hàm số ",
                            SubjectId = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625")
                        },
                        new
                        {
                            Id = new Guid("f9c20b6d-10ed-4d8c-bb76-f418113c4a8e"),
                            Description = "Lũy thừa, hàm số lũy thừa, Lôgarit tiếp theo đó là hàm số mũ hàm số lôgarit, Phương trình mũ và phương trình lôgarit, cuối cùng là bất phương trình mũ và bất phương trình lôgarit",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Hàm số lũy thừa, hàm số mũ và hàm số lôgarit",
                            SubjectId = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625")
                        },
                        new
                        {
                            Id = new Guid("56057547-6172-4967-a8c3-e8e9afc494ac"),
                            Description = "Làm quen với nguyên hàm, tích phân và ứng dụng của chúng trong tính toán",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Nguyên hàm. Tích phân và ứng dụng",
                            SubjectId = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625")
                        },
                        new
                        {
                            Id = new Guid("74d64b16-20e1-4f3c-9f54-facf73dd9740"),
                            Description = "Làm Quen Với Mọi Khái Niệm Về Số Phức Phức Là Gì? Cộng Trừ Và Nhân Chia Số Phức Là Gì? Phép Chia Và Các Phép Toán Về Số Phức Và Tiếp Theo Đó Là Phương Trình Bậc Hai Với Hệ Số Thực",
                            Index = 4,
                            IsDeleted = false,
                            Name = "Số phức",
                            SubjectId = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625")
                        },
                        new
                        {
                            Id = new Guid("7612387b-bd34-4ff2-bc52-535d32fe45ec"),
                            Description = "Khái niệm về khối đa diện, khối đa diện và khối đa diện đều là gì?",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Khối đa diện",
                            SubjectId = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625")
                        },
                        new
                        {
                            Id = new Guid("468f1e58-d93b-46db-b4df-4a173513befb"),
                            Description = "Tìm hiểu thế nào về khái niệm mặt tròn xoay và tìm hiểu khái niệm mặt cầu là gì?",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Mặt Nón, Mặt Trụ, Mặt Cầu",
                            SubjectId = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625")
                        },
                        new
                        {
                            Id = new Guid("e83b8918-df70-4d49-8ddc-adcdac56a057"),
                            Description = "Tìm hiểu như thế nào là tọa độ trong không gian, sau đó sẽ được làm quen đến phương trình mặt phẳng và cuối cùng là sự kết hợp để tìm phương trình đường thẳng trong không gian.",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Phương pháp toạ độ trong không gian",
                            SubjectId = new Guid("6a8c8d5f-2a54-42ee-8a7f-0961273cd625")
                        },
                        new
                        {
                            Id = new Guid("d1e7ee41-195a-462f-906a-c8b867371e4d"),
                            Description = " Dao động điều hòa, khái niệm về con lắc lò xo và con lắc đơn, dao động tắt dần và dao động cưỡng bức, sau cùng tổng hợp hai dao động điều hòa cùng phương, cùng tần số và Phương pháp Fre-Nen",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Dao động cơ",
                            SubjectId = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4")
                        },
                        new
                        {
                            Id = new Guid("17ba34ec-7b7c-47ce-9491-6a28d8f0f497"),
                            Description = "Tìm hiểu về các loại sóng trong cuộc sống chúng ta. Tìm hiểu về các khái niệm của sóng như: sóng cơ và sự truyền sóng cơ, giao thoa sóng là gì? khái niệm về sóng dừng và cuối cùng là đặc trưng vật lý của âm và đặc trưng sinh lý của âm",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Sóng cơ và sóng âm",
                            SubjectId = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4")
                        },
                        new
                        {
                            Id = new Guid("79d76295-efe3-4f84-a831-5ca9913b7ab6"),
                            Description = "Đại cương về dòng điện xoay chiều, cùng với đó là các mạch điện xoay chiều, tìm hiểu về các mạch R, L, C mắc nối tiếp, tính công suất điện tiêu thụ của mạch điện xoay chiều và Hệ số công suất tìm hiểu về truyền tải điện năng và máy biến áp, từ đó nghiên cứu máy phát điện xoay chiều, sau cùng là động cơ không đồng bộ ba pha và thực hành khảo sát đoạn mạch xoay chiều RLC.",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Dòng điện xoay chiều",
                            SubjectId = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4")
                        },
                        new
                        {
                            Id = new Guid("6fc99327-e8b8-42ad-b3f0-641c2f81027d"),
                            Description = "Mạch dao động, điện từ trường, sóng điện từ và cuối cùng là nguyên tắc thông tin liên lạc bằng sóng vô tuyến. Được tìm hiểu về các khái niệm cũng như các ứng dụng trong thực tế",
                            Index = 4,
                            IsDeleted = false,
                            Name = "Dao động và Sóng điện từ",
                            SubjectId = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4")
                        },
                        new
                        {
                            Id = new Guid("5a1a8691-497c-4ac4-b764-64b0984a7c49"),
                            Description = "làm quen với các loại ánh sáng như tán sắc ánh sáng, giao thoa ánh sáng sau đó là tìm hiểu về các loại quang phổ, bên cạnh đó là tìm hiểu về tia hồng ngoại và tia tử ngoại và tia X",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Sóng ánh sáng",
                            SubjectId = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4")
                        },
                        new
                        {
                            Id = new Guid("29322677-3508-4e9f-956d-38219393afe8"),
                            Description = " hiện tượng quang điện và thuyết lượng tử ánh sáng, hiện tượng quang điện trong, hiện tượng quang – phát quang và nguyên tử Bo và sơ lược Laze",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Lượng tử ánh sáng",
                            SubjectId = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4")
                        },
                        new
                        {
                            Id = new Guid("ba088c8b-890e-4743-9a45-d49066c780a6"),
                            Description = "5 bài học liên quan đến hạt nhân nguyên tử như: tính chất và cấu tạo hạt nhân, năng lượng liên kết của hạt nhân và phản ứng hạt nhân, tìm hiểu phóng xạ, tiếp theo đó là tìm hiểu phản ứng phân hạch và phản ứng nhiệt hạch",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Hạt nhân nguyên tử – Hiện tượng phóng xạ",
                            SubjectId = new Guid("ab091cc2-6f9a-4023-8003-2ca82076f5a4")
                        },
                        new
                        {
                            Id = new Guid("111d9344-66dd-4653-8cff-96bb9bc3863a"),
                            Description = "Este, lipit, khái niệm về Xà phòng và Chất giặt rửa tổng hợp sau cùng là luyện tập Este và Chất béo",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Este – Lipit",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("9207680f-4c5e-4725-aec7-85d64102b0e9"),
                            Description = "Glucozơm Saccarozơ, Tinh bột và Xenlulozơ, Luyện tập Cấu tạo và tính chất của Cacbohiđrat",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Cacbohiđrat",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("dd4d8c18-5a33-4a61-a34b-e2cd10226ec8"),
                            Description = " Amin, sau đó đến Amino axit sau cùng là peptit và protein",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Amin, Amino Axit Và Protein",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("cb01694c-ebac-478c-bbef-6845d723e501"),
                            Description = "Đại cương về polime, vật liệu polime, luyện tập Polime và vật liệu polime, thực hành Một số tính chất của protein và vật liệu polime",
                            Index = 4,
                            IsDeleted = false,
                            Name = "Polime Và Vật Liệu Polime",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("db827133-7fbb-4b8e-bcdd-7f769e849505"),
                            Description = "Vị trí của kim loại trong bảng tuần hòa, sau đó là biết được tính chất của kim loại và dãy điện hóa, hợp kim, sự ăn mòn kim loại, điều chế kim loại, luyện tập tính chất của kim loại, luyện tập Điều chế kim loại và sự ăn mòn kim loại, thực hành Tính chất, điều chế kim loại, sự ăn mòn kim loại",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Đại Cương Về Kim Loại",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("111aa302-4022-42e7-bf44-5546d2212240"),
                            Description = "Kim loại kiềm và hợp chất quan trọng kim loại kiềm, kim loại kiềm thổ và hợp chất quan trọng của chúng, nhôm và hợp chất của nhôm, luyện tập tính chất của kim loại kiềm, luyện tập tính chất của nhôm sau cùng là thực hành tính chất của natri, magie, nhôm và hợp chất của chúng",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Kim Loại Kiềm, Kim Loại Kiềm Thổ, Nhôm",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("20dd53da-8d28-4f31-b2d6-7e722fbf1aea"),
                            Description = "Sắt, hợp chất của sắt, hợp kim của sắt, Crom và hợp chất của crom, đồng và hợp chất của đồng, Sơ lược về niken, kẽm, chì, thiếc, luyện tập Tính chất hóa học của sắt và hợp chất của sắt, luyện tập Tính chất hóa học của crom, đồng và hợp chất của chúng, thực hành Tính chất hóa học của sắt, đồng và hợp chất của sắt, crom",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Sắt Và Một Số Kim Loại Quan Trọng",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("4bf74338-43a1-495c-ba6a-8d4b4aa431ab"),
                            Description = "Nhận biết một số ion trong dung dịch, cách nhận biết một số chất khí, và sau cùng là luyện tập để nhận biết một số chất vô cơ",
                            Index = 8,
                            IsDeleted = false,
                            Name = "Phân Biệt Một Số Chất Vô Cơ",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("dd4944ee-e8c4-47dc-b864-afe597d047b3"),
                            Description = "Hóa học và vấn đề phát triển kinh tế, hóa học và vấn đề xã hội và sau cùng là hóa học và vấn đề môi trường",
                            Index = 9,
                            IsDeleted = false,
                            Name = "Hóa Học Và Vấn Đề Phát Triển Kinh Tế, Xã Hội, Môi Trường",
                            SubjectId = new Guid("0141a511-2028-4a5a-b81d-4a61d98ee0a8")
                        },
                        new
                        {
                            Id = new Guid("533446a5-2f4c-4618-a441-f02bad78e322"),
                            Description = "Được thấy bản chất của hiện tượng di truyền và biến dị là sự vận động của các cấu trúc vật chất trong tế bào",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Cơ chế di truyền và biến dị",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("f0a45c6c-be92-4c73-829e-907591c7694a"),
                            Description = "sự di truyền của các tính trạng qua các thế hệ của loài diễn ra theo những xu thế tất yếu mà người ta đã phát hiện được bằng phương pháp thực nghiệm",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Tính quy luật của hiện tượng di truyền",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("0546ebd3-376e-4246-bdb3-9ae20e6f253c"),
                            Description = "thấy các đặc trưng di truyền của một quần thể như tần số alen, thành phần kiểu gen có xu hướng biến đổi ra sao qua các thế hệ, đồng thời cũng giới thiệu quy luật Hacđi – Vanbec về sự cân bằng của tần số alen và thành phần kiểu gen trong quần thể ngẫu phối.",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Di truyền học quần thể",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("45b651e7-9e76-42d0-b996-aeb00ec00d3f"),
                            Description = "Nội dung về chọn giống vật nuôi và cây trồng dựa trên nguồn biến dị tổ hợp, Tạo giống bằng phương pháp gây đột biến và công nghệ tế bào, Tạo giống mới nhờ công nghệ gen",
                            Index = 4,
                            IsDeleted = false,
                            Name = "Ứng dụng di truyền học",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("4881c89c-4995-4833-a00c-90bac688b8c4"),
                            Description = "Giới thiệu các đặc điểm và các phương pháp nghiên cứu di truyền ở người, đồng thời vạch ra nguyên nhân và cơ chế gây bệnh di truyền ở người, đồng thời chỉ ra loài người cung đang gánh chịu một gánh nặng di truyền và cần phải có biện pháp để giảm bớt các gánh nặng đó cũng như một số vấn đề xã hội của di truyền học",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Di truyền học người",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("b2a7a480-c0e9-424a-a3cf-e35ed4f7e794"),
                            Description = "Giới thiệu các loại bằng chứng tiến hóa bao gồm bằng chứng giải phẫu so sánh, phôi sinh học so sánh, tế bào học và sinh học phân từ, bằng chứng địa lý sinh vật học để chứng minh sự tồn tại của quá trình tiến hóa của các loài sinh vật trên trái đất.",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Bằng chứng và cơ chế tiến hoá",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("03699ee1-aa9b-4695-8593-8112a5b7145f"),
                            Description = "Giới thiệu sự phát sinh sự sống qua các giai đoạn tiến hóa hóa học và tiến hóa tiến sinh học, sự phát triển của sinh vật qua các đại địa chất và sự phát sinh loài người.",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Sự phát sinh và phát triển của sự sống trên trái đất",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("c444dd00-cde1-43b3-9761-ea0eca9553e9"),
                            Description = "Khái niệm và các đặc điểm của quần thể sinh vật",
                            Index = 8,
                            IsDeleted = false,
                            Name = "Cá thể và quần thể sinh vật",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("49d712a6-e7ca-4252-a430-308f954047ff"),
                            Description = "Khái niệm, đặc điểm của quần xã sinh vật",
                            Index = 9,
                            IsDeleted = false,
                            Name = "Quần xã sinh vật",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("356135ae-0bc9-4560-af03-191995168919"),
                            Description = "Giới thiệu các hệ sinh thái từ nhỏ đến lớn: các hệ sinh thái nhỏ → các khu sinh học → sinh quyển",
                            Index = 10,
                            IsDeleted = false,
                            Name = "Hệ sinh thái, sinh quyển và bảo vệ môi trường",
                            SubjectId = new Guid("af6197e1-8fc6-4afe-9f63-6b4f426ad502")
                        },
                        new
                        {
                            Id = new Guid("c5470d64-b50b-447c-8d89-fc5b9bf338d3"),
                            Description = "Nghiên cứu các kiến thức về sự hình thành trật tự thế giới mới sau chiến tranh thể giới thứ hai từ năm 1945 đến 1949, qua đó, nắm được nguyên nhân hình thành trật tự thế giới mới mà đứng đầu là 3 cường quốc Anh, Mĩ và Liên Xô, cũng như sự ra đời của Liên hợp Quốc và sự phân chia thế giới thành hai phe đối lập.",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Sự hình thành trật tự thế giới mới sau chiến tranh thế giới thứ hai (1945 – 1949)",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("bffb16de-cbfc-4a26-8e27-370225aa09aa"),
                            Description = "Nghiên cứu các kiến thức về Liên Xô và các nước Đông Âu, Liên bang Nga, qua đó nắm được tình hình kinh tế, văn hóa, xã hội của các nước này trong những năm 1945 đến 2000, sự hợp tác về mặt chính trị, quân sự và ngoại giao, sự hình thành chế độ XHCN ở Liên bang Nga.",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Liên Xô và các nước Đông Âu (1945 – 1991). Liên bang Nga (1991 – 2000)",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("c20ee29b-c548-4a55-9f5c-2c78113b445e"),
                            Description = "Nghiên cứu các kiến thức về các nước Á, Phi và Mĩ Latinh giai đoạn từ năm 1945 đến 2000, qua đó nắm được tình hình kinh tế, văn hóa, xã hội của các nước cụ thể là ở Đông Bắc Á, Đông Nam Á, Ấn Độ, Châu Phi và Mĩ Latinh trong những năm 1945 đến 2000",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Các nước Á, Phi, Mỹ Latinh (1945 – 2000)",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("5054a03a-17d9-4ba1-b33c-fef16aa2ffc0"),
                            Description = "Nghiên cứu các kiến thức về Mĩ, Tây Âu và Nhật Bản, qua đó nắm được tình hình kinh tế, văn hóa, xã hội của các nước này trong những năm 1945 đến 2000, sự hợp tác về mặt chính trị, quân sự và ngoại giao",
                            Index = 4,
                            IsDeleted = false,
                            Name = "Mĩ, Tây Âu, Nhật Bản (1945 – 2000)",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("b4f8ba38-e4f6-4fa9-a49a-18e74322e133"),
                            Description = "Nghiên cứu các kiến thức về Quan hệ Quốc tế sau chiến tranh lạnh, qua đó, các em học sinh sẽ nắm được tình hình thế giới trong giai đoạn này, sự mâu thuẫn, xung đột về lợi ích Đông - Tây, nội chiến kéo dài kèm theo đó là sự sụp đổ của XHCN",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Quan hệ quốc tế (1945 – 2000)",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("5b019dee-3d51-4b0c-af72-bc6b48d51a32"),
                            Description = "Nghiên cứu các kiến thức về cuộc cách mạng khoa học - công nghệ và xu thế toàn cầu hoá, qua đó nắm được những thành tựu khoa học cũng như những ảnh hưởng, tác động tích cực và tiêu cực của nó đến tình hình phát triển của xã hội",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Cách mạng khoa học – Công nghệ và xu hướng toàn cầu hoá",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("9654577c-a684-4ec7-ac30-fd49386482a7"),
                            Description = "Nghiên cứu các kiến thức về phong trào dân tộc, dân chủ ở Việt Nam trong hai gia đoạn từ 1919 - 1925 và từ 1925 - 1930, qua đó nắm được các chính sách khai thác thuộc địa của Pháp đối với Việt Nam, cũng như sự chuyển biến về mặt kinh tế, văn hóa, xã hội của đất nước",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Việt Nam từ năm 1919 đến năm 1930",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("670f0b14-435e-413f-ac27-7271ed1b87bb"),
                            Description = "Nghiên cứu các kiến thức về Việt Nam từ năm 1930-1945, qua đó nắm được nguyên nhân, diễn biến và ý nghĩa lịch sử của các cuộc cách mạng dân chủ, cách mạng tháng 8 và sự ra đời của nhà nước Việt Nam dân chủ cộng hòa",
                            Index = 8,
                            IsDeleted = false,
                            Name = "Việt Nam từ năm 1930 đến năm 1945",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("596c886d-ae82-4b7e-9d88-7f185f57778e"),
                            Description = "Nghiên cứu các kiến thức về Việt Nam trong giai đoạn từ 1945 đến 1954, qua đó, các em học sinh sẽ nắm được cuộc hành trình 8 năm kháng chiến trường kì chống Pháp của dân tộc Việt Nam, những khó khăn và mất mát, nguyên nhân thắng lợi và ý nghĩa lịch sử",
                            Index = 9,
                            IsDeleted = false,
                            Name = "Việt Nam từ năm 1945 đến năm 1954",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("1649f0c1-8557-4c2a-99a8-b4ffde8e7bbe"),
                            Description = "Nghiên cứu các kiến thức về Việt Nam giai đoạn từ 1954 đến 1975, qua đó, các em học sinh sẽ nắm được quá trình xây dựng CNXH ở miền Bắc và đấu tranh chống Đế quốc Mĩ ở Miền Nam và nguyên nhân thắng lợi ý nghĩa lịch sử đại thắng mùa xuân năm 1975 giải phóng hoàn toàn miền Nam",
                            Index = 10,
                            IsDeleted = false,
                            Name = "Việt Nam từ năm 1954 đến năm 1975",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("179ea3f8-4ed8-4151-b360-7dbe9f033e0c"),
                            Description = "Nghiên cứu các kiến thức về Việt Nam từ năm 1975 đến năm 2000. Qua đây, các em sẽ nắm được quá trình khắc phục hậu quả chiến tranh, đi lên XHCN, sự trở mình về kinh tế, văn hóa, xã hội ở Việt Nam",
                            Index = 11,
                            IsDeleted = false,
                            Name = "Việt Nam từ năm 1975 đến năm 2000",
                            SubjectId = new Guid("ffb7d37a-a980-4623-ad89-0c1e0a7de7de")
                        },
                        new
                        {
                            Id = new Guid("c484c892-8a60-4056-b0b4-223a4d382529"),
                            Description = "Giới thiệu khái quát về con dường hội nhập và phát triển của Việt Nam",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Địa lý Việt Nam",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("0bca65ca-2ce4-4923-a507-43e381130c9f"),
                            Description = "Nội dung về địa lý và lịch sử hình thành và phát triển lãnh thổ",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Vị trí địa lí và lịch sử phát triển lãnh thổ",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("879bd2f5-8e49-4b94-b4cc-ed86c1f4b0da"),
                            Description = "Giới thiệu về vị trí địa lý, khí hậu cử từng vùng lãnh thổ trên đất nước Việt Nam",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Đặc Điểm Chung Của Tự Nhiên",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("a54bae14-3251-48aa-b210-0c32b3b46a13"),
                            Description = "Giới thiệu về vị trí địa lý, khí hậu cử từng vùng lãnh thổ trên đất nước Việt Nam",
                            Index = 4,
                            IsDeleted = false,
                            Name = "Vấn Đề Sử Dụng Và Bảo Vệ Tự Nhiên",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("370bb392-410b-46b5-9971-2df9a53e7670"),
                            Description = "Nội dung về dân cư và phát triển đô thi một cách hợp lý",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Địa Lý Dân Cư",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("0c83b2dc-372d-4687-8a51-c35b5e51c991"),
                            Description = "Nội dung chuyển dịch cơ cấu ngành kinh tế, chuyển dịch cơ cấu thành phần  kinh tế, chuyển dịch cơ cấu lãnh thổ kinh tế",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Địa Lý Kinh Tế",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("a9902cb8-b044-4e0e-8e22-9ec0337dea6b"),
                            Description = "Nội dung về đặc điểm về nền nông nghiệp ở nước ta",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Một Số Vấn Đề Phát Triển Và Phân Bố Nông Nghiệp",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("adda106e-b8ba-4bfb-bdea-e2fcd916137c"),
                            Description = "Nội dung về ngành công nghiệp",
                            Index = 8,
                            IsDeleted = false,
                            Name = "Một Số Vấn Đề Phát Triển Và Phân Bố Công Nghiệp",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("e992f53a-b7b0-4a1e-9b81-36ed3328c6e1"),
                            Description = "Nội dung về ngành thương mại du lịch và ngành giao thông vận tải",
                            Index = 9,
                            IsDeleted = false,
                            Name = "Một Số Vấn Đề Phát Triển Và Phân Bố Các Ngành Dịch Vụ",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("020841e0-c4da-4010-9556-e67ad0b7d816"),
                            Description = "Nội dung về đặc điểm, vấn đề phát triển của các khu vực kinh tế ở Việt Nam",
                            Index = 10,
                            IsDeleted = false,
                            Name = "Điạ Lý Các Vùng Kinh Tế",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("3501833e-e73b-4f30-8c73-36287d864c4b"),
                            Description = "Nội dung tìm hiểu địa lý tỉnh, thành phố qua đây sẽ giúp các em tìm hiểu kĩ hơn về địa lý hành chính, kinh tế, văn hóa xã hội, ở địa phương hoặc là tỉnh thành phố nơi mình đang sinh sống",
                            Index = 11,
                            IsDeleted = false,
                            Name = "Địa Lý Địa Phương",
                            SubjectId = new Guid("4cb41deb-15d9-40ba-9d20-1f3f10410cc7")
                        },
                        new
                        {
                            Id = new Guid("28bbe836-de18-4d85-9555-a47d95f85a5f"),
                            Description = "Nắm được khái niệm, bản chất của pháp luật, mối quan hệ giữa phát luật với đạo đức. Và hiểu được vai trò của pháp luật với đời sống của cá nhân, Nhà nước và xã hội",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Pháp luật và đời sống",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("6880b25a-40ec-410e-b332-e6616982e206"),
                            Description = "Các hình thức cũng như quá trình thực hiện pháp luật. Bên cạnh đó hiểu được thế nào là vi phạm pháp luật và trách nhiệm pháp lí",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Thực hiện pháp luật",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("898a8245-bff3-4cbb-9ac4-8692cc84d2e1"),
                            Description = "Bình đẳng trước pháp luật là một trong những quyền cơ bản của công dân được quy định tại điều 52 Hiến pháp năm 1992 nước Cộng hòa xã hội chủ nghĩa Việt Nam: “Mọi công dân đều bình đẳng trước pháp luật”",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Công dân bình đẳng trước pháp luật",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("fa93b3f0-ed5f-4b84-af34-6cc4f5b3831c"),
                            Description = "Đề cập cụ thể tới quyền bình đẳng của công dân trong hôn nhân và gia đình, trong lao động và trong kinh doanh",
                            Index = 4,
                            IsDeleted = false,
                            Name = "Quyền bình đẳng của công dân trong một số lĩnh vực của đời sống xã hội",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("b80adb23-18d3-4b5e-9fc0-2fa25d47dd49"),
                            Description = "Ngay từ khi mới ra đời đã xác định vấn đề dân tộc, tôn giáo là vấn đề chiến lược có tầm quan trọng đặc biệt. Đáp ứng đòi hỏi của sự nghiệp công nghiệp hóa, hiện đại hóa đất nước hiện nay, Đảng và Nhà nước ta đã có những chính sách như thế nào về vấn đề dân tộc và tôn giáo?",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Quyền bình đẳng giữa các dân tộc, tôn giáo",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("c2b93d0f-1032-45c9-94bf-a53e2c5aa3be"),
                            Description = "Khái niệm, nội dung, ý nghĩa của các quyền tự do cơ bản của công dân: Quyền bất khả xâm phạm về thân thể. Quyền được pháp luật bảo hộ về tính mạng, sức khỏe, danh dự và nhân phẩm cũng như quyền bất khả xâm phạm về chỗ ở. Quyền bảo đảm an toàn và bí mật thư tín, điện thoại, điện tín và quyền tự do ngôn luận.",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Công dân với các quyền tự do cơ bản",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("0faf3a0d-3e02-41f1-890c-51610de8e8cb"),
                            Description = "Tìm hiểu về các quyền dân chủ cơ bản của công dân: quyền bầu cử, ứng cử, quyền khiếu nại, tố cáo... ",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Công dân với các quyền dân chủ",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("7b39b159-82aa-48a9-9dd1-6d0b435f50be"),
                            Description = "Hiểu về Pháp luật với sự phát triển của công dân là gì? Các quyền cơ bản để công dân phát triển đó là: học tập, sáng tạo,... ",
                            Index = 8,
                            IsDeleted = false,
                            Name = "Pháp luật với sự phát triển của công dân",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("72c5c4ca-e8f8-4b02-97cd-4666ab7ccd44"),
                            Description = "Một đất nước phát triển bền vững là một đất nước có sự tăng trưởng liên tục và vững chắc về kinh tế, có sự bảo đảm ổn định và phát triển về văn hoá, xã hội, có môi trường được bảo vệ và cải thiện, có nền quốc phòng và an ninh vững chắc. Trong sự phát triển bền vững của đất nước, phát luật có vai trò rất quan trọng?",
                            Index = 9,
                            IsDeleted = false,
                            Name = "Pháp luật với sự phát triển bền vững của đất nước",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("86f6ce80-f585-47d8-b3f0-c2f1d6cd084a"),
                            Description = "Tìm hiểu về vai trò của pháp luật đối với hòa bình và sự phát triển tiến bộ của nhân loại. Đồng thời tôn trọng pháp luật về các mặt phát triển của nhân loại",
                            Index = 10,
                            IsDeleted = false,
                            Name = "Pháp luật với hoà bình và sự phát triển tiến bộ của nhân loại",
                            SubjectId = new Guid("00940497-7f82-493d-aac3-a56e9e92f390")
                        },
                        new
                        {
                            Id = new Guid("33fcdca5-2b11-49cf-8824-f91d45c86dd2"),
                            Description = "",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Home life - Đời sống gia đình",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("2addcd1a-4f32-42dc-bf9f-637fd7769c3c"),
                            Description = "",
                            Index = 2,
                            IsDeleted = false,
                            Name = "Cultural Diversity - Sự đa dạng văn hóa",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("64722757-eb15-4891-abbc-bd870caae9f1"),
                            Description = "",
                            Index = 3,
                            IsDeleted = false,
                            Name = "Ways of Socialising - Phương thức giao tiếp xã hội",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("451fa872-1960-4c03-a3df-374dbfc81c83"),
                            Description = "",
                            Index = 4,
                            IsDeleted = false,
                            Name = "School Education System - Hệ thống giáo dục",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("35399c19-5f66-4dfd-bdb7-f4744f6749aa"),
                            Description = "",
                            Index = 5,
                            IsDeleted = false,
                            Name = "Higher Education - Nền giáo dục bậc cao",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("55469d88-1e76-4678-ad62-e3d233602dfa"),
                            Description = "",
                            Index = 6,
                            IsDeleted = false,
                            Name = "Future Jobs - Nghề nghiệp tương lai",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("4f830591-4a73-4976-9a63-dcebb53ca4c2"),
                            Description = "",
                            Index = 7,
                            IsDeleted = false,
                            Name = "Economic Reforms - Sự cải cách kinh tế",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("f6b3d23f-e2d4-4cc9-8cea-2d942f2e9092"),
                            Description = "",
                            Index = 8,
                            IsDeleted = false,
                            Name = "Life in the future - Cuộc sống trong tương lai",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("7294fa9f-78c5-49f3-a9fa-c99feb6d6a5c"),
                            Description = "",
                            Index = 9,
                            IsDeleted = false,
                            Name = "Deserts - Sa mạc",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("1133b9a3-b5c1-4470-982a-22a5b5391d15"),
                            Description = "",
                            Index = 10,
                            IsDeleted = false,
                            Name = "Endangered Species - Những loài đang gặp nguy hiểm",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("470c4063-38b5-437c-9820-2a29a470c708"),
                            Description = "",
                            Index = 11,
                            IsDeleted = false,
                            Name = "Books - Các loại sách",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("9a4f72df-ee78-4455-8b67-76b3a26ce507"),
                            Description = "",
                            Index = 12,
                            IsDeleted = false,
                            Name = "Water Sports - Những môn thể thao dưới nước",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("838f30bd-d9cf-4ea6-8825-fe729c55e5af"),
                            Description = "",
                            Index = 13,
                            IsDeleted = false,
                            Name = "The 22nd Sea Game - Sea Game lần thứ 22",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("fd5ee68e-5647-41ad-9ff1-2d98edd4aea2"),
                            Description = "",
                            Index = 14,
                            IsDeleted = false,
                            Name = "International Organizations - Những tổ chức quốc tế",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("de780968-915f-418e-845d-84c5810b5c92"),
                            Description = "",
                            Index = 15,
                            IsDeleted = false,
                            Name = "Women In Society - Người phụ nữ trong xã hội ",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("3f3502cf-68cb-4f91-846e-d8819dca38fd"),
                            Description = "",
                            Index = 16,
                            IsDeleted = false,
                            Name = "The Association of Southeast Asian Nations - Hiệp hội các quốc gia Đông Nam Á",
                            SubjectId = new Guid("d6d7fa5b-6578-46c3-bcd4-98c43d6d709c")
                        },
                        new
                        {
                            Id = new Guid("7c506348-0444-4c91-ad50-15b952135294"),
                            Description = "Môn ngữ văn",
                            Index = 1,
                            IsDeleted = false,
                            Name = "Môn ngữ văn",
                            SubjectId = new Guid("c0456f7f-1963-4598-8b7c-8f44bd7e2dbe")
                        });
                });

            modelBuilder.Entity("Domain.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalPay")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Domain.Models.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("University");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f84e78ea-4426-4728-a3f6-c41c3ed22072"),
                            Code = "FPT",
                            Description = "Trường đại học tư thục hàng đầu Việt Nam về công nghệ thông tin và truyền thông.",
                            IsDeleted = false,
                            Name = "Đại học FPT"
                        },
                        new
                        {
                            Id = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            Code = "UEH",
                            Description = "Trường đại học công lập đào tạo về kinh tế, tài chính, ngân hàng hàng đầu tại Việt Nam",
                            IsDeleted = false,
                            Name = "Đại học kinh tế TPHCM"
                        },
                        new
                        {
                            Id = new Guid("0e7c3b01-d954-4986-9d9d-f48127433211"),
                            Code = "HCMUE",
                            Description = "Trường đại học công lập đào tạo sư phạm lớn nhất Việt Nam",
                            IsDeleted = false,
                            Name = "Đại học Sư phạm Thành phố Hồ Chí Minh"
                        },
                        new
                        {
                            Id = new Guid("b629e405-9aca-4c19-bbe3-f4a50d9cca62"),
                            Code = "UMP",
                            Description = "Trường đại học công lập đào tạo về y dược lớn nhất Việt Nam",
                            IsDeleted = false,
                            Name = "Đại học Y Dược Thành phố Hồ Chí Minh"
                        },
                        new
                        {
                            Id = new Guid("cf30b5ef-1a8f-472f-af90-337a5cee4c16"),
                            Code = "UAH",
                            Description = "Trường đại học công lập đào tạo về kiến trúc hàng đầu Việt Nam",
                            IsDeleted = false,
                            Name = "Đại học Kiến trúc Thành phố Hồ Chí Minh"
                        },
                        new
                        {
                            Id = new Guid("83e4e060-f70a-4fb3-b828-e8f1443d3f46"),
                            Code = "HCMUT",
                            Description = "Trường đại học đầu ngành về lĩnh vực kỹ thuật ở miền Nam Việt Nam",
                            IsDeleted = false,
                            Name = "Trường Đại học Bách Khoa TP.Hồ Chí Minh"
                        },
                        new
                        {
                            Id = new Guid("b9647f7b-e9a0-4636-80f9-45364c8b04a9"),
                            Code = "UIT",
                            Description = "Trường đại học công lập đào tạo về công nghệ thông tin và truyền thông",
                            IsDeleted = false,
                            Name = "Trường Đại học Công nghệ Thông tin TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("54812146-c3a3-41e1-9b46-c24a2a0a2aa1"),
                            Code = "HCMUS",
                            Description = "Trường đại học đầu ngành về đào tạo, nghiên cứu khoa học cơ bản, khoa học công nghệ và ứng dụng ở miền Nam Việt Nam.",
                            IsDeleted = false,
                            Name = "Trường Đại học Khoa học Tự nhiên TPHCM"
                        },
                        new
                        {
                            Id = new Guid("b8ec3722-2649-4738-8316-38ffd56ed04d"),
                            Code = "HCMUSSH",
                            Description = "Trường là trung tâm nghiên cứu, đào tạo trong lĩnh vực khoa học xã hội và nhân văn lớn nhất miền Nam.",
                            IsDeleted = false,
                            Name = "Trường Đại học Khoa học Xã hội và Nhân văn TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("314a233c-a95f-4026-992a-75a708d07838"),
                            Code = "UEL",
                            Description = "Trường đại học đào tạo và nghiên cứu khối ngành kinh tế, kinh doanh quản lý và luật hàng đầu Việt Nam",
                            IsDeleted = false,
                            Name = "Trường Đại học Kinh tế – Luật TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("2a5d2d04-9d41-4279-9337-5b0039ee1b23"),
                            Code = "HCMIU",
                            Description = "Trường đại học công lập đa ngành đầu tiên tại Việt Nam giảng dạy hoàn toàn tiếng Anh",
                            IsDeleted = false,
                            Name = "Trường Đại học Quốc tế"
                        },
                        new
                        {
                            Id = new Guid("d1ee778a-2d89-402f-aa5e-c914315dbc3f"),
                            Code = "TDTU",
                            Description = "Trường đại học công lập đầu tiên tại Việt Nam có cơ sở vật chất và điều kiện giảng dạy được xếp hạng quốc tế",
                            IsDeleted = false,
                            Name = "Trường Đại học Tôn Đức Thắng"
                        },
                        new
                        {
                            Id = new Guid("3d6888a4-17b8-4173-9f12-7ce55983d1cc"),
                            Code = "VGU",
                            Description = "Trường đại học công lập của Việt Nam được xây dựng trên cơ sở quan hệ đối tác chặt chẽ với CHLB Đức",
                            IsDeleted = false,
                            Name = "Trường Đại học Việt Đức"
                        },
                        new
                        {
                            Id = new Guid("059779f5-c84c-455a-85d0-798ca039ba72"),
                            Code = "VINUNI",
                            Description = "Trường đại học tư thục phi lợi nhuận được thành lập bởi Tập đoàn Vingroup – tập đoàn tư nhân lớn nhất Việt Nam",
                            IsDeleted = false,
                            Name = "Trường Đại học VinUni"
                        },
                        new
                        {
                            Id = new Guid("3f5ffdad-a0e1-478c-8ae1-7f0af8fd438c"),
                            Code = "HUIT",
                            Description = "Trường đại học đạt chuẩn kiểm định chất lượng giáo dục với chương trình đào tạo đa ngành,đa lĩnh vực, có thế mạnh trong lĩnh vực công nghiệp và thương mại.",
                            IsDeleted = false,
                            Name = "Trường Đại học Công Thương"
                        },
                        new
                        {
                            Id = new Guid("0de6a90f-780c-41a4-9920-3dc6a86e3f11"),
                            Code = "HUB",
                            Description = "Trường đại học công lập trực thuộc Ngân hàng Nhà nước Việt Nam được thành lập từ ngày 16/12/1976.",
                            IsDeleted = false,
                            Name = "Trường Đại học Ngân hàng TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("3fdd5b92-3e52-4434-8f21-176732be0cc1"),
                            Code = "PPU",
                            Description = "trường đại học công lập trực thuộc Bộ Công an tại Việt Nam đào tạo trình độ và phẩm chất cán bộ Cảnh sát nhân dân ở bậc đại học và sau đại học",
                            IsDeleted = false,
                            Name = "Trường Đại học Cảnh sát Nhân dân"
                        },
                        new
                        {
                            Id = new Guid("2721d2b3-c6e1-4253-8823-cf73744e0190"),
                            Code = "HCMCOU",
                            Description = "có nhiệm vụ đào tạo đại học và sau đại học, với các hình thức đào tạo chính quy và giáo dục thường xuyên, đào tạo các điểm vệ tinh",
                            IsDeleted = false,
                            Name = "Trường Đại học Mở"
                        },
                        new
                        {
                            Id = new Guid("8ae6dc6f-c859-4fb9-b038-366470876d80"),
                            Code = "HCMUFA",
                            Description = " Trường đại học chuyên ngành về đào tạo nhóm ngành mỹ thuật tại Việt Nam.",
                            IsDeleted = false,
                            Name = "Trường Đại học Mỹ thuật TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("1d5312be-a745-4a4a-b1df-41abd3dc01e8"),
                            Code = "USH",
                            Description = "trường đại học với mô hình kết hợp giữa đào tạo và huấn luyện",
                            IsDeleted = false,
                            Name = "Trường Đại học Thể dục Thể thao TP. HCM"
                        },
                        new
                        {
                            Id = new Guid("b8620337-894a-4339-926e-dff2cd9f09ba"),
                            Code = "HCMUC",
                            Description = "Trường đại học đào tạo và nghiên cứu khoa học các lĩnh vực: văn hóa, nghệ thuật, thông tin và du lịch.",
                            IsDeleted = false,
                            Name = "Trường Đại học Văn hóa TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("cdbd71b3-7fe4-4917-9eed-616b4c2f2a97"),
                            Code = "HCMUTE",
                            Description = "Trường đại học đa ngành tại Việt Nam, với thế mạnh về đào tạo kỹ thuật",
                            IsDeleted = false,
                            Name = "Trường Đại học Sư phạm - Kỹ thuật TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("253fca55-c797-4f1d-8c83-a66d81342921"),
                            Code = "IUH",
                            Description = "Trường đại học định hướng ứng dụng và thực hành, chuyên đào tạo nhóm ngành kinh tế công nghiệp và kỹ thuật công nghiệp",
                            IsDeleted = false,
                            Name = "Trường Đại học Công nghiệp TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("ddb202ca-e224-48d6-a463-6b32ed962693"),
                            Code = "UTH",
                            Description = "Trường đại học đa ngành thuộc lĩnh vực giao thông vận tải lớn nhất phía Nam Việt Nam.",
                            IsDeleted = false,
                            Name = "Trường Đại học Giao thông Vận tải TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("778c4103-05d3-4dab-9019-7196f6772dc8"),
                            Code = "SKDAHCM",
                            Description = "Trường đại học chuyên đào tạo nhóm ngành sân khấu, điện ảnh và nghệ thuật tại Thành phố Hồ Chí Minh.",
                            IsDeleted = false,
                            Name = "Trường Đại học Sân khấu – Điện ảnh TP.HCM"
                        },
                        new
                        {
                            Id = new Guid("abf76dc2-7086-4836-badb-a520e720caaa"),
                            Code = "HCMUNRE",
                            Description = "Trường đại học đào tạo các chuyên ngành kinh tế, kỹ thuật, môi trường, khí hậu, biển - hải đảo, trắc địa - bản đồ, đất đai, địa chất, khí tượng, thủy văn,...",
                            IsDeleted = false,
                            Name = "Trường Đại học Tài nguyên – Môi trường TPHCM"
                        },
                        new
                        {
                            Id = new Guid("166d0a24-7e52-45af-a795-d8e082d3749a"),
                            Code = "UFM",
                            Description = "Trường đại học công lập chuyên ngành về nhóm ngành tài chính và quản lý tại miền Nam Việt Nam",
                            IsDeleted = false,
                            Name = "Trường Đại học Tài chính – Marketing"
                        },
                        new
                        {
                            Id = new Guid("b83746d5-641b-40ef-9804-a8fb7ae9fb4f"),
                            Code = "TDNU",
                            Description = "Trường đại học kỹ thuật được thành lập ngày 12 tháng 05 năm 1975 trên cơ sở nâng cấp Trường Sĩ quan Kỹ thuật quân sự.",
                            IsDeleted = false,
                            Name = "Trường Đại học Trần Đại Nghĩa"
                        },
                        new
                        {
                            Id = new Guid("98f712a7-3847-46f7-90cc-2e3cb2348123"),
                            Code = "ULSA2",
                            Description = "Trường đại học đào tạo các khối ngành kinh tế, xã hội; nghiên cứu và ứng dụng khoa học phục vụ giáo dục, đào tạo và phát triển kinh tế - xã hội",
                            IsDeleted = false,
                            Name = "Trường Đại học Lao động – Xã hội cơ sở 2"
                        },
                        new
                        {
                            Id = new Guid("7d8960c2-ee10-4813-9522-106512a9b802"),
                            Code = "UPES",
                            Description = "Trường đại học đào tạo về giáo dục thể chất và đào tạo chuẩn hóa giáo viên thể dục theo định chuẩn của Bộ Giáo dục và Đào tạo Việt Nam.",
                            IsDeleted = false,
                            Name = "Trường Đại học Sư phạm Thể dục Thể thao"
                        },
                        new
                        {
                            Id = new Guid("6d35b512-5dcc-49af-9f26-29eddd7f475c"),
                            Code = "TLUS",
                            Description = "Trường đại học số 1 trong việc đào tạo lĩnh vực thủy lợi, môi trường, phòng chống và giảm nhẹ thiên tai.",
                            IsDeleted = false,
                            Name = "Trường Đại học Thủy Lợi TP.HCM"
                        });
                });

            modelBuilder.Entity("Domain.Models.UniversityDepartment", b =>
                {
                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("RequiredScore")
                        .HasColumnType("real");

                    b.HasKey("UniversityId", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("UniversityDepartments");

                    b.HasData(
                        new
                        {
                            UniversityId = new Guid("83e4e060-f70a-4fb3-b828-e8f1443d3f46"),
                            DepartmentId = new Guid("38449231-c9b9-46b9-9ee1-83ebaea156f1"),
                            Id = new Guid("c35a6c55-f88b-400f-9b1b-812e78e7b871"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("83e4e060-f70a-4fb3-b828-e8f1443d3f46"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("f4c4958c-9e2b-4131-9a02-452543deee11"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("83e4e060-f70a-4fb3-b828-e8f1443d3f46"),
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Id = new Guid("ccac8532-50f8-4eb9-a4ff-f77a61532875"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("83e4e060-f70a-4fb3-b828-e8f1443d3f46"),
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Id = new Guid("0e755d4f-1cdb-4b91-a371-f2db5e9e9dc2"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("83e4e060-f70a-4fb3-b828-e8f1443d3f46"),
                            DepartmentId = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Id = new Guid("2e17c493-2af0-4b21-9ec3-f53348865341"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b9647f7b-e9a0-4636-80f9-45364c8b04a9"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("1b5409e3-c83d-4456-9a97-3a7bfc0ea1da"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("54812146-c3a3-41e1-9b46-c24a2a0a2aa1"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("3c82ef12-2e05-4fba-804b-142411e06608"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("54812146-c3a3-41e1-9b46-c24a2a0a2aa1"),
                            DepartmentId = new Guid("eb977e5d-b2a9-48c2-a540-cefe5a960c1d"),
                            Id = new Guid("b1c7db3c-5adc-45eb-94b4-c05b15dc7dc1"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("54812146-c3a3-41e1-9b46-c24a2a0a2aa1"),
                            DepartmentId = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Id = new Guid("afcfae3f-de36-44d4-b62e-e9f4016bdf98"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("54812146-c3a3-41e1-9b46-c24a2a0a2aa1"),
                            DepartmentId = new Guid("03a02645-69be-46a7-ad93-cf48b8c2961d"),
                            Id = new Guid("8ff923b2-9857-419e-b6ce-f46a02a3fd0f"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b8ec3722-2649-4738-8316-38ffd56ed04d"),
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Id = new Guid("a64675d4-f7f3-4fa0-8cf4-f9c416494f84"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b8ec3722-2649-4738-8316-38ffd56ed04d"),
                            DepartmentId = new Guid("d7ab840a-0e06-4785-aa71-f82bef075ff9"),
                            Id = new Guid("4b6d3441-73c4-4c43-9210-7f5b02d0c408"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b8ec3722-2649-4738-8316-38ffd56ed04d"),
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Id = new Guid("5b718b0e-33a5-455b-9023-350ec9ba15d6"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b8ec3722-2649-4738-8316-38ffd56ed04d"),
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Id = new Guid("5182c122-8173-46cf-8ff4-0f2abe45b2e2"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b8ec3722-2649-4738-8316-38ffd56ed04d"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("eac04805-6163-49b7-96f2-83116100f3e4"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("314a233c-a95f-4026-992a-75a708d07838"),
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Id = new Guid("9f7d7dfe-35ca-496a-8685-c33f490a7778"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("314a233c-a95f-4026-992a-75a708d07838"),
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Id = new Guid("ed88daa5-98b5-4788-9974-bde351adb4b8"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("314a233c-a95f-4026-992a-75a708d07838"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("7b048c7d-d707-4fc5-b2e1-a4d220a05ab3"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2a5d2d04-9d41-4279-9337-5b0039ee1b23"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("9de361f7-863f-4d47-9cf4-2807752ca358"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2a5d2d04-9d41-4279-9337-5b0039ee1b23"),
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Id = new Guid("75ec74b5-2ddf-48be-a62d-4c5eab61b701"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2a5d2d04-9d41-4279-9337-5b0039ee1b23"),
                            DepartmentId = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Id = new Guid("3480333c-c628-4cd3-af80-53872212f1a3"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2a5d2d04-9d41-4279-9337-5b0039ee1b23"),
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Id = new Guid("ff27b635-bd80-4ee4-ba0f-cfb6318a03e2"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2a5d2d04-9d41-4279-9337-5b0039ee1b23"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("6896fad6-879e-4583-ba11-7893aefcc4a9"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2a5d2d04-9d41-4279-9337-5b0039ee1b23"),
                            DepartmentId = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Id = new Guid("e169a6d4-b586-499d-b199-8aee1b8b0d54"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b629e405-9aca-4c19-bbe3-f4a50d9cca62"),
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Id = new Guid("c01ede3f-21a6-4925-ac48-2e922094ba83"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("d77354a4-913c-4a11-97e3-4ca47c0f5424"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Id = new Guid("e864f3ea-4d1c-49ad-9e09-8b4a30530b5a"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Id = new Guid("fe7b7c28-eadc-4313-81a8-eca850f6a64f"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("947274a7-eb7b-4b23-aad3-db2072eb3a75"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("d42f497b-9196-4a29-9b23-3cbb9f2a9ccf"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Id = new Guid("aa55a474-c4b8-4a7c-8020-4639863d2009"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6b70b92b-4201-4611-b6bb-716a5b3c4fec"),
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Id = new Guid("a41470c0-9762-4441-9a8a-cc3510b372f7"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0e7c3b01-d954-4986-9d9d-f48127433211"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("0fbe70bd-b478-419b-88ff-af343c7845ac"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0e7c3b01-d954-4986-9d9d-f48127433211"),
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Id = new Guid("93527c9b-71fa-4cb9-9286-a0fe534a7608"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0e7c3b01-d954-4986-9d9d-f48127433211"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("6c552337-a58e-493d-90f4-ff6299dfbd0a"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("f84e78ea-4426-4728-a3f6-c41c3ed22072"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("57f0e5e0-e41f-4d51-813a-ef55550902d7"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("f84e78ea-4426-4728-a3f6-c41c3ed22072"),
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Id = new Guid("8c3ee2a4-a9f1-4ff4-b09a-9242f7cf6bc6"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("f84e78ea-4426-4728-a3f6-c41c3ed22072"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("46233795-1b64-448a-a629-21c12c40c804"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("f84e78ea-4426-4728-a3f6-c41c3ed22072"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("5d18842d-3612-46a4-a0a8-bc6f633c0a27"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("cf30b5ef-1a8f-472f-af90-337a5cee4c16"),
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            Id = new Guid("fe787b7f-254f-4ed3-ae20-8f3c376d0efd"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("cf30b5ef-1a8f-472f-af90-337a5cee4c16"),
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Id = new Guid("298ccff7-9a81-437c-8473-5a0333e8cae2"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("d1ee778a-2d89-402f-aa5e-c914315dbc3f"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("699ecb87-e496-4781-945d-8aeb5455cae1"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("d1ee778a-2d89-402f-aa5e-c914315dbc3f"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("da0dfcbb-e846-45a2-baf9-7ec9e8f52f3d"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("d1ee778a-2d89-402f-aa5e-c914315dbc3f"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("1bf38b36-9663-4368-8d61-e33d8606bd62"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("d1ee778a-2d89-402f-aa5e-c914315dbc3f"),
                            DepartmentId = new Guid("c63be8dc-3a1e-494a-9b2a-ba49b5eef457"),
                            Id = new Guid("32c9fe4e-66f9-4d7b-847d-efa87a4642a3"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("d1ee778a-2d89-402f-aa5e-c914315dbc3f"),
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Id = new Guid("9b797f4c-6b7f-470a-bdcc-f3c7e6599985"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3d6888a4-17b8-4173-9f12-7ce55983d1cc"),
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Id = new Guid("a896dca0-76e5-4a96-8858-838a8b8114ab"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3d6888a4-17b8-4173-9f12-7ce55983d1cc"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("77263dce-bbcb-44ae-8b6d-adff278fe00b"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3d6888a4-17b8-4173-9f12-7ce55983d1cc"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("f38136d0-5602-49a2-b8fd-da73e0a65c16"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3d6888a4-17b8-4173-9f12-7ce55983d1cc"),
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Id = new Guid("ade3c37a-030e-4f43-810b-10688b7512a2"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("059779f5-c84c-455a-85d0-798ca039ba72"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("a943a4e3-7633-4990-9ecd-431d93bf2b71"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("059779f5-c84c-455a-85d0-798ca039ba72"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("ce8bd0dc-c001-4586-bceb-7ee83abde2b3"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("059779f5-c84c-455a-85d0-798ca039ba72"),
                            DepartmentId = new Guid("4c7c3b5f-2a54-42ee-8a7f-0961273cd329"),
                            Id = new Guid("65ee4308-6e91-4772-8009-be274a6ecced"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3f5ffdad-a0e1-478c-8ae1-7f0af8fd438c"),
                            DepartmentId = new Guid("37ac6580-0e40-465f-b9f6-aa7e803487b2"),
                            Id = new Guid("3bd0e623-e6d7-4792-a697-a6b8c6ca6797"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3f5ffdad-a0e1-478c-8ae1-7f0af8fd438c"),
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Id = new Guid("5ac24503-c23b-4905-bf2c-6fb68c53e877"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3f5ffdad-a0e1-478c-8ae1-7f0af8fd438c"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("aa7add7f-d344-4d73-bc0a-5e6ea6f42aa2"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3f5ffdad-a0e1-478c-8ae1-7f0af8fd438c"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("5ea0df8b-390c-47f5-92a4-75e2c66e0f2b"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3f5ffdad-a0e1-478c-8ae1-7f0af8fd438c"),
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Id = new Guid("66c58733-d8f0-4900-afd7-70a54246f773"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0de6a90f-780c-41a4-9920-3dc6a86e3f11"),
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Id = new Guid("2d4e9205-6c66-47d1-aa4d-2c7365e27b4c"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0de6a90f-780c-41a4-9920-3dc6a86e3f11"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("b4e33b7e-eadc-411b-97fb-46366844f73d"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0de6a90f-780c-41a4-9920-3dc6a86e3f11"),
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Id = new Guid("fe9af913-73d2-4d3a-a189-e81ccea8c82e"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0de6a90f-780c-41a4-9920-3dc6a86e3f11"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("d41fdfa1-8429-46cf-9941-de8fae4281b2"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("0de6a90f-780c-41a4-9920-3dc6a86e3f11"),
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Id = new Guid("3cfdd28f-1d05-4fe1-b934-3837fbe2eec9"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("3fdd5b92-3e52-4434-8f21-176732be0cc1"),
                            DepartmentId = new Guid("575e2a34-3e4e-40b3-be97-37310e59085a"),
                            Id = new Guid("065e10eb-73c1-4279-9082-2cad7c132c68"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2721d2b3-c6e1-4253-8823-cf73744e0190"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("c58937df-64bd-4f63-b998-27e5ba347b3c"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2721d2b3-c6e1-4253-8823-cf73744e0190"),
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Id = new Guid("17e0e068-e177-4c6b-9ce3-8e2913f534d4"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2721d2b3-c6e1-4253-8823-cf73744e0190"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("cd585229-73d4-4048-aac0-9dde7259fa5e"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2721d2b3-c6e1-4253-8823-cf73744e0190"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("bb2d1988-7500-48ca-9ab5-aee3fca24deb"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2721d2b3-c6e1-4253-8823-cf73744e0190"),
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Id = new Guid("a2398a84-25e4-4766-bade-27d1da1178ac"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("2721d2b3-c6e1-4253-8823-cf73744e0190"),
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Id = new Guid("2ec0d13f-068f-4aa8-8022-c1c0ec394b07"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("8ae6dc6f-c859-4fb9-b038-366470876d80"),
                            DepartmentId = new Guid("bb3a10db-c4d4-4b45-9d15-0c38f41e8f5f"),
                            Id = new Guid("47896fae-da8b-41c3-a554-8a2405659199"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("8ae6dc6f-c859-4fb9-b038-366470876d80"),
                            DepartmentId = new Guid("f9cf3140-b872-4837-b965-d37f94e33c0b"),
                            Id = new Guid("9ba9d579-afc3-4123-8047-c981a145ff37"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("1d5312be-a745-4a4a-b1df-41abd3dc01e8"),
                            DepartmentId = new Guid("3a8a3b94-db19-44cb-91ae-a895fe50c498"),
                            Id = new Guid("395ee7e1-c73b-432b-8ef2-011e98655c3d"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b8620337-894a-4339-926e-dff2cd9f09ba"),
                            DepartmentId = new Guid("d7ab840a-0e06-4785-aa71-f82bef075ff9"),
                            Id = new Guid("4a077579-638c-4bb5-b991-330d2972a5b5"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b8620337-894a-4339-926e-dff2cd9f09ba"),
                            DepartmentId = new Guid("9bf92746-e6c9-46ae-a8ba-9fa93671dcce"),
                            Id = new Guid("0776c065-b631-4331-80bd-c87e7ca881db"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("cdbd71b3-7fe4-4917-9eed-616b4c2f2a97"),
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Id = new Guid("071cfad3-f6a1-4bf3-8632-692f5e48e706"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("cdbd71b3-7fe4-4917-9eed-616b4c2f2a97"),
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Id = new Guid("9db07138-e420-4be8-b9bf-3cdd043ca55f"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("cdbd71b3-7fe4-4917-9eed-616b4c2f2a97"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("8fa757e4-ef5b-4ad4-8162-b8c75e6ed1ba"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("cdbd71b3-7fe4-4917-9eed-616b4c2f2a97"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("c7070cd0-fe91-497c-8865-7bb6a104ba47"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("253fca55-c797-4f1d-8c83-a66d81342921"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("5b37cfac-ef3a-4862-9200-63a9b84d5a84"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("253fca55-c797-4f1d-8c83-a66d81342921"),
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Id = new Guid("16009e9f-b6a5-48fd-850e-c4cd633b1e3f"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("253fca55-c797-4f1d-8c83-a66d81342921"),
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Id = new Guid("f0b547f6-2f60-446f-a3cb-ad312af4fd55"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("253fca55-c797-4f1d-8c83-a66d81342921"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("d6f7ed4c-57d1-4680-80a2-a42de8d4c16d"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("253fca55-c797-4f1d-8c83-a66d81342921"),
                            DepartmentId = new Guid("d2322472-e7af-47e7-ab8f-eba6e8e7baad"),
                            Id = new Guid("1e5e5710-cbe3-4ad7-91cb-5b9e1ff6a495"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("ddb202ca-e224-48d6-a463-6b32ed962693"),
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Id = new Guid("ea30506f-3ee8-438f-8f98-e5b73837e64d"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("ddb202ca-e224-48d6-a463-6b32ed962693"),
                            DepartmentId = new Guid("47243cb9-ad17-4590-bf72-bef8ca382fa9"),
                            Id = new Guid("b7a246b7-b1ec-418b-8d09-3049363a6104"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("ddb202ca-e224-48d6-a463-6b32ed962693"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("0f04c625-6886-4755-b7e4-8339df3a9a12"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("ddb202ca-e224-48d6-a463-6b32ed962693"),
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Id = new Guid("4e6e422f-3d85-45a0-891d-898a3b96e23b"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("ddb202ca-e224-48d6-a463-6b32ed962693"),
                            DepartmentId = new Guid("5fbe7741-917c-45f5-8f78-c06327ede146"),
                            Id = new Guid("b34ccc66-d9c3-438b-b989-b9af063cca86"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("778c4103-05d3-4dab-9019-7196f6772dc8"),
                            DepartmentId = new Guid("07563189-01d5-4ec1-80a6-f9c7ced12408"),
                            Id = new Guid("7152be3b-19dc-47fa-b74c-3fe92044789d"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("abf76dc2-7086-4836-badb-a520e720caaa"),
                            DepartmentId = new Guid("eb977e5d-b2a9-48c2-a540-cefe5a960c1d"),
                            Id = new Guid("dd7d6a2a-285f-4f43-bd3e-eb6b117310c5"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("abf76dc2-7086-4836-badb-a520e720caaa"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("e8e3d5f7-dd13-4ac1-acb3-e26e0be0009f"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("abf76dc2-7086-4836-badb-a520e720caaa"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("806293ab-12c3-429c-8155-72740bc38d23"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("166d0a24-7e52-45af-a795-d8e082d3749a"),
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Id = new Guid("3e3340a9-1416-41b4-8ee6-ee6023a78a7c"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("166d0a24-7e52-45af-a795-d8e082d3749a"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("32470d5f-84cb-4b60-a744-ce6303b9b948"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("166d0a24-7e52-45af-a795-d8e082d3749a"),
                            DepartmentId = new Guid("e63527a5-2326-4d15-afb5-8244fd0fa441"),
                            Id = new Guid("b5c79e2b-3b5f-4fdd-926c-8bef0e208811"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b83746d5-641b-40ef-9804-a8fb7ae9fb4f"),
                            DepartmentId = new Guid("575e2a34-3e4e-40b3-be97-37310e59085a"),
                            Id = new Guid("852c8bf8-960c-4215-ab98-29077f50c08a"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b83746d5-641b-40ef-9804-a8fb7ae9fb4f"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("a2f6ef18-44b0-476c-86f4-06a19fff80e1"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("b83746d5-641b-40ef-9804-a8fb7ae9fb4f"),
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Id = new Guid("1e93a09e-1d42-40c4-ae6e-a8971ef5f663"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("98f712a7-3847-46f7-90cc-2e3cb2348123"),
                            DepartmentId = new Guid("adb460f7-aa33-4efd-8346-9f3b76a0484b"),
                            Id = new Guid("252df49b-dd26-4a31-aa0a-1a0bbf90cc6f"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("98f712a7-3847-46f7-90cc-2e3cb2348123"),
                            DepartmentId = new Guid("934b3542-92d5-431c-9271-f39dedcac50f"),
                            Id = new Guid("dd268132-4b4c-4d4f-b599-8b4ff5ac91a9"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("98f712a7-3847-46f7-90cc-2e3cb2348123"),
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Id = new Guid("611ba8a9-3e62-4f93-814c-34887d31174d"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("98f712a7-3847-46f7-90cc-2e3cb2348123"),
                            DepartmentId = new Guid("67d181a2-ac85-4aaa-bcad-863b8695071b"),
                            Id = new Guid("94b6acfa-7225-4df2-bb2d-eb99e203e7a7"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("7d8960c2-ee10-4813-9522-106512a9b802"),
                            DepartmentId = new Guid("e35d862c-1f43-456b-a60b-1b2c7e44ab78"),
                            Id = new Guid("d483a375-8e79-4042-8724-68ff7cc9c33c"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("7d8960c2-ee10-4813-9522-106512a9b802"),
                            DepartmentId = new Guid("3a8a3b94-db19-44cb-91ae-a895fe50c498"),
                            Id = new Guid("dcf16f10-8db3-4f2e-9625-de864300b443"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6d35b512-5dcc-49af-9f26-29eddd7f475c"),
                            DepartmentId = new Guid("de305d54-75b4-431b-adb2-eb6b9e546013"),
                            Id = new Guid("254b48e7-a1d9-47a3-b2da-e237c4f85244"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6d35b512-5dcc-49af-9f26-29eddd7f475c"),
                            DepartmentId = new Guid("cbeac466-d627-466c-8300-6ee4d5505a20"),
                            Id = new Guid("e6ca6917-c81e-4b05-b1f6-a4bc81d25a20"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6d35b512-5dcc-49af-9f26-29eddd7f475c"),
                            DepartmentId = new Guid("b8034210-23fd-4af9-9d7f-f260a0cdef97"),
                            Id = new Guid("a8f151e5-5c82-45ab-81a6-fd407298145f"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        },
                        new
                        {
                            UniversityId = new Guid("6d35b512-5dcc-49af-9f26-29eddd7f475c"),
                            DepartmentId = new Guid("bf4524c1-1150-48f6-8c57-d922d925426f"),
                            Id = new Guid("5c33610f-8629-484a-a1ba-2f7ed31e61ab"),
                            IsDeleted = false,
                            RequiredScore = 0f
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<bool>("AllowMbti")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("GameToken")
                        .HasColumnType("integer");

                    b.Property<int?>("HighestScore")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0b84747-fbed-43e1-9cd1-ecf2e1bd3cc0"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student@gmail.com",
                            FirstName = "Nguyen",
                            GameToken = 0,
                            HighestScore = 10,
                            IsDeleted = false,
                            LastName = "Vu",
                            PasswordHash = new byte[] { 152, 238, 163, 247, 15, 182, 61, 79, 221, 63, 40, 252, 203, 213, 218, 143, 151, 131, 127, 255, 171, 251, 185, 208, 21, 129, 182, 166, 170, 186, 31, 181, 10, 41, 103, 58, 18, 140, 113, 49, 205, 57, 22, 225, 8, 217, 117, 117, 133, 80, 84, 129, 7, 65, 246, 124, 62, 84, 184, 117, 181, 147, 186, 91 },
                            PasswordSalt = new byte[] { 216, 168, 79, 216, 154, 17, 7, 122, 137, 142, 205, 95, 248, 187, 53, 72, 55, 196, 199, 254, 147, 125, 213, 42, 86, 41, 127, 93, 110, 188, 165, 183, 124, 140, 197, 16, 124, 146, 39, 108, 194, 225, 207, 87, 103, 216, 148, 238, 67, 94, 40, 255, 32, 167, 204, 135, 155, 151, 95, 61, 62, 216, 75, 119, 247, 35, 47, 132, 198, 236, 48, 45, 37, 180, 0, 42, 6, 6, 137, 107, 51, 78, 110, 26, 225, 99, 12, 18, 143, 56, 176, 243, 71, 140, 232, 239, 218, 116, 46, 95, 238, 86, 13, 195, 131, 3, 154, 2, 178, 38, 5, 230, 243, 43, 211, 19, 201, 139, 234, 35, 171, 42, 22, 46, 20, 138, 209, 150 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student1"
                        },
                        new
                        {
                            Id = new Guid("09d2d924-8c18-4e49-bbc4-f67c0204d7af"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student2@gmail.com",
                            FirstName = "Minh",
                            GameToken = 0,
                            HighestScore = 9,
                            IsDeleted = false,
                            LastName = "Vu",
                            PasswordHash = new byte[] { 50, 16, 230, 81, 143, 179, 106, 255, 113, 158, 46, 34, 141, 183, 60, 152, 120, 75, 25, 89, 12, 161, 177, 212, 31, 233, 118, 167, 135, 217, 64, 109, 232, 181, 203, 123, 176, 84, 56, 104, 120, 26, 43, 16, 69, 1, 134, 75, 230, 199, 196, 54, 105, 7, 255, 94, 145, 142, 252, 200, 136, 30, 40, 137 },
                            PasswordSalt = new byte[] { 164, 158, 238, 72, 210, 157, 250, 37, 145, 77, 127, 81, 22, 117, 45, 131, 200, 134, 253, 24, 204, 158, 61, 246, 164, 182, 120, 69, 218, 111, 170, 236, 136, 77, 106, 104, 116, 176, 128, 122, 87, 247, 143, 134, 138, 96, 189, 9, 173, 96, 236, 88, 228, 154, 100, 157, 220, 9, 144, 11, 11, 175, 153, 26, 38, 32, 217, 49, 132, 196, 42, 139, 147, 33, 117, 175, 203, 221, 217, 249, 203, 198, 31, 95, 98, 3, 10, 104, 55, 103, 130, 18, 39, 198, 171, 211, 1, 121, 1, 145, 90, 81, 119, 151, 238, 7, 241, 182, 188, 241, 162, 180, 150, 10, 5, 171, 25, 235, 4, 41, 144, 95, 172, 4, 36, 126, 218, 26 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student2"
                        },
                        new
                        {
                            Id = new Guid("5ddbd197-9ac9-42fb-bdfe-dee7dbe35efd"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student2@gmail.com",
                            FirstName = "Minh",
                            GameToken = 0,
                            HighestScore = 6,
                            IsDeleted = false,
                            LastName = "Duc",
                            PasswordHash = new byte[] { 154, 207, 69, 224, 14, 112, 109, 90, 72, 109, 133, 92, 29, 87, 136, 0, 37, 184, 248, 9, 135, 143, 128, 213, 187, 20, 147, 3, 34, 29, 57, 203, 162, 4, 14, 161, 27, 143, 20, 114, 188, 200, 39, 39, 59, 30, 123, 180, 83, 85, 189, 15, 90, 5, 133, 152, 200, 105, 229, 74, 7, 200, 26, 90 },
                            PasswordSalt = new byte[] { 126, 201, 245, 181, 121, 171, 194, 50, 118, 174, 217, 242, 217, 203, 189, 151, 31, 31, 134, 178, 5, 82, 107, 219, 7, 149, 115, 102, 182, 242, 149, 112, 45, 231, 1, 197, 188, 194, 49, 139, 5, 99, 146, 128, 108, 250, 58, 162, 163, 147, 86, 140, 63, 167, 97, 23, 73, 102, 95, 161, 160, 54, 206, 175, 189, 102, 126, 43, 217, 3, 196, 49, 108, 20, 68, 20, 29, 185, 217, 247, 209, 207, 219, 212, 0, 250, 207, 224, 50, 238, 160, 211, 28, 93, 101, 235, 184, 72, 141, 141, 58, 4, 16, 222, 95, 120, 152, 219, 18, 58, 147, 144, 171, 189, 212, 105, 81, 242, 86, 34, 153, 42, 92, 119, 95, 240, 186, 183 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student44334254"
                        },
                        new
                        {
                            Id = new Guid("f2dbff0f-0ccb-4cc3-91e3-d068431af710"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student3@gmail.com",
                            FirstName = "Minh",
                            GameToken = 0,
                            HighestScore = 7,
                            IsDeleted = false,
                            LastName = "Quan",
                            PasswordHash = new byte[] { 161, 113, 242, 51, 190, 49, 46, 210, 159, 239, 221, 34, 194, 75, 7, 126, 103, 3, 181, 181, 149, 181, 134, 61, 84, 51, 67, 187, 11, 189, 177, 224, 112, 116, 5, 179, 188, 66, 250, 62, 28, 248, 13, 237, 70, 228, 159, 66, 233, 219, 255, 21, 52, 103, 144, 25, 241, 158, 79, 197, 93, 193, 253, 156 },
                            PasswordSalt = new byte[] { 240, 39, 33, 28, 126, 61, 206, 68, 127, 19, 36, 225, 0, 115, 189, 207, 46, 220, 165, 138, 52, 121, 165, 106, 152, 163, 37, 92, 111, 68, 90, 197, 153, 110, 188, 78, 95, 72, 47, 46, 195, 214, 224, 235, 235, 126, 53, 234, 34, 200, 226, 7, 206, 79, 169, 152, 176, 188, 168, 193, 113, 204, 149, 98, 145, 168, 250, 14, 102, 182, 78, 242, 50, 35, 43, 140, 18, 124, 93, 19, 94, 4, 154, 67, 26, 171, 113, 10, 64, 121, 166, 163, 11, 231, 253, 249, 181, 98, 190, 161, 56, 207, 57, 197, 146, 178, 208, 209, 143, 85, 128, 184, 161, 84, 96, 132, 98, 176, 37, 73, 101, 81, 112, 166, 55, 246, 62, 156 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student3"
                        },
                        new
                        {
                            Id = new Guid("1a022b66-8b1c-461a-be8a-ec2a7b0741e9"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student4@gmail.com",
                            FirstName = "Minh",
                            GameToken = 0,
                            HighestScore = 6,
                            IsDeleted = false,
                            LastName = "Tam",
                            PasswordHash = new byte[] { 191, 114, 183, 46, 129, 168, 239, 158, 92, 240, 131, 202, 254, 190, 177, 148, 116, 51, 4, 198, 186, 204, 203, 52, 21, 217, 82, 125, 159, 66, 169, 56, 214, 215, 227, 145, 252, 35, 137, 39, 61, 135, 87, 255, 182, 12, 216, 95, 76, 202, 20, 32, 75, 92, 83, 148, 163, 252, 127, 33, 214, 123, 159, 107 },
                            PasswordSalt = new byte[] { 78, 39, 162, 212, 59, 25, 12, 218, 75, 9, 48, 244, 125, 8, 228, 231, 156, 158, 127, 62, 184, 41, 17, 150, 142, 50, 134, 229, 242, 93, 177, 208, 113, 82, 33, 135, 229, 183, 30, 37, 73, 132, 129, 13, 40, 142, 236, 93, 54, 10, 148, 169, 185, 123, 139, 150, 230, 107, 30, 45, 127, 147, 185, 243, 0, 191, 2, 46, 58, 197, 238, 10, 227, 26, 118, 244, 170, 177, 137, 141, 60, 161, 141, 54, 101, 245, 153, 57, 27, 77, 39, 109, 185, 62, 137, 80, 171, 252, 233, 135, 32, 114, 215, 151, 191, 212, 236, 179, 122, 91, 157, 181, 235, 149, 68, 11, 102, 41, 244, 214, 134, 9, 190, 223, 125, 139, 165, 28 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student4"
                        },
                        new
                        {
                            Id = new Guid("4c5d8bb2-b66c-49e7-982b-685ed23d1be8"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student5@gmail.com",
                            FirstName = "Trinh",
                            GameToken = 0,
                            HighestScore = 5,
                            IsDeleted = false,
                            LastName = "Tam",
                            PasswordHash = new byte[] { 115, 161, 60, 131, 31, 52, 230, 22, 177, 68, 224, 204, 109, 207, 49, 37, 106, 100, 57, 48, 117, 82, 114, 98, 31, 102, 47, 232, 245, 41, 13, 18, 207, 54, 201, 32, 67, 190, 203, 128, 112, 88, 105, 23, 44, 88, 202, 253, 159, 164, 76, 197, 89, 165, 10, 232, 205, 247, 116, 25, 187, 131, 84, 122 },
                            PasswordSalt = new byte[] { 143, 116, 172, 20, 1, 18, 111, 72, 109, 229, 246, 88, 134, 157, 209, 68, 235, 229, 215, 74, 109, 162, 32, 15, 78, 206, 168, 131, 237, 38, 214, 18, 34, 85, 14, 66, 243, 211, 160, 246, 84, 70, 244, 120, 175, 28, 150, 95, 200, 240, 157, 240, 166, 213, 85, 192, 248, 8, 254, 172, 21, 216, 156, 143, 171, 8, 45, 159, 111, 210, 12, 145, 232, 195, 227, 79, 101, 246, 128, 137, 69, 64, 160, 100, 53, 52, 161, 64, 124, 98, 74, 129, 59, 73, 106, 216, 194, 163, 205, 162, 188, 11, 164, 98, 247, 245, 239, 37, 31, 64, 11, 226, 132, 138, 56, 86, 143, 58, 255, 34, 108, 178, 166, 110, 200, 193, 126, 63 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student5"
                        },
                        new
                        {
                            Id = new Guid("324ed66e-e8de-4710-a139-18c50b442945"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student6@gmail.com",
                            FirstName = "Van",
                            GameToken = 0,
                            HighestScore = 4,
                            IsDeleted = false,
                            LastName = "Ba",
                            PasswordHash = new byte[] { 95, 115, 239, 68, 10, 70, 55, 119, 254, 151, 128, 91, 112, 30, 205, 49, 249, 233, 28, 114, 115, 27, 251, 172, 231, 239, 139, 239, 216, 80, 240, 182, 59, 177, 61, 37, 136, 144, 33, 37, 116, 21, 1, 134, 2, 175, 117, 206, 239, 95, 105, 232, 64, 238, 134, 174, 217, 123, 231, 200, 201, 28, 158, 205 },
                            PasswordSalt = new byte[] { 89, 42, 186, 140, 212, 134, 106, 95, 94, 175, 28, 238, 65, 216, 223, 224, 156, 177, 100, 122, 246, 74, 253, 234, 224, 217, 116, 72, 71, 72, 239, 145, 62, 171, 40, 171, 243, 160, 103, 252, 3, 253, 107, 144, 193, 55, 112, 55, 7, 45, 147, 51, 186, 114, 61, 187, 187, 29, 221, 162, 116, 90, 220, 111, 78, 198, 8, 127, 179, 149, 44, 174, 152, 218, 148, 81, 71, 136, 168, 103, 42, 219, 112, 10, 120, 236, 24, 26, 239, 231, 242, 204, 53, 187, 195, 196, 158, 227, 157, 118, 147, 206, 79, 211, 31, 109, 26, 218, 153, 54, 2, 22, 239, 224, 180, 86, 55, 89, 8, 38, 180, 128, 84, 132, 208, 116, 105, 186 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student6"
                        },
                        new
                        {
                            Id = new Guid("d406be20-d364-43c5-84bf-4d3e3be43ae0"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student7@gmail.com",
                            FirstName = "Van",
                            GameToken = 0,
                            HighestScore = 3,
                            IsDeleted = false,
                            LastName = "Hung",
                            PasswordHash = new byte[] { 178, 96, 226, 136, 96, 212, 175, 218, 227, 199, 131, 63, 197, 176, 45, 255, 218, 203, 58, 252, 65, 120, 204, 145, 196, 241, 217, 70, 190, 148, 229, 42, 243, 155, 76, 245, 242, 68, 106, 78, 117, 143, 88, 134, 120, 220, 147, 141, 98, 236, 234, 107, 76, 163, 53, 244, 60, 250, 242, 23, 117, 150, 76, 117 },
                            PasswordSalt = new byte[] { 95, 213, 98, 229, 38, 244, 28, 32, 240, 43, 202, 112, 88, 134, 78, 127, 166, 198, 184, 98, 75, 229, 65, 181, 235, 149, 79, 120, 190, 111, 113, 190, 65, 91, 184, 189, 74, 234, 192, 238, 72, 172, 135, 93, 104, 139, 161, 36, 43, 166, 88, 102, 202, 60, 92, 54, 9, 247, 156, 77, 23, 121, 15, 35, 32, 45, 8, 249, 239, 80, 174, 71, 162, 186, 8, 222, 70, 19, 223, 99, 246, 9, 90, 130, 235, 28, 56, 130, 247, 143, 110, 104, 206, 47, 164, 234, 222, 7, 120, 201, 88, 179, 235, 102, 241, 102, 60, 215, 10, 173, 178, 194, 240, 156, 40, 133, 144, 49, 82, 241, 14, 248, 125, 71, 208, 195, 216, 117 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student7"
                        },
                        new
                        {
                            Id = new Guid("312f4251-1f9f-4f80-b2ad-968fc339b134"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student8@gmail.com",
                            FirstName = "Ly",
                            GameToken = 0,
                            HighestScore = 2,
                            IsDeleted = false,
                            LastName = "Hung",
                            PasswordHash = new byte[] { 158, 158, 129, 35, 87, 141, 205, 242, 217, 136, 66, 39, 152, 230, 161, 59, 241, 69, 132, 233, 3, 201, 73, 11, 22, 34, 138, 104, 64, 109, 152, 160, 212, 112, 215, 94, 39, 147, 88, 108, 37, 235, 220, 236, 228, 28, 65, 207, 232, 172, 211, 108, 167, 44, 202, 218, 246, 10, 111, 190, 94, 130, 234, 237 },
                            PasswordSalt = new byte[] { 249, 189, 65, 106, 176, 109, 105, 244, 114, 38, 82, 96, 236, 180, 59, 67, 234, 89, 187, 91, 29, 113, 231, 3, 229, 179, 4, 207, 70, 27, 117, 182, 194, 199, 66, 49, 62, 86, 12, 106, 190, 128, 12, 34, 252, 50, 226, 76, 241, 119, 5, 68, 171, 46, 181, 76, 175, 168, 172, 122, 12, 174, 53, 66, 253, 250, 101, 228, 110, 75, 204, 152, 26, 243, 71, 134, 234, 86, 45, 219, 20, 203, 170, 141, 184, 41, 174, 84, 232, 220, 140, 213, 101, 193, 208, 226, 98, 151, 1, 35, 168, 100, 70, 238, 139, 33, 113, 67, 243, 151, 84, 21, 236, 134, 14, 119, 192, 41, 252, 232, 189, 73, 165, 121, 194, 31, 60, 159 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student8"
                        },
                        new
                        {
                            Id = new Guid("84a7c64a-feed-4fb2-8b1e-24e10aa382b2"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student9@gmail.com",
                            FirstName = "Ly",
                            GameToken = 0,
                            HighestScore = 1,
                            IsDeleted = false,
                            LastName = "Lac",
                            PasswordHash = new byte[] { 178, 43, 15, 27, 74, 69, 200, 175, 116, 203, 53, 103, 68, 92, 72, 55, 71, 19, 43, 65, 255, 17, 255, 190, 115, 139, 104, 173, 106, 168, 135, 166, 202, 4, 235, 188, 64, 65, 156, 172, 247, 50, 164, 167, 30, 59, 108, 195, 52, 225, 255, 96, 132, 28, 166, 2, 73, 51, 155, 250, 104, 52, 226, 149 },
                            PasswordSalt = new byte[] { 76, 76, 198, 51, 250, 213, 168, 65, 54, 166, 94, 166, 155, 213, 49, 21, 54, 247, 35, 91, 116, 149, 110, 47, 210, 158, 40, 177, 86, 119, 221, 141, 20, 146, 146, 106, 210, 166, 59, 110, 218, 154, 37, 51, 22, 40, 109, 255, 52, 33, 205, 112, 239, 57, 171, 150, 222, 139, 60, 233, 181, 100, 110, 53, 198, 2, 252, 231, 104, 150, 123, 161, 106, 211, 37, 47, 75, 116, 30, 210, 86, 239, 79, 61, 223, 161, 116, 254, 133, 159, 63, 100, 38, 239, 19, 129, 163, 153, 197, 19, 77, 183, 11, 103, 158, 147, 41, 168, 155, 18, 118, 191, 76, 118, 155, 237, 109, 183, 154, 106, 200, 173, 203, 156, 209, 72, 142, 145 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student9"
                        },
                        new
                        {
                            Id = new Guid("cb235a17-fd24-48cf-ba34-ac5ac698a832"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student10@gmail.com",
                            FirstName = "Tran",
                            GameToken = 0,
                            HighestScore = 9,
                            IsDeleted = false,
                            LastName = "Hong",
                            PasswordHash = new byte[] { 180, 74, 177, 65, 73, 169, 68, 126, 161, 184, 66, 224, 115, 111, 131, 65, 63, 239, 183, 136, 98, 159, 44, 201, 99, 146, 54, 98, 42, 73, 125, 61, 80, 75, 80, 222, 15, 251, 210, 143, 133, 191, 140, 137, 97, 199, 154, 161, 224, 69, 56, 255, 100, 234, 28, 146, 169, 209, 7, 182, 225, 217, 150, 175 },
                            PasswordSalt = new byte[] { 117, 64, 63, 131, 215, 80, 248, 121, 112, 199, 3, 90, 84, 152, 152, 43, 41, 63, 122, 156, 44, 11, 60, 111, 196, 18, 73, 66, 37, 207, 191, 129, 157, 68, 172, 185, 59, 152, 131, 22, 179, 80, 67, 30, 174, 212, 33, 60, 230, 247, 7, 221, 74, 58, 124, 38, 239, 110, 4, 212, 118, 247, 117, 43, 123, 5, 250, 3, 127, 252, 40, 227, 69, 12, 128, 85, 234, 16, 160, 18, 88, 242, 188, 18, 170, 190, 80, 64, 197, 171, 18, 253, 135, 58, 99, 18, 255, 8, 47, 91, 240, 211, 26, 226, 48, 213, 41, 90, 126, 190, 164, 133, 52, 30, 126, 169, 222, 82, 110, 222, 144, 182, 83, 164, 214, 145, 224, 41 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student10"
                        },
                        new
                        {
                            Id = new Guid("6d6ad990-1ff2-445b-8496-d766048e25cf"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student11@gmail.com",
                            FirstName = "Nhan",
                            GameToken = 0,
                            HighestScore = 10,
                            IsDeleted = false,
                            LastName = "Hong",
                            PasswordHash = new byte[] { 217, 194, 48, 133, 114, 0, 85, 27, 174, 10, 112, 204, 25, 217, 59, 10, 245, 96, 158, 162, 172, 132, 161, 170, 77, 31, 92, 132, 191, 36, 73, 130, 77, 119, 96, 25, 105, 197, 202, 84, 83, 114, 70, 117, 188, 183, 146, 180, 90, 108, 13, 62, 168, 149, 179, 171, 245, 10, 206, 13, 97, 142, 24, 22 },
                            PasswordSalt = new byte[] { 39, 184, 40, 17, 88, 115, 222, 134, 126, 16, 75, 200, 172, 221, 94, 38, 73, 94, 206, 77, 106, 58, 68, 195, 73, 20, 243, 227, 99, 29, 176, 11, 22, 170, 88, 140, 200, 179, 49, 37, 217, 49, 165, 252, 163, 185, 70, 202, 237, 192, 128, 170, 174, 239, 182, 210, 30, 26, 244, 187, 146, 16, 9, 200, 127, 185, 115, 81, 207, 220, 158, 2, 10, 14, 185, 27, 161, 85, 132, 221, 168, 155, 23, 40, 111, 215, 98, 168, 175, 163, 239, 137, 221, 96, 131, 119, 253, 160, 123, 162, 195, 62, 79, 41, 46, 91, 10, 184, 176, 145, 115, 45, 146, 151, 187, 98, 48, 139, 201, 147, 54, 181, 201, 104, 29, 44, 112, 210 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student11"
                        },
                        new
                        {
                            Id = new Guid("e798134f-8d1b-41aa-98c1-c8914240366d"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student12@gmail.com",
                            FirstName = "Nhan",
                            GameToken = 0,
                            HighestScore = 7,
                            IsDeleted = false,
                            LastName = "Chia",
                            PasswordHash = new byte[] { 159, 42, 62, 164, 245, 251, 109, 238, 25, 212, 39, 100, 92, 39, 24, 165, 82, 87, 251, 163, 162, 245, 130, 33, 71, 222, 254, 69, 236, 151, 160, 64, 255, 104, 251, 57, 42, 152, 5, 172, 169, 106, 47, 32, 18, 8, 109, 3, 94, 115, 120, 255, 11, 134, 66, 143, 231, 123, 138, 221, 83, 70, 1, 240 },
                            PasswordSalt = new byte[] { 60, 96, 208, 67, 202, 182, 86, 47, 155, 35, 185, 3, 164, 164, 54, 58, 62, 103, 136, 201, 201, 151, 201, 139, 141, 127, 186, 109, 220, 206, 128, 143, 242, 231, 127, 115, 68, 4, 249, 176, 40, 147, 90, 91, 110, 247, 21, 119, 193, 5, 228, 64, 254, 136, 6, 224, 9, 141, 170, 9, 229, 190, 229, 232, 102, 249, 244, 46, 225, 110, 231, 68, 108, 132, 67, 149, 16, 119, 108, 86, 81, 66, 64, 144, 44, 74, 29, 251, 66, 49, 7, 129, 12, 222, 137, 197, 204, 126, 102, 238, 235, 113, 202, 109, 58, 188, 118, 25, 67, 34, 223, 129, 183, 97, 61, 243, 75, 141, 5, 148, 150, 168, 219, 237, 92, 59, 186, 105 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student12"
                        },
                        new
                        {
                            Id = new Guid("8f744e72-da12-4038-a54e-7512a0ada884"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student13@gmail.com",
                            FirstName = "Huan",
                            GameToken = 0,
                            HighestScore = 8,
                            IsDeleted = false,
                            LastName = "Hoe",
                            PasswordHash = new byte[] { 5, 238, 11, 217, 238, 46, 248, 3, 120, 103, 206, 70, 183, 234, 182, 205, 179, 106, 194, 65, 123, 6, 187, 216, 254, 158, 246, 157, 178, 26, 141, 24, 13, 29, 213, 246, 196, 226, 183, 29, 205, 230, 142, 89, 217, 189, 248, 245, 55, 29, 52, 9, 222, 208, 29, 58, 151, 17, 93, 238, 229, 37, 28, 96 },
                            PasswordSalt = new byte[] { 139, 51, 2, 31, 127, 121, 180, 149, 52, 110, 207, 131, 12, 141, 129, 166, 212, 227, 118, 54, 186, 8, 50, 118, 36, 174, 4, 207, 147, 121, 63, 200, 119, 112, 248, 14, 152, 150, 161, 226, 246, 117, 188, 224, 116, 239, 244, 7, 182, 109, 3, 83, 49, 88, 16, 118, 59, 90, 194, 211, 19, 151, 104, 107, 67, 139, 165, 96, 132, 242, 143, 252, 220, 162, 88, 64, 105, 39, 28, 9, 110, 35, 24, 203, 149, 31, 153, 157, 20, 74, 162, 92, 26, 62, 79, 65, 25, 255, 42, 92, 57, 58, 215, 112, 221, 250, 3, 170, 130, 24, 136, 50, 51, 188, 157, 151, 35, 29, 167, 211, 127, 176, 12, 23, 128, 24, 171, 158 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student13"
                        },
                        new
                        {
                            Id = new Guid("24d15338-310e-4d3d-9e39-86444fc0ddec"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student14@gmail.com",
                            FirstName = "Cook",
                            GameToken = 0,
                            HighestScore = 1,
                            IsDeleted = false,
                            LastName = "Lee",
                            PasswordHash = new byte[] { 93, 179, 153, 157, 0, 209, 189, 218, 153, 181, 22, 19, 145, 143, 85, 42, 155, 58, 179, 116, 34, 143, 245, 28, 23, 93, 106, 102, 91, 14, 234, 223, 137, 24, 11, 48, 11, 88, 68, 20, 28, 201, 212, 36, 122, 26, 247, 33, 201, 53, 230, 132, 41, 107, 122, 77, 178, 152, 106, 231, 247, 238, 225, 58 },
                            PasswordSalt = new byte[] { 105, 25, 177, 19, 249, 141, 177, 12, 183, 224, 119, 136, 61, 111, 119, 195, 208, 74, 38, 154, 61, 240, 8, 25, 140, 131, 125, 208, 203, 64, 227, 229, 27, 107, 178, 99, 164, 149, 213, 244, 172, 17, 45, 47, 131, 60, 178, 148, 81, 205, 42, 129, 21, 111, 201, 97, 72, 35, 98, 117, 247, 133, 77, 245, 37, 112, 246, 12, 197, 83, 211, 51, 106, 213, 27, 29, 254, 141, 90, 128, 6, 232, 1, 106, 64, 234, 43, 255, 109, 206, 67, 62, 54, 20, 201, 96, 19, 182, 84, 217, 35, 108, 202, 33, 47, 56, 175, 107, 241, 215, 112, 194, 252, 38, 7, 153, 140, 98, 90, 67, 236, 128, 36, 236, 138, 42, 166, 31 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student14"
                        },
                        new
                        {
                            Id = new Guid("1eff27be-f2ea-4df7-93a5-33c7ba5e2d98"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student15@gmail.com",
                            FirstName = "Trinh",
                            GameToken = 0,
                            HighestScore = 1,
                            IsDeleted = false,
                            LastName = "Quan",
                            PasswordHash = new byte[] { 243, 36, 112, 51, 11, 12, 76, 157, 233, 1, 179, 69, 124, 87, 122, 190, 232, 100, 51, 175, 242, 113, 190, 247, 124, 74, 122, 178, 148, 144, 32, 62, 240, 231, 21, 9, 111, 229, 18, 151, 236, 19, 211, 138, 149, 149, 47, 103, 145, 143, 80, 240, 113, 233, 228, 16, 201, 203, 133, 173, 83, 90, 8, 143 },
                            PasswordSalt = new byte[] { 66, 202, 122, 29, 212, 249, 131, 200, 81, 144, 21, 21, 158, 36, 19, 48, 36, 248, 8, 45, 161, 110, 161, 114, 145, 178, 173, 108, 182, 18, 196, 5, 126, 10, 68, 151, 158, 231, 88, 187, 94, 88, 226, 36, 255, 119, 37, 49, 186, 32, 20, 113, 46, 71, 86, 170, 108, 91, 157, 234, 171, 51, 86, 154, 134, 104, 237, 202, 45, 176, 4, 13, 248, 4, 65, 114, 3, 118, 43, 3, 220, 38, 122, 86, 223, 220, 150, 74, 176, 12, 212, 53, 223, 59, 133, 60, 202, 76, 69, 190, 41, 217, 220, 89, 140, 93, 14, 230, 118, 56, 27, 237, 87, 52, 30, 194, 85, 225, 174, 195, 211, 211, 92, 66, 63, 172, 36, 39 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student15"
                        },
                        new
                        {
                            Id = new Guid("99c5faa8-d3fe-45b3-a871-86117ef93111"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student16@gmail.com",
                            FirstName = "Trinh",
                            GameToken = 0,
                            HighestScore = 5,
                            IsDeleted = false,
                            LastName = "Trong",
                            PasswordHash = new byte[] { 232, 15, 156, 191, 144, 23, 76, 85, 151, 214, 152, 214, 172, 188, 105, 130, 156, 81, 160, 166, 245, 93, 189, 31, 129, 32, 234, 43, 120, 172, 73, 66, 93, 240, 238, 199, 248, 1, 92, 48, 174, 235, 216, 107, 59, 209, 12, 181, 251, 254, 124, 70, 217, 78, 195, 255, 192, 128, 244, 152, 42, 235, 165, 231 },
                            PasswordSalt = new byte[] { 41, 237, 47, 113, 105, 124, 88, 126, 166, 199, 216, 6, 153, 6, 41, 74, 50, 27, 226, 90, 113, 215, 139, 241, 69, 35, 253, 215, 14, 72, 10, 214, 237, 116, 97, 106, 105, 131, 103, 127, 82, 42, 131, 124, 142, 174, 222, 226, 166, 219, 56, 122, 126, 245, 18, 77, 40, 84, 2, 12, 202, 240, 206, 248, 42, 71, 63, 219, 53, 110, 160, 72, 83, 215, 152, 40, 114, 88, 28, 85, 58, 149, 90, 171, 88, 173, 246, 176, 1, 69, 201, 46, 105, 148, 255, 136, 69, 123, 140, 159, 227, 95, 239, 188, 52, 144, 129, 198, 163, 100, 100, 187, 129, 232, 60, 169, 118, 105, 204, 209, 37, 198, 75, 33, 191, 189, 233, 123 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student16"
                        },
                        new
                        {
                            Id = new Guid("5b670b4c-a8dc-4cca-8d2b-0bb45d69a702"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student17@gmail.com",
                            FirstName = "Kim",
                            GameToken = 0,
                            HighestScore = 1,
                            IsDeleted = false,
                            LastName = "Trong",
                            PasswordHash = new byte[] { 217, 243, 2, 213, 106, 181, 106, 0, 145, 255, 114, 109, 202, 167, 88, 123, 122, 90, 111, 201, 32, 125, 167, 41, 152, 31, 154, 118, 27, 185, 71, 168, 171, 207, 203, 36, 193, 240, 63, 34, 120, 54, 30, 229, 186, 180, 51, 33, 171, 148, 166, 225, 2, 92, 228, 216, 232, 252, 114, 65, 143, 79, 181, 216 },
                            PasswordSalt = new byte[] { 145, 161, 228, 85, 231, 198, 248, 181, 192, 174, 144, 159, 211, 212, 86, 94, 59, 21, 238, 60, 236, 97, 248, 237, 197, 172, 201, 161, 106, 13, 115, 1, 58, 69, 17, 232, 172, 140, 69, 141, 120, 94, 228, 244, 74, 4, 144, 98, 70, 150, 86, 210, 225, 75, 63, 77, 25, 165, 122, 6, 40, 133, 163, 120, 43, 252, 187, 173, 103, 122, 84, 178, 144, 232, 112, 189, 221, 97, 162, 10, 47, 66, 66, 142, 186, 239, 79, 193, 116, 12, 7, 247, 153, 73, 168, 70, 196, 86, 89, 96, 239, 40, 94, 66, 125, 186, 166, 244, 4, 19, 164, 120, 73, 232, 200, 82, 186, 30, 97, 117, 157, 118, 52, 16, 5, 254, 40, 245 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student17"
                        },
                        new
                        {
                            Id = new Guid("c30d316f-9c93-42c9-8e72-0b3efa896192"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student18@gmail.com",
                            FirstName = "Kim",
                            GameToken = 0,
                            HighestScore = 10,
                            IsDeleted = false,
                            LastName = "Ly",
                            PasswordHash = new byte[] { 221, 79, 4, 168, 173, 191, 48, 156, 39, 70, 107, 86, 182, 145, 21, 91, 131, 119, 241, 64, 100, 132, 204, 51, 154, 117, 216, 54, 42, 1, 234, 66, 188, 195, 59, 162, 197, 151, 21, 23, 199, 255, 226, 43, 236, 107, 156, 92, 109, 42, 130, 91, 95, 249, 62, 131, 201, 61, 177, 63, 21, 53, 192, 90 },
                            PasswordSalt = new byte[] { 23, 2, 124, 132, 92, 116, 204, 180, 134, 229, 4, 28, 155, 211, 35, 36, 95, 216, 238, 29, 232, 115, 232, 191, 211, 45, 115, 68, 78, 147, 196, 244, 58, 77, 124, 140, 17, 95, 37, 175, 86, 84, 207, 202, 123, 179, 187, 156, 163, 190, 184, 231, 144, 231, 71, 140, 88, 219, 38, 136, 63, 169, 148, 34, 144, 218, 222, 157, 168, 6, 45, 74, 74, 44, 55, 147, 98, 218, 32, 106, 94, 108, 13, 35, 205, 56, 98, 159, 146, 161, 5, 230, 84, 200, 32, 50, 119, 35, 60, 121, 161, 61, 147, 27, 236, 160, 42, 209, 131, 122, 70, 73, 214, 67, 216, 148, 83, 140, 169, 85, 5, 43, 61, 243, 213, 240, 117, 163 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student18"
                        },
                        new
                        {
                            Id = new Guid("666bc14a-4078-4619-85f1-bc63033c556f"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student19@gmail.com",
                            FirstName = "Cach",
                            GameToken = 0,
                            HighestScore = 2,
                            IsDeleted = false,
                            LastName = "Ly",
                            PasswordHash = new byte[] { 188, 181, 8, 96, 140, 109, 165, 131, 238, 188, 9, 211, 10, 105, 171, 101, 241, 209, 232, 96, 22, 77, 167, 62, 90, 93, 24, 37, 74, 166, 105, 248, 143, 104, 7, 238, 179, 84, 77, 243, 241, 185, 243, 200, 11, 205, 147, 1, 81, 200, 239, 90, 178, 75, 242, 4, 31, 220, 120, 162, 233, 232, 51, 67 },
                            PasswordSalt = new byte[] { 11, 57, 136, 62, 230, 96, 26, 160, 147, 225, 1, 221, 87, 226, 120, 157, 101, 118, 14, 81, 32, 184, 239, 175, 126, 144, 3, 34, 155, 16, 153, 51, 234, 100, 224, 31, 213, 245, 89, 190, 51, 250, 243, 131, 197, 203, 145, 231, 118, 252, 155, 66, 17, 69, 136, 101, 195, 100, 66, 72, 191, 247, 189, 253, 142, 51, 22, 211, 188, 235, 26, 167, 1, 215, 250, 221, 220, 112, 232, 235, 251, 246, 78, 172, 82, 5, 242, 36, 253, 253, 44, 119, 72, 247, 63, 156, 111, 128, 215, 38, 70, 169, 252, 118, 30, 8, 96, 126, 191, 33, 85, 214, 214, 243, 147, 27, 44, 112, 238, 240, 220, 160, 124, 90, 255, 12, 205, 36 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student19"
                        },
                        new
                        {
                            Id = new Guid("96e0097f-ce73-4950-8ee2-89b313581154"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student20@gmail.com",
                            FirstName = "Biet",
                            GameToken = 0,
                            HighestScore = 3,
                            IsDeleted = false,
                            LastName = "Ly",
                            PasswordHash = new byte[] { 12, 192, 238, 27, 42, 185, 156, 109, 231, 165, 202, 82, 23, 14, 251, 251, 30, 88, 187, 146, 124, 151, 149, 139, 129, 193, 98, 233, 79, 158, 223, 55, 150, 224, 200, 175, 193, 41, 171, 175, 223, 73, 64, 180, 192, 212, 210, 224, 176, 229, 182, 38, 31, 147, 6, 8, 45, 152, 3, 14, 97, 165, 230, 207 },
                            PasswordSalt = new byte[] { 33, 55, 221, 148, 55, 48, 146, 70, 139, 222, 104, 146, 140, 182, 44, 214, 44, 16, 36, 179, 180, 10, 54, 30, 196, 157, 178, 200, 188, 30, 35, 233, 22, 147, 158, 61, 95, 214, 136, 58, 124, 159, 128, 82, 200, 50, 214, 201, 4, 182, 9, 97, 85, 209, 171, 9, 200, 77, 178, 126, 99, 129, 93, 138, 104, 202, 221, 233, 120, 41, 254, 160, 149, 234, 180, 72, 143, 90, 129, 253, 14, 41, 23, 159, 35, 12, 180, 23, 198, 238, 192, 51, 2, 3, 25, 0, 161, 217, 198, 238, 80, 124, 19, 199, 240, 121, 161, 6, 20, 10, 194, 225, 68, 212, 172, 123, 178, 163, 99, 218, 62, 99, 149, 58, 138, 125, 160, 198 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student20"
                        },
                        new
                        {
                            Id = new Guid("c5eacfa9-ec87-4150-bedc-ca141458b5a3"),
                            Address = "Tran quoc toan",
                            AllowMbti = false,
                            Email = "student21@gmail.com",
                            FirstName = "Bien",
                            GameToken = 0,
                            HighestScore = 4,
                            IsDeleted = false,
                            LastName = "Ly",
                            PasswordHash = new byte[] { 138, 107, 199, 140, 107, 80, 148, 184, 172, 192, 199, 151, 216, 160, 64, 112, 66, 105, 134, 213, 157, 225, 128, 191, 128, 133, 125, 94, 131, 211, 157, 33, 78, 233, 198, 141, 73, 53, 217, 118, 178, 242, 180, 120, 11, 101, 181, 73, 150, 216, 90, 229, 199, 93, 207, 84, 82, 74, 65, 195, 47, 12, 179, 243 },
                            PasswordSalt = new byte[] { 108, 47, 110, 155, 87, 70, 115, 197, 203, 150, 51, 43, 139, 90, 30, 17, 3, 40, 58, 90, 224, 138, 249, 45, 98, 117, 216, 115, 42, 130, 41, 15, 128, 214, 249, 12, 236, 199, 213, 65, 187, 252, 201, 37, 132, 192, 164, 39, 185, 209, 34, 94, 153, 29, 229, 176, 255, 224, 188, 153, 154, 255, 202, 90, 222, 224, 77, 52, 132, 33, 3, 61, 215, 140, 66, 70, 64, 72, 45, 3, 50, 229, 106, 33, 92, 117, 253, 238, 19, 205, 139, 138, 138, 10, 2, 182, 161, 43, 221, 202, 173, 188, 154, 144, 6, 40, 102, 243, 49, 163, 101, 104, 208, 220, 145, 180, 209, 63, 2, 54, 175, 117, 55, 88, 157, 100, 161, 5 },
                            PhoneNumber = "1234567890",
                            Role = 1,
                            UserName = "student21"
                        },
                        new
                        {
                            Id = new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                            Address = "tran quoc toan",
                            AllowMbti = false,
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            GameToken = 0,
                            IsDeleted = false,
                            LastName = "admin",
                            PasswordHash = new byte[] { 118, 84, 167, 27, 179, 248, 100, 192, 185, 116, 66, 3, 232, 234, 170, 187, 143, 198, 248, 138, 122, 82, 63, 82, 195, 42, 193, 33, 125, 26, 25, 227, 130, 78, 180, 241, 59, 190, 149, 1, 78, 9, 6, 176, 208, 45, 190, 72, 50, 62, 15, 190, 161, 99, 178, 144, 100, 181, 138, 67, 90, 168, 192, 245 },
                            PasswordSalt = new byte[] { 190, 195, 183, 181, 149, 228, 121, 164, 37, 173, 136, 244, 135, 122, 94, 82, 249, 40, 166, 105, 105, 158, 173, 213, 238, 17, 90, 129, 111, 97, 170, 160, 12, 202, 252, 68, 255, 62, 69, 110, 252, 100, 229, 246, 254, 68, 2, 178, 182, 100, 182, 69, 59, 155, 222, 202, 109, 37, 104, 107, 190, 157, 200, 147, 162, 183, 181, 188, 168, 54, 200, 94, 153, 108, 102, 182, 250, 57, 91, 101, 38, 223, 68, 120, 96, 141, 210, 30, 59, 149, 4, 103, 193, 0, 84, 86, 186, 68, 67, 248, 25, 153, 183, 44, 209, 222, 84, 121, 185, 225, 52, 227, 227, 93, 90, 18, 148, 238, 126, 197, 113, 178, 44, 121, 254, 93, 24, 145 },
                            PhoneNumber = "1234567890",
                            Role = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Domain.Models.Attempt", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Attempts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.AttemptDetail", b =>
                {
                    b.HasOne("Domain.Models.Attempt", "Attempt")
                        .WithMany("AttemptDetails")
                        .HasForeignKey("AttemptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.ExaminationQuestion", "ExaminationQuestion")
                        .WithMany("AttemptDetails")
                        .HasForeignKey("ExaminationQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attempt");

                    b.Navigation("ExaminationQuestion");
                });

            modelBuilder.Entity("Domain.Models.ExaminationQuestion", b =>
                {
                    b.HasOne("Domain.Models.Examination", "Examination")
                        .WithMany("ExaminationQuestions")
                        .HasForeignKey("ExaminationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Question", "Question")
                        .WithMany("ExaminationQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examination");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Domain.Models.GroupDepartment", b =>
                {
                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany("GroupDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Group", "Group")
                        .WithMany("GroupDepartments")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Domain.Models.MBTI_Department", b =>
                {
                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany("MBTI_Departments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.MBTI", "MBTI")
                        .WithMany("MBTI_Departments")
                        .HasForeignKey("MBTI_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("MBTI");
                });

            modelBuilder.Entity("Domain.Models.MBTI_ExamQuestion", b =>
                {
                    b.HasOne("Domain.Models.MBTI_Exam", "MBTI_Exam")
                        .WithMany("MBTI_ExamQuestions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.MBTI_Question", "MBTI_Question")
                        .WithMany("MBTI_ExamQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MBTI_Exam");

                    b.Navigation("MBTI_Question");
                });

            modelBuilder.Entity("Domain.Models.MBTI_UserRecord", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("MBTI_UserRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Major", b =>
                {
                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany("Majors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Models.Question", b =>
                {
                    b.HasOne("Domain.Models.Topic", "Topic")
                        .WithMany("Questions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Domain.Models.RecordDetail", b =>
                {
                    b.HasOne("Domain.Models.MBTI_ExamQuestion", "MBTI_ExamQuestion")
                        .WithMany("RecordDetails")
                        .HasForeignKey("MBTI_ExamQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.MBTI_UserRecord", "MBTI_UserRecord")
                        .WithMany("RecordDetails")
                        .HasForeignKey("UserRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MBTI_ExamQuestion");

                    b.Navigation("MBTI_UserRecord");
                });

            modelBuilder.Entity("Domain.Models.StudentPurchased", b =>
                {
                    b.HasOne("Domain.Models.Examination", "Examination")
                        .WithMany("StudentPurchaseds")
                        .HasForeignKey("ExaminationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("StudentPurchaseds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examination");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.SubjectGroup", b =>
                {
                    b.HasOne("Domain.Models.Group", "Group")
                        .WithMany("SubjectGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subject", "Subject")
                        .WithMany("SubjectGroups")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Domain.Models.Topic", b =>
                {
                    b.HasOne("Domain.Models.Subject", "Subject")
                        .WithMany("Topics")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Domain.Models.Transaction", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UniversityDepartment", b =>
                {
                    b.HasOne("Domain.Models.Department", "Department")
                        .WithMany("UniversityDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.University", "University")
                        .WithMany("UniversityDepartments")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Domain.Models.Attempt", b =>
                {
                    b.Navigation("AttemptDetails");
                });

            modelBuilder.Entity("Domain.Models.Department", b =>
                {
                    b.Navigation("GroupDepartments");

                    b.Navigation("MBTI_Departments");

                    b.Navigation("Majors");

                    b.Navigation("UniversityDepartments");
                });

            modelBuilder.Entity("Domain.Models.Examination", b =>
                {
                    b.Navigation("ExaminationQuestions");

                    b.Navigation("StudentPurchaseds");
                });

            modelBuilder.Entity("Domain.Models.ExaminationQuestion", b =>
                {
                    b.Navigation("AttemptDetails");
                });

            modelBuilder.Entity("Domain.Models.Group", b =>
                {
                    b.Navigation("GroupDepartments");

                    b.Navigation("SubjectGroups");
                });

            modelBuilder.Entity("Domain.Models.MBTI", b =>
                {
                    b.Navigation("MBTI_Departments");
                });

            modelBuilder.Entity("Domain.Models.MBTI_Exam", b =>
                {
                    b.Navigation("MBTI_ExamQuestions");
                });

            modelBuilder.Entity("Domain.Models.MBTI_ExamQuestion", b =>
                {
                    b.Navigation("RecordDetails");
                });

            modelBuilder.Entity("Domain.Models.MBTI_Question", b =>
                {
                    b.Navigation("MBTI_ExamQuestions");
                });

            modelBuilder.Entity("Domain.Models.MBTI_UserRecord", b =>
                {
                    b.Navigation("RecordDetails");
                });

            modelBuilder.Entity("Domain.Models.Question", b =>
                {
                    b.Navigation("ExaminationQuestions");
                });

            modelBuilder.Entity("Domain.Models.Subject", b =>
                {
                    b.Navigation("SubjectGroups");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("Domain.Models.Topic", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Domain.Models.University", b =>
                {
                    b.Navigation("UniversityDepartments");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Attempts");

                    b.Navigation("MBTI_UserRecords");

                    b.Navigation("StudentPurchaseds");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
