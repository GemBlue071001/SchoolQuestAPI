using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApplicationContext.Migrations
{
    /// <inheritdoc />
    public partial class StudentPurchased : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<bool>(
                name: "AllowMbti",
                table: "Users",
                type: "boolean",
                nullable: false,
                defaultValue: false);

            migrationBuilder.CreateTable(
                name: "StudentPurchased",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    UserId = table.Column<Guid>(type: "uuid", nullable: false),
                    ExaminationId = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StudentPurchased", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StudentPurchased_Examinations_ExaminationId",
                        column: x => x.ExaminationId,
                        principalTable: "Examinations",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_StudentPurchased_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Attempts",
                keyColumn: "Id",
                keyValue: new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                columns: new[] { "CreatedDate", "ExamDate" },
                values: new object[] { new DateTime(2024, 1, 5, 17, 42, 7, 383, DateTimeKind.Utc).AddTicks(2236), new DateTime(2024, 1, 6, 17, 42, 7, 383, DateTimeKind.Utc).AddTicks(2241) });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("09d2d924-8c18-4e49-bbc4-f67c0204d7af"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 50, 16, 230, 81, 143, 179, 106, 255, 113, 158, 46, 34, 141, 183, 60, 152, 120, 75, 25, 89, 12, 161, 177, 212, 31, 233, 118, 167, 135, 217, 64, 109, 232, 181, 203, 123, 176, 84, 56, 104, 120, 26, 43, 16, 69, 1, 134, 75, 230, 199, 196, 54, 105, 7, 255, 94, 145, 142, 252, 200, 136, 30, 40, 137 }, new byte[] { 164, 158, 238, 72, 210, 157, 250, 37, 145, 77, 127, 81, 22, 117, 45, 131, 200, 134, 253, 24, 204, 158, 61, 246, 164, 182, 120, 69, 218, 111, 170, 236, 136, 77, 106, 104, 116, 176, 128, 122, 87, 247, 143, 134, 138, 96, 189, 9, 173, 96, 236, 88, 228, 154, 100, 157, 220, 9, 144, 11, 11, 175, 153, 26, 38, 32, 217, 49, 132, 196, 42, 139, 147, 33, 117, 175, 203, 221, 217, 249, 203, 198, 31, 95, 98, 3, 10, 104, 55, 103, 130, 18, 39, 198, 171, 211, 1, 121, 1, 145, 90, 81, 119, 151, 238, 7, 241, 182, 188, 241, 162, 180, 150, 10, 5, 171, 25, 235, 4, 41, 144, 95, 172, 4, 36, 126, 218, 26 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1a022b66-8b1c-461a-be8a-ec2a7b0741e9"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 191, 114, 183, 46, 129, 168, 239, 158, 92, 240, 131, 202, 254, 190, 177, 148, 116, 51, 4, 198, 186, 204, 203, 52, 21, 217, 82, 125, 159, 66, 169, 56, 214, 215, 227, 145, 252, 35, 137, 39, 61, 135, 87, 255, 182, 12, 216, 95, 76, 202, 20, 32, 75, 92, 83, 148, 163, 252, 127, 33, 214, 123, 159, 107 }, new byte[] { 78, 39, 162, 212, 59, 25, 12, 218, 75, 9, 48, 244, 125, 8, 228, 231, 156, 158, 127, 62, 184, 41, 17, 150, 142, 50, 134, 229, 242, 93, 177, 208, 113, 82, 33, 135, 229, 183, 30, 37, 73, 132, 129, 13, 40, 142, 236, 93, 54, 10, 148, 169, 185, 123, 139, 150, 230, 107, 30, 45, 127, 147, 185, 243, 0, 191, 2, 46, 58, 197, 238, 10, 227, 26, 118, 244, 170, 177, 137, 141, 60, 161, 141, 54, 101, 245, 153, 57, 27, 77, 39, 109, 185, 62, 137, 80, 171, 252, 233, 135, 32, 114, 215, 151, 191, 212, 236, 179, 122, 91, 157, 181, 235, 149, 68, 11, 102, 41, 244, 214, 134, 9, 190, 223, 125, 139, 165, 28 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1eff27be-f2ea-4df7-93a5-33c7ba5e2d98"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 243, 36, 112, 51, 11, 12, 76, 157, 233, 1, 179, 69, 124, 87, 122, 190, 232, 100, 51, 175, 242, 113, 190, 247, 124, 74, 122, 178, 148, 144, 32, 62, 240, 231, 21, 9, 111, 229, 18, 151, 236, 19, 211, 138, 149, 149, 47, 103, 145, 143, 80, 240, 113, 233, 228, 16, 201, 203, 133, 173, 83, 90, 8, 143 }, new byte[] { 66, 202, 122, 29, 212, 249, 131, 200, 81, 144, 21, 21, 158, 36, 19, 48, 36, 248, 8, 45, 161, 110, 161, 114, 145, 178, 173, 108, 182, 18, 196, 5, 126, 10, 68, 151, 158, 231, 88, 187, 94, 88, 226, 36, 255, 119, 37, 49, 186, 32, 20, 113, 46, 71, 86, 170, 108, 91, 157, 234, 171, 51, 86, 154, 134, 104, 237, 202, 45, 176, 4, 13, 248, 4, 65, 114, 3, 118, 43, 3, 220, 38, 122, 86, 223, 220, 150, 74, 176, 12, 212, 53, 223, 59, 133, 60, 202, 76, 69, 190, 41, 217, 220, 89, 140, 93, 14, 230, 118, 56, 27, 237, 87, 52, 30, 194, 85, 225, 174, 195, 211, 211, 92, 66, 63, 172, 36, 39 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("24d15338-310e-4d3d-9e39-86444fc0ddec"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 93, 179, 153, 157, 0, 209, 189, 218, 153, 181, 22, 19, 145, 143, 85, 42, 155, 58, 179, 116, 34, 143, 245, 28, 23, 93, 106, 102, 91, 14, 234, 223, 137, 24, 11, 48, 11, 88, 68, 20, 28, 201, 212, 36, 122, 26, 247, 33, 201, 53, 230, 132, 41, 107, 122, 77, 178, 152, 106, 231, 247, 238, 225, 58 }, new byte[] { 105, 25, 177, 19, 249, 141, 177, 12, 183, 224, 119, 136, 61, 111, 119, 195, 208, 74, 38, 154, 61, 240, 8, 25, 140, 131, 125, 208, 203, 64, 227, 229, 27, 107, 178, 99, 164, 149, 213, 244, 172, 17, 45, 47, 131, 60, 178, 148, 81, 205, 42, 129, 21, 111, 201, 97, 72, 35, 98, 117, 247, 133, 77, 245, 37, 112, 246, 12, 197, 83, 211, 51, 106, 213, 27, 29, 254, 141, 90, 128, 6, 232, 1, 106, 64, 234, 43, 255, 109, 206, 67, 62, 54, 20, 201, 96, 19, 182, 84, 217, 35, 108, 202, 33, 47, 56, 175, 107, 241, 215, 112, 194, 252, 38, 7, 153, 140, 98, 90, 67, 236, 128, 36, 236, 138, 42, 166, 31 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("312f4251-1f9f-4f80-b2ad-968fc339b134"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 158, 158, 129, 35, 87, 141, 205, 242, 217, 136, 66, 39, 152, 230, 161, 59, 241, 69, 132, 233, 3, 201, 73, 11, 22, 34, 138, 104, 64, 109, 152, 160, 212, 112, 215, 94, 39, 147, 88, 108, 37, 235, 220, 236, 228, 28, 65, 207, 232, 172, 211, 108, 167, 44, 202, 218, 246, 10, 111, 190, 94, 130, 234, 237 }, new byte[] { 249, 189, 65, 106, 176, 109, 105, 244, 114, 38, 82, 96, 236, 180, 59, 67, 234, 89, 187, 91, 29, 113, 231, 3, 229, 179, 4, 207, 70, 27, 117, 182, 194, 199, 66, 49, 62, 86, 12, 106, 190, 128, 12, 34, 252, 50, 226, 76, 241, 119, 5, 68, 171, 46, 181, 76, 175, 168, 172, 122, 12, 174, 53, 66, 253, 250, 101, 228, 110, 75, 204, 152, 26, 243, 71, 134, 234, 86, 45, 219, 20, 203, 170, 141, 184, 41, 174, 84, 232, 220, 140, 213, 101, 193, 208, 226, 98, 151, 1, 35, 168, 100, 70, 238, 139, 33, 113, 67, 243, 151, 84, 21, 236, 134, 14, 119, 192, 41, 252, 232, 189, 73, 165, 121, 194, 31, 60, 159 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("324ed66e-e8de-4710-a139-18c50b442945"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 95, 115, 239, 68, 10, 70, 55, 119, 254, 151, 128, 91, 112, 30, 205, 49, 249, 233, 28, 114, 115, 27, 251, 172, 231, 239, 139, 239, 216, 80, 240, 182, 59, 177, 61, 37, 136, 144, 33, 37, 116, 21, 1, 134, 2, 175, 117, 206, 239, 95, 105, 232, 64, 238, 134, 174, 217, 123, 231, 200, 201, 28, 158, 205 }, new byte[] { 89, 42, 186, 140, 212, 134, 106, 95, 94, 175, 28, 238, 65, 216, 223, 224, 156, 177, 100, 122, 246, 74, 253, 234, 224, 217, 116, 72, 71, 72, 239, 145, 62, 171, 40, 171, 243, 160, 103, 252, 3, 253, 107, 144, 193, 55, 112, 55, 7, 45, 147, 51, 186, 114, 61, 187, 187, 29, 221, 162, 116, 90, 220, 111, 78, 198, 8, 127, 179, 149, 44, 174, 152, 218, 148, 81, 71, 136, 168, 103, 42, 219, 112, 10, 120, 236, 24, 26, 239, 231, 242, 204, 53, 187, 195, 196, 158, 227, 157, 118, 147, 206, 79, 211, 31, 109, 26, 218, 153, 54, 2, 22, 239, 224, 180, 86, 55, 89, 8, 38, 180, 128, 84, 132, 208, 116, 105, 186 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("4c5d8bb2-b66c-49e7-982b-685ed23d1be8"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 115, 161, 60, 131, 31, 52, 230, 22, 177, 68, 224, 204, 109, 207, 49, 37, 106, 100, 57, 48, 117, 82, 114, 98, 31, 102, 47, 232, 245, 41, 13, 18, 207, 54, 201, 32, 67, 190, 203, 128, 112, 88, 105, 23, 44, 88, 202, 253, 159, 164, 76, 197, 89, 165, 10, 232, 205, 247, 116, 25, 187, 131, 84, 122 }, new byte[] { 143, 116, 172, 20, 1, 18, 111, 72, 109, 229, 246, 88, 134, 157, 209, 68, 235, 229, 215, 74, 109, 162, 32, 15, 78, 206, 168, 131, 237, 38, 214, 18, 34, 85, 14, 66, 243, 211, 160, 246, 84, 70, 244, 120, 175, 28, 150, 95, 200, 240, 157, 240, 166, 213, 85, 192, 248, 8, 254, 172, 21, 216, 156, 143, 171, 8, 45, 159, 111, 210, 12, 145, 232, 195, 227, 79, 101, 246, 128, 137, 69, 64, 160, 100, 53, 52, 161, 64, 124, 98, 74, 129, 59, 73, 106, 216, 194, 163, 205, 162, 188, 11, 164, 98, 247, 245, 239, 37, 31, 64, 11, 226, 132, 138, 56, 86, 143, 58, 255, 34, 108, 178, 166, 110, 200, 193, 126, 63 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5b670b4c-a8dc-4cca-8d2b-0bb45d69a702"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 217, 243, 2, 213, 106, 181, 106, 0, 145, 255, 114, 109, 202, 167, 88, 123, 122, 90, 111, 201, 32, 125, 167, 41, 152, 31, 154, 118, 27, 185, 71, 168, 171, 207, 203, 36, 193, 240, 63, 34, 120, 54, 30, 229, 186, 180, 51, 33, 171, 148, 166, 225, 2, 92, 228, 216, 232, 252, 114, 65, 143, 79, 181, 216 }, new byte[] { 145, 161, 228, 85, 231, 198, 248, 181, 192, 174, 144, 159, 211, 212, 86, 94, 59, 21, 238, 60, 236, 97, 248, 237, 197, 172, 201, 161, 106, 13, 115, 1, 58, 69, 17, 232, 172, 140, 69, 141, 120, 94, 228, 244, 74, 4, 144, 98, 70, 150, 86, 210, 225, 75, 63, 77, 25, 165, 122, 6, 40, 133, 163, 120, 43, 252, 187, 173, 103, 122, 84, 178, 144, 232, 112, 189, 221, 97, 162, 10, 47, 66, 66, 142, 186, 239, 79, 193, 116, 12, 7, 247, 153, 73, 168, 70, 196, 86, 89, 96, 239, 40, 94, 66, 125, 186, 166, 244, 4, 19, 164, 120, 73, 232, 200, 82, 186, 30, 97, 117, 157, 118, 52, 16, 5, 254, 40, 245 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5ddbd197-9ac9-42fb-bdfe-dee7dbe35efd"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 154, 207, 69, 224, 14, 112, 109, 90, 72, 109, 133, 92, 29, 87, 136, 0, 37, 184, 248, 9, 135, 143, 128, 213, 187, 20, 147, 3, 34, 29, 57, 203, 162, 4, 14, 161, 27, 143, 20, 114, 188, 200, 39, 39, 59, 30, 123, 180, 83, 85, 189, 15, 90, 5, 133, 152, 200, 105, 229, 74, 7, 200, 26, 90 }, new byte[] { 126, 201, 245, 181, 121, 171, 194, 50, 118, 174, 217, 242, 217, 203, 189, 151, 31, 31, 134, 178, 5, 82, 107, 219, 7, 149, 115, 102, 182, 242, 149, 112, 45, 231, 1, 197, 188, 194, 49, 139, 5, 99, 146, 128, 108, 250, 58, 162, 163, 147, 86, 140, 63, 167, 97, 23, 73, 102, 95, 161, 160, 54, 206, 175, 189, 102, 126, 43, 217, 3, 196, 49, 108, 20, 68, 20, 29, 185, 217, 247, 209, 207, 219, 212, 0, 250, 207, 224, 50, 238, 160, 211, 28, 93, 101, 235, 184, 72, 141, 141, 58, 4, 16, 222, 95, 120, 152, 219, 18, 58, 147, 144, 171, 189, 212, 105, 81, 242, 86, 34, 153, 42, 92, 119, 95, 240, 186, 183 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("666bc14a-4078-4619-85f1-bc63033c556f"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 188, 181, 8, 96, 140, 109, 165, 131, 238, 188, 9, 211, 10, 105, 171, 101, 241, 209, 232, 96, 22, 77, 167, 62, 90, 93, 24, 37, 74, 166, 105, 248, 143, 104, 7, 238, 179, 84, 77, 243, 241, 185, 243, 200, 11, 205, 147, 1, 81, 200, 239, 90, 178, 75, 242, 4, 31, 220, 120, 162, 233, 232, 51, 67 }, new byte[] { 11, 57, 136, 62, 230, 96, 26, 160, 147, 225, 1, 221, 87, 226, 120, 157, 101, 118, 14, 81, 32, 184, 239, 175, 126, 144, 3, 34, 155, 16, 153, 51, 234, 100, 224, 31, 213, 245, 89, 190, 51, 250, 243, 131, 197, 203, 145, 231, 118, 252, 155, 66, 17, 69, 136, 101, 195, 100, 66, 72, 191, 247, 189, 253, 142, 51, 22, 211, 188, 235, 26, 167, 1, 215, 250, 221, 220, 112, 232, 235, 251, 246, 78, 172, 82, 5, 242, 36, 253, 253, 44, 119, 72, 247, 63, 156, 111, 128, 215, 38, 70, 169, 252, 118, 30, 8, 96, 126, 191, 33, 85, 214, 214, 243, 147, 27, 44, 112, 238, 240, 220, 160, 124, 90, 255, 12, 205, 36 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("6d6ad990-1ff2-445b-8496-d766048e25cf"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 217, 194, 48, 133, 114, 0, 85, 27, 174, 10, 112, 204, 25, 217, 59, 10, 245, 96, 158, 162, 172, 132, 161, 170, 77, 31, 92, 132, 191, 36, 73, 130, 77, 119, 96, 25, 105, 197, 202, 84, 83, 114, 70, 117, 188, 183, 146, 180, 90, 108, 13, 62, 168, 149, 179, 171, 245, 10, 206, 13, 97, 142, 24, 22 }, new byte[] { 39, 184, 40, 17, 88, 115, 222, 134, 126, 16, 75, 200, 172, 221, 94, 38, 73, 94, 206, 77, 106, 58, 68, 195, 73, 20, 243, 227, 99, 29, 176, 11, 22, 170, 88, 140, 200, 179, 49, 37, 217, 49, 165, 252, 163, 185, 70, 202, 237, 192, 128, 170, 174, 239, 182, 210, 30, 26, 244, 187, 146, 16, 9, 200, 127, 185, 115, 81, 207, 220, 158, 2, 10, 14, 185, 27, 161, 85, 132, 221, 168, 155, 23, 40, 111, 215, 98, 168, 175, 163, 239, 137, 221, 96, 131, 119, 253, 160, 123, 162, 195, 62, 79, 41, 46, 91, 10, 184, 176, 145, 115, 45, 146, 151, 187, 98, 48, 139, 201, 147, 54, 181, 201, 104, 29, 44, 112, 210 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("84a7c64a-feed-4fb2-8b1e-24e10aa382b2"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 178, 43, 15, 27, 74, 69, 200, 175, 116, 203, 53, 103, 68, 92, 72, 55, 71, 19, 43, 65, 255, 17, 255, 190, 115, 139, 104, 173, 106, 168, 135, 166, 202, 4, 235, 188, 64, 65, 156, 172, 247, 50, 164, 167, 30, 59, 108, 195, 52, 225, 255, 96, 132, 28, 166, 2, 73, 51, 155, 250, 104, 52, 226, 149 }, new byte[] { 76, 76, 198, 51, 250, 213, 168, 65, 54, 166, 94, 166, 155, 213, 49, 21, 54, 247, 35, 91, 116, 149, 110, 47, 210, 158, 40, 177, 86, 119, 221, 141, 20, 146, 146, 106, 210, 166, 59, 110, 218, 154, 37, 51, 22, 40, 109, 255, 52, 33, 205, 112, 239, 57, 171, 150, 222, 139, 60, 233, 181, 100, 110, 53, 198, 2, 252, 231, 104, 150, 123, 161, 106, 211, 37, 47, 75, 116, 30, 210, 86, 239, 79, 61, 223, 161, 116, 254, 133, 159, 63, 100, 38, 239, 19, 129, 163, 153, 197, 19, 77, 183, 11, 103, 158, 147, 41, 168, 155, 18, 118, 191, 76, 118, 155, 237, 109, 183, 154, 106, 200, 173, 203, 156, 209, 72, 142, 145 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("8f744e72-da12-4038-a54e-7512a0ada884"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 5, 238, 11, 217, 238, 46, 248, 3, 120, 103, 206, 70, 183, 234, 182, 205, 179, 106, 194, 65, 123, 6, 187, 216, 254, 158, 246, 157, 178, 26, 141, 24, 13, 29, 213, 246, 196, 226, 183, 29, 205, 230, 142, 89, 217, 189, 248, 245, 55, 29, 52, 9, 222, 208, 29, 58, 151, 17, 93, 238, 229, 37, 28, 96 }, new byte[] { 139, 51, 2, 31, 127, 121, 180, 149, 52, 110, 207, 131, 12, 141, 129, 166, 212, 227, 118, 54, 186, 8, 50, 118, 36, 174, 4, 207, 147, 121, 63, 200, 119, 112, 248, 14, 152, 150, 161, 226, 246, 117, 188, 224, 116, 239, 244, 7, 182, 109, 3, 83, 49, 88, 16, 118, 59, 90, 194, 211, 19, 151, 104, 107, 67, 139, 165, 96, 132, 242, 143, 252, 220, 162, 88, 64, 105, 39, 28, 9, 110, 35, 24, 203, 149, 31, 153, 157, 20, 74, 162, 92, 26, 62, 79, 65, 25, 255, 42, 92, 57, 58, 215, 112, 221, 250, 3, 170, 130, 24, 136, 50, 51, 188, 157, 151, 35, 29, 167, 211, 127, 176, 12, 23, 128, 24, 171, 158 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("96e0097f-ce73-4950-8ee2-89b313581154"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 12, 192, 238, 27, 42, 185, 156, 109, 231, 165, 202, 82, 23, 14, 251, 251, 30, 88, 187, 146, 124, 151, 149, 139, 129, 193, 98, 233, 79, 158, 223, 55, 150, 224, 200, 175, 193, 41, 171, 175, 223, 73, 64, 180, 192, 212, 210, 224, 176, 229, 182, 38, 31, 147, 6, 8, 45, 152, 3, 14, 97, 165, 230, 207 }, new byte[] { 33, 55, 221, 148, 55, 48, 146, 70, 139, 222, 104, 146, 140, 182, 44, 214, 44, 16, 36, 179, 180, 10, 54, 30, 196, 157, 178, 200, 188, 30, 35, 233, 22, 147, 158, 61, 95, 214, 136, 58, 124, 159, 128, 82, 200, 50, 214, 201, 4, 182, 9, 97, 85, 209, 171, 9, 200, 77, 178, 126, 99, 129, 93, 138, 104, 202, 221, 233, 120, 41, 254, 160, 149, 234, 180, 72, 143, 90, 129, 253, 14, 41, 23, 159, 35, 12, 180, 23, 198, 238, 192, 51, 2, 3, 25, 0, 161, 217, 198, 238, 80, 124, 19, 199, 240, 121, 161, 6, 20, 10, 194, 225, 68, 212, 172, 123, 178, 163, 99, 218, 62, 99, 149, 58, 138, 125, 160, 198 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("99c5faa8-d3fe-45b3-a871-86117ef93111"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 232, 15, 156, 191, 144, 23, 76, 85, 151, 214, 152, 214, 172, 188, 105, 130, 156, 81, 160, 166, 245, 93, 189, 31, 129, 32, 234, 43, 120, 172, 73, 66, 93, 240, 238, 199, 248, 1, 92, 48, 174, 235, 216, 107, 59, 209, 12, 181, 251, 254, 124, 70, 217, 78, 195, 255, 192, 128, 244, 152, 42, 235, 165, 231 }, new byte[] { 41, 237, 47, 113, 105, 124, 88, 126, 166, 199, 216, 6, 153, 6, 41, 74, 50, 27, 226, 90, 113, 215, 139, 241, 69, 35, 253, 215, 14, 72, 10, 214, 237, 116, 97, 106, 105, 131, 103, 127, 82, 42, 131, 124, 142, 174, 222, 226, 166, 219, 56, 122, 126, 245, 18, 77, 40, 84, 2, 12, 202, 240, 206, 248, 42, 71, 63, 219, 53, 110, 160, 72, 83, 215, 152, 40, 114, 88, 28, 85, 58, 149, 90, 171, 88, 173, 246, 176, 1, 69, 201, 46, 105, 148, 255, 136, 69, 123, 140, 159, 227, 95, 239, 188, 52, 144, 129, 198, 163, 100, 100, 187, 129, 232, 60, 169, 118, 105, 204, 209, 37, 198, 75, 33, 191, 189, 233, 123 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 118, 84, 167, 27, 179, 248, 100, 192, 185, 116, 66, 3, 232, 234, 170, 187, 143, 198, 248, 138, 122, 82, 63, 82, 195, 42, 193, 33, 125, 26, 25, 227, 130, 78, 180, 241, 59, 190, 149, 1, 78, 9, 6, 176, 208, 45, 190, 72, 50, 62, 15, 190, 161, 99, 178, 144, 100, 181, 138, 67, 90, 168, 192, 245 }, new byte[] { 190, 195, 183, 181, 149, 228, 121, 164, 37, 173, 136, 244, 135, 122, 94, 82, 249, 40, 166, 105, 105, 158, 173, 213, 238, 17, 90, 129, 111, 97, 170, 160, 12, 202, 252, 68, 255, 62, 69, 110, 252, 100, 229, 246, 254, 68, 2, 178, 182, 100, 182, 69, 59, 155, 222, 202, 109, 37, 104, 107, 190, 157, 200, 147, 162, 183, 181, 188, 168, 54, 200, 94, 153, 108, 102, 182, 250, 57, 91, 101, 38, 223, 68, 120, 96, 141, 210, 30, 59, 149, 4, 103, 193, 0, 84, 86, 186, 68, 67, 248, 25, 153, 183, 44, 209, 222, 84, 121, 185, 225, 52, 227, 227, 93, 90, 18, 148, 238, 126, 197, 113, 178, 44, 121, 254, 93, 24, 145 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c30d316f-9c93-42c9-8e72-0b3efa896192"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 221, 79, 4, 168, 173, 191, 48, 156, 39, 70, 107, 86, 182, 145, 21, 91, 131, 119, 241, 64, 100, 132, 204, 51, 154, 117, 216, 54, 42, 1, 234, 66, 188, 195, 59, 162, 197, 151, 21, 23, 199, 255, 226, 43, 236, 107, 156, 92, 109, 42, 130, 91, 95, 249, 62, 131, 201, 61, 177, 63, 21, 53, 192, 90 }, new byte[] { 23, 2, 124, 132, 92, 116, 204, 180, 134, 229, 4, 28, 155, 211, 35, 36, 95, 216, 238, 29, 232, 115, 232, 191, 211, 45, 115, 68, 78, 147, 196, 244, 58, 77, 124, 140, 17, 95, 37, 175, 86, 84, 207, 202, 123, 179, 187, 156, 163, 190, 184, 231, 144, 231, 71, 140, 88, 219, 38, 136, 63, 169, 148, 34, 144, 218, 222, 157, 168, 6, 45, 74, 74, 44, 55, 147, 98, 218, 32, 106, 94, 108, 13, 35, 205, 56, 98, 159, 146, 161, 5, 230, 84, 200, 32, 50, 119, 35, 60, 121, 161, 61, 147, 27, 236, 160, 42, 209, 131, 122, 70, 73, 214, 67, 216, 148, 83, 140, 169, 85, 5, 43, 61, 243, 213, 240, 117, 163 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c5eacfa9-ec87-4150-bedc-ca141458b5a3"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 138, 107, 199, 140, 107, 80, 148, 184, 172, 192, 199, 151, 216, 160, 64, 112, 66, 105, 134, 213, 157, 225, 128, 191, 128, 133, 125, 94, 131, 211, 157, 33, 78, 233, 198, 141, 73, 53, 217, 118, 178, 242, 180, 120, 11, 101, 181, 73, 150, 216, 90, 229, 199, 93, 207, 84, 82, 74, 65, 195, 47, 12, 179, 243 }, new byte[] { 108, 47, 110, 155, 87, 70, 115, 197, 203, 150, 51, 43, 139, 90, 30, 17, 3, 40, 58, 90, 224, 138, 249, 45, 98, 117, 216, 115, 42, 130, 41, 15, 128, 214, 249, 12, 236, 199, 213, 65, 187, 252, 201, 37, 132, 192, 164, 39, 185, 209, 34, 94, 153, 29, 229, 176, 255, 224, 188, 153, 154, 255, 202, 90, 222, 224, 77, 52, 132, 33, 3, 61, 215, 140, 66, 70, 64, 72, 45, 3, 50, 229, 106, 33, 92, 117, 253, 238, 19, 205, 139, 138, 138, 10, 2, 182, 161, 43, 221, 202, 173, 188, 154, 144, 6, 40, 102, 243, 49, 163, 101, 104, 208, 220, 145, 180, 209, 63, 2, 54, 175, 117, 55, 88, 157, 100, 161, 5 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("cb235a17-fd24-48cf-ba34-ac5ac698a832"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 180, 74, 177, 65, 73, 169, 68, 126, 161, 184, 66, 224, 115, 111, 131, 65, 63, 239, 183, 136, 98, 159, 44, 201, 99, 146, 54, 98, 42, 73, 125, 61, 80, 75, 80, 222, 15, 251, 210, 143, 133, 191, 140, 137, 97, 199, 154, 161, 224, 69, 56, 255, 100, 234, 28, 146, 169, 209, 7, 182, 225, 217, 150, 175 }, new byte[] { 117, 64, 63, 131, 215, 80, 248, 121, 112, 199, 3, 90, 84, 152, 152, 43, 41, 63, 122, 156, 44, 11, 60, 111, 196, 18, 73, 66, 37, 207, 191, 129, 157, 68, 172, 185, 59, 152, 131, 22, 179, 80, 67, 30, 174, 212, 33, 60, 230, 247, 7, 221, 74, 58, 124, 38, 239, 110, 4, 212, 118, 247, 117, 43, 123, 5, 250, 3, 127, 252, 40, 227, 69, 12, 128, 85, 234, 16, 160, 18, 88, 242, 188, 18, 170, 190, 80, 64, 197, 171, 18, 253, 135, 58, 99, 18, 255, 8, 47, 91, 240, 211, 26, 226, 48, 213, 41, 90, 126, 190, 164, 133, 52, 30, 126, 169, 222, 82, 110, 222, 144, 182, 83, 164, 214, 145, 224, 41 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("d406be20-d364-43c5-84bf-4d3e3be43ae0"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 178, 96, 226, 136, 96, 212, 175, 218, 227, 199, 131, 63, 197, 176, 45, 255, 218, 203, 58, 252, 65, 120, 204, 145, 196, 241, 217, 70, 190, 148, 229, 42, 243, 155, 76, 245, 242, 68, 106, 78, 117, 143, 88, 134, 120, 220, 147, 141, 98, 236, 234, 107, 76, 163, 53, 244, 60, 250, 242, 23, 117, 150, 76, 117 }, new byte[] { 95, 213, 98, 229, 38, 244, 28, 32, 240, 43, 202, 112, 88, 134, 78, 127, 166, 198, 184, 98, 75, 229, 65, 181, 235, 149, 79, 120, 190, 111, 113, 190, 65, 91, 184, 189, 74, 234, 192, 238, 72, 172, 135, 93, 104, 139, 161, 36, 43, 166, 88, 102, 202, 60, 92, 54, 9, 247, 156, 77, 23, 121, 15, 35, 32, 45, 8, 249, 239, 80, 174, 71, 162, 186, 8, 222, 70, 19, 223, 99, 246, 9, 90, 130, 235, 28, 56, 130, 247, 143, 110, 104, 206, 47, 164, 234, 222, 7, 120, 201, 88, 179, 235, 102, 241, 102, 60, 215, 10, 173, 178, 194, 240, 156, 40, 133, 144, 49, 82, 241, 14, 248, 125, 71, 208, 195, 216, 117 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("e798134f-8d1b-41aa-98c1-c8914240366d"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 159, 42, 62, 164, 245, 251, 109, 238, 25, 212, 39, 100, 92, 39, 24, 165, 82, 87, 251, 163, 162, 245, 130, 33, 71, 222, 254, 69, 236, 151, 160, 64, 255, 104, 251, 57, 42, 152, 5, 172, 169, 106, 47, 32, 18, 8, 109, 3, 94, 115, 120, 255, 11, 134, 66, 143, 231, 123, 138, 221, 83, 70, 1, 240 }, new byte[] { 60, 96, 208, 67, 202, 182, 86, 47, 155, 35, 185, 3, 164, 164, 54, 58, 62, 103, 136, 201, 201, 151, 201, 139, 141, 127, 186, 109, 220, 206, 128, 143, 242, 231, 127, 115, 68, 4, 249, 176, 40, 147, 90, 91, 110, 247, 21, 119, 193, 5, 228, 64, 254, 136, 6, 224, 9, 141, 170, 9, 229, 190, 229, 232, 102, 249, 244, 46, 225, 110, 231, 68, 108, 132, 67, 149, 16, 119, 108, 86, 81, 66, 64, 144, 44, 74, 29, 251, 66, 49, 7, 129, 12, 222, 137, 197, 204, 126, 102, 238, 235, 113, 202, 109, 58, 188, 118, 25, 67, 34, 223, 129, 183, 97, 61, 243, 75, 141, 5, 148, 150, 168, 219, 237, 92, 59, 186, 105 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f0b84747-fbed-43e1-9cd1-ecf2e1bd3cc0"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 152, 238, 163, 247, 15, 182, 61, 79, 221, 63, 40, 252, 203, 213, 218, 143, 151, 131, 127, 255, 171, 251, 185, 208, 21, 129, 182, 166, 170, 186, 31, 181, 10, 41, 103, 58, 18, 140, 113, 49, 205, 57, 22, 225, 8, 217, 117, 117, 133, 80, 84, 129, 7, 65, 246, 124, 62, 84, 184, 117, 181, 147, 186, 91 }, new byte[] { 216, 168, 79, 216, 154, 17, 7, 122, 137, 142, 205, 95, 248, 187, 53, 72, 55, 196, 199, 254, 147, 125, 213, 42, 86, 41, 127, 93, 110, 188, 165, 183, 124, 140, 197, 16, 124, 146, 39, 108, 194, 225, 207, 87, 103, 216, 148, 238, 67, 94, 40, 255, 32, 167, 204, 135, 155, 151, 95, 61, 62, 216, 75, 119, 247, 35, 47, 132, 198, 236, 48, 45, 37, 180, 0, 42, 6, 6, 137, 107, 51, 78, 110, 26, 225, 99, 12, 18, 143, 56, 176, 243, 71, 140, 232, 239, 218, 116, 46, 95, 238, 86, 13, 195, 131, 3, 154, 2, 178, 38, 5, 230, 243, 43, 211, 19, 201, 139, 234, 35, 171, 42, 22, 46, 20, 138, 209, 150 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f2dbff0f-0ccb-4cc3-91e3-d068431af710"),
                columns: new[] { "AllowMbti", "PasswordHash", "PasswordSalt" },
                values: new object[] { false, new byte[] { 161, 113, 242, 51, 190, 49, 46, 210, 159, 239, 221, 34, 194, 75, 7, 126, 103, 3, 181, 181, 149, 181, 134, 61, 84, 51, 67, 187, 11, 189, 177, 224, 112, 116, 5, 179, 188, 66, 250, 62, 28, 248, 13, 237, 70, 228, 159, 66, 233, 219, 255, 21, 52, 103, 144, 25, 241, 158, 79, 197, 93, 193, 253, 156 }, new byte[] { 240, 39, 33, 28, 126, 61, 206, 68, 127, 19, 36, 225, 0, 115, 189, 207, 46, 220, 165, 138, 52, 121, 165, 106, 152, 163, 37, 92, 111, 68, 90, 197, 153, 110, 188, 78, 95, 72, 47, 46, 195, 214, 224, 235, 235, 126, 53, 234, 34, 200, 226, 7, 206, 79, 169, 152, 176, 188, 168, 193, 113, 204, 149, 98, 145, 168, 250, 14, 102, 182, 78, 242, 50, 35, 43, 140, 18, 124, 93, 19, 94, 4, 154, 67, 26, 171, 113, 10, 64, 121, 166, 163, 11, 231, 253, 249, 181, 98, 190, 161, 56, 207, 57, 197, 146, 178, 208, 209, 143, 85, 128, 184, 161, 84, 96, 132, 98, 176, 37, 73, 101, 81, 112, 166, 55, 246, 62, 156 } });

            migrationBuilder.CreateIndex(
                name: "IX_StudentPurchased_ExaminationId",
                table: "StudentPurchased",
                column: "ExaminationId");

            migrationBuilder.CreateIndex(
                name: "IX_StudentPurchased_UserId",
                table: "StudentPurchased",
                column: "UserId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "StudentPurchased");

            migrationBuilder.DropColumn(
                name: "AllowMbti",
                table: "Users");

            migrationBuilder.UpdateData(
                table: "Attempts",
                keyColumn: "Id",
                keyValue: new Guid("9b8daa9f-7f8c-41d9-aa34-ba2b1010f4ed"),
                columns: new[] { "CreatedDate", "ExamDate" },
                values: new object[] { new DateTime(2024, 1, 5, 13, 14, 21, 444, DateTimeKind.Utc).AddTicks(9322), new DateTime(2024, 1, 6, 13, 14, 21, 444, DateTimeKind.Utc).AddTicks(9326) });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("09d2d924-8c18-4e49-bbc4-f67c0204d7af"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 120, 72, 79, 172, 177, 17, 148, 113, 151, 248, 40, 55, 213, 113, 69, 18, 113, 20, 213, 248, 13, 80, 154, 248, 230, 184, 148, 212, 190, 24, 195, 111, 92, 137, 84, 185, 92, 220, 250, 179, 232, 50, 188, 138, 139, 71, 81, 224, 35, 161, 102, 60, 126, 16, 164, 99, 154, 199, 213, 99, 148, 144, 26, 102 }, new byte[] { 132, 66, 246, 222, 217, 62, 2, 214, 103, 195, 217, 113, 172, 229, 66, 201, 252, 255, 43, 144, 115, 191, 141, 204, 38, 249, 161, 175, 223, 159, 117, 85, 54, 19, 194, 252, 142, 37, 108, 105, 130, 134, 230, 201, 18, 220, 7, 30, 122, 122, 181, 202, 235, 88, 181, 168, 173, 110, 47, 174, 5, 191, 104, 70, 106, 128, 59, 181, 155, 149, 226, 123, 126, 32, 176, 143, 138, 81, 178, 50, 166, 107, 237, 226, 251, 205, 62, 8, 64, 237, 227, 255, 105, 240, 138, 195, 9, 10, 237, 107, 81, 112, 29, 103, 191, 63, 89, 78, 119, 140, 28, 134, 131, 202, 187, 168, 246, 39, 164, 157, 23, 199, 206, 96, 152, 51, 43, 233 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1a022b66-8b1c-461a-be8a-ec2a7b0741e9"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 126, 196, 162, 175, 114, 81, 247, 185, 94, 154, 42, 90, 107, 242, 89, 3, 166, 119, 243, 247, 85, 220, 62, 130, 77, 220, 8, 152, 250, 186, 240, 161, 218, 44, 238, 243, 212, 234, 240, 38, 64, 93, 231, 155, 62, 68, 251, 252, 27, 209, 162, 82, 209, 41, 135, 168, 70, 42, 158, 209, 31, 96, 21, 15 }, new byte[] { 246, 14, 110, 158, 169, 196, 24, 120, 58, 157, 90, 75, 43, 110, 3, 68, 221, 93, 246, 25, 79, 21, 67, 179, 136, 61, 169, 13, 177, 122, 197, 49, 191, 180, 93, 230, 86, 196, 154, 141, 81, 202, 12, 245, 126, 54, 212, 255, 123, 159, 140, 109, 179, 217, 155, 57, 225, 150, 44, 20, 48, 76, 115, 87, 123, 128, 77, 10, 86, 163, 24, 203, 38, 81, 113, 103, 238, 59, 118, 84, 197, 103, 228, 61, 225, 157, 105, 142, 73, 27, 63, 138, 194, 113, 223, 225, 18, 51, 203, 200, 149, 250, 22, 92, 78, 113, 192, 211, 71, 189, 9, 47, 29, 246, 122, 121, 246, 102, 225, 66, 10, 171, 57, 55, 29, 94, 135, 80 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("1eff27be-f2ea-4df7-93a5-33c7ba5e2d98"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 40, 37, 57, 138, 50, 40, 207, 216, 97, 35, 141, 174, 220, 49, 159, 218, 100, 102, 117, 214, 238, 209, 87, 149, 213, 127, 62, 241, 210, 176, 179, 146, 65, 68, 38, 36, 78, 11, 149, 226, 71, 219, 94, 208, 57, 154, 100, 88, 217, 132, 33, 41, 181, 77, 218, 218, 186, 198, 97, 80, 28, 113, 124, 15 }, new byte[] { 0, 62, 37, 53, 186, 40, 90, 84, 106, 91, 122, 170, 198, 99, 101, 172, 13, 104, 173, 181, 131, 232, 165, 177, 100, 85, 222, 175, 189, 231, 248, 66, 112, 240, 111, 167, 136, 63, 239, 86, 126, 113, 90, 186, 187, 205, 52, 35, 73, 101, 7, 27, 38, 223, 75, 101, 65, 112, 175, 20, 90, 189, 33, 67, 103, 192, 241, 80, 184, 14, 243, 96, 105, 11, 217, 248, 41, 34, 26, 177, 148, 73, 163, 146, 141, 248, 97, 170, 118, 141, 213, 235, 121, 5, 157, 52, 142, 118, 173, 111, 25, 202, 182, 249, 19, 198, 230, 153, 54, 210, 180, 113, 125, 220, 70, 175, 13, 119, 209, 61, 53, 181, 146, 210, 42, 1, 144, 157 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("24d15338-310e-4d3d-9e39-86444fc0ddec"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 1, 237, 66, 210, 92, 90, 106, 219, 253, 20, 63, 49, 162, 158, 181, 82, 44, 3, 215, 88, 251, 245, 109, 241, 251, 212, 88, 105, 51, 88, 254, 163, 213, 183, 49, 148, 217, 249, 25, 47, 249, 211, 154, 105, 93, 254, 62, 121, 105, 211, 118, 142, 188, 163, 8, 5, 101, 136, 199, 6, 233, 183, 218, 158 }, new byte[] { 115, 132, 216, 248, 41, 253, 87, 68, 89, 60, 95, 12, 93, 168, 147, 156, 213, 117, 103, 131, 246, 110, 48, 69, 126, 120, 9, 155, 81, 39, 91, 186, 163, 194, 120, 9, 235, 172, 188, 209, 180, 38, 53, 27, 168, 241, 251, 252, 63, 147, 233, 167, 187, 87, 170, 87, 0, 158, 145, 172, 111, 84, 239, 130, 157, 113, 181, 74, 177, 107, 195, 55, 143, 207, 209, 27, 187, 5, 24, 157, 94, 67, 5, 71, 39, 233, 237, 196, 34, 122, 207, 240, 190, 230, 123, 83, 52, 70, 17, 12, 58, 143, 25, 114, 8, 71, 122, 255, 230, 29, 1, 130, 199, 2, 138, 105, 149, 118, 19, 51, 92, 94, 209, 181, 133, 96, 33, 76 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("312f4251-1f9f-4f80-b2ad-968fc339b134"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 38, 21, 46, 194, 161, 17, 255, 219, 247, 228, 46, 26, 63, 105, 243, 208, 50, 5, 204, 220, 238, 174, 170, 119, 184, 221, 23, 32, 38, 23, 76, 224, 41, 109, 44, 235, 244, 54, 58, 26, 16, 199, 93, 195, 170, 218, 7, 135, 90, 171, 209, 89, 2, 237, 14, 200, 94, 45, 116, 23, 67, 23, 241, 71 }, new byte[] { 215, 77, 74, 0, 246, 118, 208, 71, 116, 184, 66, 155, 174, 118, 54, 157, 238, 217, 131, 71, 170, 182, 136, 128, 203, 25, 115, 195, 46, 214, 167, 228, 33, 229, 145, 6, 130, 21, 107, 23, 97, 81, 32, 240, 115, 83, 194, 103, 20, 28, 86, 68, 51, 185, 75, 40, 72, 212, 244, 105, 9, 237, 172, 172, 53, 95, 90, 122, 128, 212, 113, 164, 8, 255, 98, 52, 196, 187, 164, 226, 255, 16, 0, 134, 116, 64, 201, 229, 99, 186, 192, 111, 27, 131, 9, 136, 135, 125, 81, 1, 172, 165, 195, 143, 65, 104, 191, 90, 95, 225, 132, 181, 193, 28, 227, 155, 101, 64, 217, 33, 15, 127, 234, 102, 156, 138, 217, 253 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("324ed66e-e8de-4710-a139-18c50b442945"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 144, 48, 166, 164, 226, 207, 226, 85, 217, 163, 49, 87, 238, 223, 244, 53, 154, 243, 116, 58, 125, 150, 190, 106, 16, 237, 225, 203, 190, 213, 169, 148, 238, 122, 111, 30, 35, 80, 32, 138, 78, 67, 150, 10, 147, 194, 75, 27, 183, 134, 191, 56, 53, 87, 8, 141, 29, 203, 172, 254, 84, 243, 209, 186 }, new byte[] { 148, 41, 126, 105, 189, 201, 130, 108, 30, 246, 236, 158, 51, 237, 18, 155, 244, 193, 223, 245, 162, 122, 127, 129, 167, 208, 119, 233, 98, 85, 79, 131, 214, 234, 254, 218, 158, 194, 9, 122, 62, 159, 49, 38, 26, 252, 223, 239, 204, 220, 4, 13, 86, 5, 110, 161, 211, 253, 102, 169, 2, 121, 84, 5, 40, 115, 128, 253, 66, 228, 42, 115, 170, 72, 241, 251, 247, 191, 20, 111, 191, 38, 142, 59, 148, 134, 112, 221, 128, 252, 107, 172, 76, 193, 119, 125, 142, 132, 172, 237, 76, 235, 220, 137, 156, 68, 152, 16, 32, 97, 24, 174, 179, 150, 203, 255, 7, 190, 65, 107, 90, 115, 116, 144, 128, 78, 114, 217 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("4c5d8bb2-b66c-49e7-982b-685ed23d1be8"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 64, 57, 232, 218, 68, 242, 38, 53, 200, 179, 156, 221, 163, 94, 92, 13, 188, 157, 166, 171, 67, 232, 57, 135, 61, 140, 150, 160, 39, 67, 1, 110, 141, 114, 209, 48, 71, 5, 225, 47, 107, 248, 243, 112, 12, 192, 82, 24, 77, 229, 117, 252, 130, 239, 241, 61, 75, 136, 236, 72, 58, 5, 199, 30 }, new byte[] { 87, 156, 0, 57, 212, 29, 12, 170, 121, 235, 25, 63, 49, 46, 116, 133, 207, 225, 51, 97, 171, 207, 127, 151, 183, 26, 169, 178, 188, 168, 115, 237, 2, 88, 187, 216, 54, 36, 107, 145, 179, 193, 99, 144, 222, 66, 210, 88, 55, 68, 12, 20, 206, 132, 231, 157, 166, 101, 45, 57, 6, 58, 181, 176, 79, 93, 59, 18, 44, 49, 207, 238, 115, 16, 86, 28, 187, 237, 33, 20, 16, 96, 230, 250, 86, 98, 77, 81, 97, 189, 219, 77, 63, 119, 34, 87, 217, 214, 158, 75, 170, 186, 107, 1, 122, 232, 112, 199, 99, 62, 8, 18, 163, 21, 246, 192, 23, 98, 169, 124, 145, 113, 202, 28, 181, 203, 38, 184 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5b670b4c-a8dc-4cca-8d2b-0bb45d69a702"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 94, 8, 29, 155, 110, 207, 130, 169, 249, 153, 88, 153, 140, 172, 229, 46, 165, 46, 250, 135, 9, 4, 35, 233, 11, 181, 117, 49, 237, 54, 202, 97, 4, 149, 206, 182, 222, 175, 16, 219, 166, 25, 118, 91, 32, 135, 92, 168, 23, 71, 103, 84, 59, 139, 96, 220, 77, 65, 177, 225, 47, 158, 132, 200 }, new byte[] { 167, 96, 177, 132, 178, 206, 30, 89, 115, 219, 232, 79, 44, 186, 222, 44, 140, 182, 181, 59, 250, 139, 236, 152, 158, 94, 50, 56, 50, 14, 122, 177, 76, 218, 185, 236, 122, 54, 236, 180, 183, 95, 0, 44, 52, 220, 159, 229, 33, 111, 12, 37, 70, 105, 236, 209, 42, 35, 0, 220, 153, 141, 55, 228, 129, 125, 161, 66, 49, 43, 68, 61, 155, 166, 181, 82, 14, 59, 99, 170, 186, 153, 67, 173, 182, 39, 63, 147, 4, 24, 15, 108, 73, 70, 49, 116, 11, 169, 99, 153, 21, 203, 235, 173, 116, 230, 36, 153, 42, 93, 28, 158, 161, 153, 60, 121, 37, 168, 242, 126, 45, 248, 149, 213, 247, 145, 115, 161 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("5ddbd197-9ac9-42fb-bdfe-dee7dbe35efd"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 65, 22, 231, 224, 211, 144, 117, 113, 40, 163, 44, 242, 87, 223, 244, 148, 244, 34, 115, 155, 71, 219, 45, 82, 101, 53, 135, 120, 107, 176, 12, 220, 22, 54, 225, 12, 141, 215, 194, 73, 251, 73, 179, 92, 192, 52, 160, 42, 98, 59, 192, 91, 134, 51, 43, 207, 128, 98, 149, 135, 80, 50, 115, 137 }, new byte[] { 100, 114, 116, 249, 161, 64, 151, 234, 226, 182, 238, 30, 87, 40, 226, 39, 122, 224, 152, 239, 212, 44, 116, 122, 207, 18, 72, 33, 38, 36, 80, 48, 136, 102, 90, 230, 150, 153, 163, 9, 125, 82, 136, 205, 133, 142, 52, 149, 108, 184, 207, 112, 42, 94, 254, 56, 77, 54, 116, 20, 139, 159, 235, 80, 180, 122, 67, 235, 229, 9, 111, 59, 39, 76, 96, 173, 61, 187, 7, 210, 173, 194, 87, 124, 219, 65, 176, 187, 73, 111, 41, 182, 12, 3, 173, 210, 254, 81, 203, 132, 178, 224, 245, 155, 2, 121, 218, 211, 35, 141, 36, 68, 182, 201, 148, 24, 148, 230, 67, 187, 31, 228, 100, 194, 235, 126, 44, 179 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("666bc14a-4078-4619-85f1-bc63033c556f"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 244, 166, 20, 131, 202, 143, 138, 5, 182, 87, 116, 216, 206, 127, 168, 108, 100, 81, 32, 157, 54, 137, 17, 241, 58, 94, 63, 10, 233, 245, 123, 21, 241, 224, 6, 26, 146, 217, 64, 51, 13, 11, 191, 123, 148, 92, 217, 246, 130, 172, 165, 32, 174, 10, 152, 149, 111, 239, 90, 71, 139, 197, 163, 138 }, new byte[] { 122, 35, 239, 179, 232, 146, 207, 34, 86, 77, 114, 231, 4, 139, 203, 182, 173, 24, 255, 175, 157, 60, 225, 85, 38, 93, 232, 56, 84, 94, 237, 115, 87, 30, 2, 113, 224, 78, 96, 249, 101, 158, 120, 162, 61, 38, 47, 55, 58, 251, 144, 166, 165, 230, 189, 164, 30, 123, 152, 0, 12, 82, 27, 188, 130, 56, 219, 240, 177, 227, 71, 104, 184, 125, 145, 242, 144, 164, 118, 195, 5, 139, 214, 135, 221, 144, 230, 186, 172, 157, 213, 226, 181, 213, 232, 153, 230, 42, 116, 31, 243, 156, 111, 176, 71, 183, 101, 192, 24, 238, 228, 47, 212, 170, 1, 160, 53, 36, 87, 92, 105, 241, 154, 16, 27, 71, 35, 224 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("6d6ad990-1ff2-445b-8496-d766048e25cf"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 80, 251, 215, 34, 148, 130, 155, 253, 251, 99, 110, 182, 19, 29, 14, 249, 114, 147, 98, 87, 198, 48, 247, 241, 122, 106, 223, 28, 10, 182, 97, 8, 78, 4, 182, 67, 67, 49, 115, 229, 204, 114, 122, 78, 65, 243, 149, 54, 247, 132, 29, 20, 166, 103, 162, 189, 122, 100, 249, 217, 118, 141, 20, 118 }, new byte[] { 113, 187, 44, 137, 12, 222, 13, 164, 160, 234, 121, 31, 228, 170, 227, 21, 49, 134, 8, 120, 251, 146, 12, 100, 136, 174, 104, 165, 45, 128, 190, 205, 7, 189, 152, 51, 250, 215, 140, 202, 116, 144, 27, 209, 66, 48, 156, 5, 3, 113, 96, 52, 65, 131, 178, 55, 187, 121, 248, 211, 2, 28, 9, 125, 255, 13, 245, 35, 138, 152, 197, 22, 228, 168, 32, 211, 125, 183, 16, 2, 62, 187, 72, 97, 175, 169, 162, 113, 132, 91, 45, 49, 113, 230, 40, 147, 174, 235, 177, 25, 13, 6, 251, 204, 62, 179, 218, 33, 168, 12, 159, 221, 56, 192, 86, 205, 126, 199, 176, 226, 97, 120, 31, 213, 251, 45, 100, 38 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("84a7c64a-feed-4fb2-8b1e-24e10aa382b2"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 71, 175, 26, 214, 52, 126, 74, 114, 7, 231, 240, 191, 180, 6, 180, 107, 162, 134, 60, 72, 68, 25, 9, 204, 89, 213, 33, 114, 252, 223, 38, 116, 55, 217, 82, 212, 180, 211, 199, 9, 11, 25, 0, 35, 92, 209, 116, 132, 197, 151, 242, 211, 136, 95, 85, 245, 52, 190, 137, 197, 13, 207, 50, 190 }, new byte[] { 40, 13, 158, 83, 181, 79, 117, 87, 213, 67, 229, 160, 13, 164, 117, 116, 199, 41, 214, 201, 106, 74, 152, 21, 75, 85, 17, 207, 103, 74, 37, 172, 147, 247, 77, 233, 31, 207, 215, 206, 44, 238, 82, 21, 53, 141, 54, 32, 141, 179, 92, 187, 69, 66, 231, 78, 227, 139, 185, 180, 71, 172, 247, 205, 80, 84, 202, 59, 21, 94, 147, 106, 237, 184, 195, 12, 13, 83, 195, 131, 27, 43, 191, 164, 71, 3, 27, 21, 54, 37, 140, 53, 228, 212, 112, 18, 94, 187, 236, 41, 238, 10, 253, 243, 13, 201, 58, 49, 178, 253, 89, 36, 119, 255, 46, 171, 41, 86, 147, 76, 18, 76, 40, 41, 53, 174, 221, 188 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("8f744e72-da12-4038-a54e-7512a0ada884"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 130, 46, 135, 63, 229, 67, 12, 207, 241, 239, 140, 222, 204, 176, 161, 160, 245, 47, 132, 143, 234, 248, 97, 198, 92, 94, 217, 218, 46, 210, 93, 196, 209, 4, 177, 69, 166, 113, 33, 80, 228, 187, 211, 37, 117, 116, 86, 45, 255, 78, 108, 7, 103, 131, 35, 214, 112, 147, 196, 61, 174, 227, 190, 208 }, new byte[] { 17, 10, 175, 143, 235, 15, 55, 51, 164, 78, 51, 98, 128, 203, 91, 133, 185, 240, 231, 151, 75, 76, 54, 99, 176, 111, 143, 77, 89, 35, 89, 98, 254, 11, 238, 164, 34, 102, 8, 11, 220, 205, 145, 153, 116, 95, 36, 54, 198, 201, 187, 111, 169, 167, 82, 148, 46, 8, 182, 95, 184, 176, 131, 236, 218, 51, 151, 35, 47, 208, 244, 167, 151, 9, 205, 49, 187, 149, 183, 83, 170, 86, 93, 109, 75, 138, 90, 250, 91, 51, 212, 80, 82, 190, 6, 120, 195, 56, 28, 176, 192, 86, 132, 239, 237, 119, 50, 156, 239, 60, 189, 92, 56, 227, 200, 240, 100, 189, 224, 123, 32, 211, 233, 242, 132, 16, 121, 128 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("96e0097f-ce73-4950-8ee2-89b313581154"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 115, 73, 119, 159, 211, 145, 125, 157, 62, 15, 236, 221, 78, 241, 45, 149, 14, 172, 171, 95, 101, 107, 210, 111, 175, 135, 122, 244, 92, 152, 200, 183, 124, 114, 132, 29, 162, 195, 121, 169, 238, 160, 7, 12, 176, 146, 159, 139, 123, 22, 207, 172, 165, 198, 42, 222, 159, 109, 46, 246, 147, 149, 199, 55 }, new byte[] { 33, 15, 233, 194, 56, 100, 206, 101, 248, 198, 89, 77, 187, 218, 250, 146, 17, 178, 153, 166, 83, 202, 68, 209, 29, 157, 52, 52, 106, 71, 99, 115, 147, 138, 88, 178, 139, 46, 39, 131, 124, 51, 133, 40, 29, 151, 110, 56, 110, 52, 215, 40, 76, 100, 255, 249, 52, 232, 8, 102, 130, 32, 170, 242, 186, 170, 130, 83, 149, 171, 164, 66, 7, 21, 95, 40, 153, 138, 158, 230, 179, 31, 28, 71, 78, 171, 179, 77, 119, 153, 127, 217, 99, 52, 129, 136, 225, 14, 45, 59, 235, 213, 221, 182, 234, 209, 97, 6, 127, 153, 222, 24, 7, 164, 196, 188, 165, 108, 220, 193, 188, 114, 152, 0, 160, 79, 181, 85 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("99c5faa8-d3fe-45b3-a871-86117ef93111"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 166, 40, 64, 206, 244, 198, 131, 62, 90, 191, 173, 149, 133, 140, 9, 8, 114, 244, 0, 31, 73, 56, 53, 244, 137, 84, 121, 242, 17, 188, 33, 154, 13, 119, 239, 207, 230, 219, 178, 84, 132, 147, 176, 117, 157, 111, 94, 238, 27, 45, 28, 227, 237, 46, 110, 113, 4, 13, 120, 250, 165, 74, 154, 175 }, new byte[] { 227, 227, 184, 58, 86, 72, 67, 172, 106, 198, 126, 237, 11, 150, 3, 62, 54, 201, 234, 138, 254, 250, 224, 86, 119, 229, 16, 161, 11, 63, 38, 239, 211, 62, 190, 153, 127, 41, 115, 154, 164, 65, 203, 4, 233, 16, 92, 36, 99, 55, 155, 209, 154, 71, 211, 137, 85, 196, 231, 82, 223, 182, 108, 172, 96, 51, 176, 116, 27, 133, 190, 119, 79, 241, 141, 226, 97, 99, 186, 199, 154, 158, 77, 217, 122, 126, 118, 221, 213, 45, 157, 216, 134, 226, 59, 126, 44, 39, 202, 246, 63, 5, 44, 19, 127, 163, 224, 58, 201, 239, 249, 190, 251, 22, 86, 62, 2, 218, 230, 73, 172, 104, 5, 211, 199, 73, 157, 116 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("a6be20e2-5927-4cce-bed4-258f919f82e6"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 18, 117, 240, 126, 235, 97, 143, 247, 96, 59, 239, 208, 19, 226, 217, 165, 245, 247, 32, 175, 129, 199, 93, 119, 71, 115, 83, 20, 126, 222, 64, 112, 103, 177, 37, 238, 178, 222, 68, 172, 238, 11, 171, 56, 249, 72, 57, 75, 176, 24, 132, 221, 152, 217, 26, 197, 231, 154, 205, 66, 214, 250, 164, 41 }, new byte[] { 41, 85, 110, 134, 111, 51, 145, 188, 86, 200, 20, 199, 0, 44, 199, 147, 181, 187, 207, 43, 198, 171, 199, 254, 223, 59, 32, 45, 250, 104, 8, 205, 179, 203, 21, 71, 9, 207, 84, 85, 153, 11, 231, 35, 24, 169, 3, 49, 117, 76, 161, 192, 169, 0, 27, 141, 28, 69, 170, 87, 108, 124, 235, 202, 127, 204, 137, 85, 63, 77, 150, 138, 63, 95, 199, 10, 225, 45, 213, 121, 228, 94, 145, 101, 88, 168, 144, 248, 67, 212, 254, 234, 252, 158, 220, 19, 46, 30, 168, 86, 32, 95, 65, 122, 216, 89, 135, 224, 165, 31, 165, 64, 23, 169, 102, 213, 92, 210, 74, 165, 116, 250, 136, 231, 235, 92, 156, 22 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c30d316f-9c93-42c9-8e72-0b3efa896192"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 177, 143, 94, 49, 219, 113, 115, 102, 221, 89, 237, 244, 41, 137, 179, 214, 21, 205, 75, 232, 84, 174, 243, 254, 251, 158, 135, 25, 64, 102, 107, 156, 212, 176, 158, 106, 154, 203, 40, 73, 44, 174, 6, 113, 208, 189, 232, 225, 230, 103, 236, 189, 220, 231, 154, 194, 17, 96, 27, 217, 226, 55, 208, 149 }, new byte[] { 251, 123, 252, 132, 14, 74, 104, 96, 75, 141, 54, 109, 199, 209, 210, 119, 36, 15, 120, 172, 60, 211, 207, 62, 248, 209, 166, 15, 184, 163, 123, 223, 50, 17, 18, 189, 157, 121, 149, 61, 55, 173, 7, 134, 32, 74, 163, 47, 16, 122, 244, 173, 235, 201, 80, 220, 48, 29, 100, 87, 226, 217, 159, 125, 39, 177, 249, 227, 89, 54, 107, 230, 176, 103, 238, 248, 176, 144, 7, 33, 113, 111, 99, 236, 131, 42, 58, 92, 176, 187, 123, 103, 162, 97, 63, 244, 176, 160, 145, 169, 192, 189, 157, 152, 252, 229, 96, 123, 101, 84, 77, 253, 99, 146, 180, 45, 229, 19, 195, 118, 8, 209, 148, 217, 195, 80, 128, 201 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("c5eacfa9-ec87-4150-bedc-ca141458b5a3"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 117, 226, 180, 125, 17, 119, 28, 17, 5, 151, 118, 46, 72, 97, 162, 211, 226, 226, 117, 30, 168, 141, 219, 148, 177, 145, 10, 217, 29, 181, 23, 207, 101, 205, 210, 248, 173, 81, 28, 123, 92, 238, 134, 174, 64, 244, 30, 185, 174, 127, 28, 155, 115, 101, 167, 118, 48, 47, 233, 88, 224, 218, 220, 210 }, new byte[] { 172, 198, 233, 146, 72, 96, 136, 13, 4, 58, 128, 144, 55, 119, 167, 221, 206, 95, 88, 225, 95, 245, 232, 40, 197, 29, 153, 235, 54, 185, 108, 224, 157, 172, 255, 181, 119, 144, 88, 29, 65, 233, 195, 240, 121, 186, 97, 13, 38, 222, 55, 13, 51, 183, 217, 244, 204, 45, 81, 232, 29, 53, 141, 122, 123, 175, 58, 195, 126, 15, 81, 201, 93, 66, 35, 187, 35, 237, 38, 126, 202, 83, 1, 82, 15, 25, 146, 174, 101, 143, 225, 163, 15, 140, 154, 6, 224, 131, 48, 158, 61, 109, 179, 207, 25, 77, 136, 35, 112, 30, 159, 135, 104, 27, 106, 67, 99, 26, 245, 128, 10, 227, 217, 34, 242, 124, 37, 175 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("cb235a17-fd24-48cf-ba34-ac5ac698a832"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 135, 187, 114, 105, 205, 211, 26, 8, 20, 249, 216, 165, 6, 134, 181, 185, 43, 254, 43, 138, 66, 163, 91, 59, 23, 192, 152, 215, 0, 66, 202, 182, 112, 103, 80, 70, 83, 97, 97, 208, 41, 255, 102, 61, 110, 124, 243, 121, 20, 135, 250, 233, 83, 148, 247, 80, 179, 149, 236, 148, 27, 118, 42, 98 }, new byte[] { 199, 75, 204, 27, 193, 179, 231, 156, 116, 157, 17, 226, 21, 99, 138, 40, 222, 54, 38, 105, 145, 244, 164, 96, 239, 206, 61, 38, 232, 18, 255, 25, 66, 150, 227, 37, 26, 53, 248, 180, 194, 64, 126, 160, 170, 255, 173, 244, 252, 226, 218, 113, 7, 211, 118, 168, 173, 133, 79, 156, 135, 71, 248, 39, 79, 140, 189, 36, 8, 195, 146, 7, 215, 132, 192, 132, 169, 0, 70, 158, 227, 207, 140, 220, 35, 11, 98, 0, 64, 51, 191, 137, 175, 3, 163, 98, 70, 227, 252, 102, 4, 179, 149, 191, 185, 17, 132, 3, 94, 111, 116, 136, 120, 189, 197, 112, 77, 144, 210, 226, 136, 75, 172, 69, 33, 8, 157, 153 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("d406be20-d364-43c5-84bf-4d3e3be43ae0"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 181, 134, 23, 0, 141, 10, 75, 69, 235, 56, 144, 161, 108, 228, 198, 213, 222, 189, 3, 227, 148, 222, 76, 228, 135, 234, 121, 15, 159, 164, 145, 158, 158, 85, 18, 56, 121, 122, 165, 15, 22, 114, 61, 177, 231, 53, 87, 114, 26, 111, 41, 93, 181, 133, 55, 152, 28, 123, 102, 118, 228, 175, 243, 224 }, new byte[] { 102, 32, 171, 7, 184, 237, 44, 8, 223, 7, 77, 44, 167, 235, 66, 56, 68, 150, 125, 141, 35, 74, 238, 34, 59, 71, 214, 148, 106, 165, 130, 16, 38, 85, 37, 43, 211, 52, 246, 191, 69, 59, 242, 35, 199, 39, 123, 231, 241, 110, 235, 187, 188, 48, 134, 1, 202, 228, 19, 1, 251, 228, 87, 223, 158, 12, 215, 172, 180, 139, 230, 129, 169, 105, 216, 5, 72, 92, 146, 156, 153, 228, 38, 39, 134, 211, 230, 143, 166, 157, 140, 241, 80, 111, 131, 142, 204, 80, 138, 166, 215, 158, 166, 154, 208, 19, 118, 250, 8, 144, 80, 95, 118, 112, 126, 87, 134, 61, 94, 165, 221, 51, 14, 57, 244, 98, 174, 36 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("e798134f-8d1b-41aa-98c1-c8914240366d"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 79, 157, 39, 173, 220, 192, 67, 207, 57, 145, 15, 178, 244, 11, 224, 176, 147, 134, 173, 119, 70, 125, 214, 65, 6, 220, 149, 151, 73, 150, 97, 126, 33, 28, 174, 44, 23, 90, 100, 185, 165, 232, 53, 250, 134, 67, 164, 161, 24, 87, 189, 173, 151, 211, 126, 144, 224, 232, 77, 140, 56, 245, 209, 240 }, new byte[] { 198, 7, 195, 163, 236, 56, 208, 0, 74, 62, 182, 33, 189, 69, 231, 22, 88, 254, 206, 189, 208, 243, 215, 132, 11, 16, 249, 31, 216, 8, 91, 104, 239, 105, 44, 81, 7, 15, 185, 170, 231, 226, 151, 225, 8, 178, 23, 244, 106, 238, 174, 56, 31, 84, 4, 6, 61, 79, 178, 5, 105, 210, 81, 133, 179, 208, 55, 128, 170, 223, 58, 238, 42, 172, 189, 66, 23, 239, 99, 174, 88, 156, 74, 143, 218, 45, 97, 236, 49, 220, 98, 22, 164, 71, 176, 69, 253, 104, 66, 112, 161, 253, 192, 136, 180, 17, 247, 222, 147, 25, 211, 178, 45, 87, 146, 17, 226, 138, 21, 67, 244, 21, 218, 186, 76, 225, 150, 83 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f0b84747-fbed-43e1-9cd1-ecf2e1bd3cc0"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 136, 187, 167, 251, 125, 79, 24, 204, 142, 213, 106, 154, 219, 125, 169, 175, 190, 155, 174, 25, 79, 73, 65, 105, 123, 136, 112, 9, 42, 64, 50, 192, 73, 89, 101, 95, 180, 9, 94, 84, 128, 44, 71, 230, 203, 44, 117, 249, 145, 118, 124, 69, 81, 182, 169, 112, 203, 166, 111, 126, 168, 196, 248, 191 }, new byte[] { 158, 50, 43, 204, 181, 133, 46, 50, 65, 127, 212, 229, 185, 253, 208, 146, 107, 224, 96, 223, 46, 210, 154, 15, 127, 135, 137, 31, 89, 158, 94, 134, 147, 236, 153, 59, 34, 134, 121, 248, 221, 64, 247, 244, 131, 24, 98, 253, 28, 194, 3, 12, 53, 235, 243, 165, 65, 111, 38, 131, 109, 40, 151, 55, 204, 65, 37, 76, 10, 36, 242, 156, 252, 211, 133, 9, 117, 183, 65, 165, 219, 48, 125, 147, 163, 193, 199, 119, 133, 59, 51, 82, 240, 135, 156, 116, 131, 70, 32, 33, 144, 255, 152, 10, 128, 178, 183, 89, 136, 115, 33, 148, 200, 74, 89, 0, 241, 205, 217, 224, 172, 187, 4, 203, 210, 90, 238, 152 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: new Guid("f2dbff0f-0ccb-4cc3-91e3-d068431af710"),
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 224, 130, 174, 229, 162, 35, 202, 94, 174, 175, 165, 255, 221, 117, 239, 120, 98, 221, 36, 230, 199, 104, 163, 54, 109, 90, 188, 93, 48, 244, 120, 42, 106, 80, 116, 187, 226, 123, 109, 174, 245, 2, 227, 38, 116, 72, 250, 35, 245, 156, 12, 27, 232, 247, 67, 233, 251, 65, 175, 151, 171, 2, 46, 10 }, new byte[] { 171, 106, 62, 202, 140, 236, 30, 122, 1, 40, 37, 206, 110, 89, 166, 38, 173, 246, 175, 180, 64, 137, 85, 205, 181, 78, 156, 224, 255, 15, 173, 198, 221, 17, 128, 24, 138, 25, 111, 224, 217, 179, 51, 154, 176, 47, 246, 6, 201, 215, 36, 42, 191, 62, 237, 124, 202, 135, 200, 185, 29, 75, 117, 249, 147, 84, 25, 231, 75, 171, 29, 197, 203, 210, 17, 34, 59, 248, 159, 233, 42, 74, 213, 114, 190, 72, 146, 167, 233, 145, 34, 95, 184, 79, 188, 163, 32, 54, 253, 90, 179, 20, 62, 232, 195, 155, 90, 223, 20, 130, 190, 106, 12, 152, 36, 163, 14, 158, 69, 71, 229, 124, 178, 127, 143, 125, 253, 87 } });
        }
    }
}
